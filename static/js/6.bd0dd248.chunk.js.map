{"version":3,"sources":["hooks/useChapter.tsx","p2.mp4","pages/chapters/Chapter2.tsx"],"names":["useChapter","ref","needsCamera","store","setState","isCameraEnabled","play","useCallback","current","pause","rewind","currentTime","getIsPlaying","paused","ended","readyState","getProgress","duration","setProgress","progress","seekTimeDelta","delta","target","clippedTarget","Math","min","max","onClick","useEffect","updateStore","chapter","intention","video","addEventListener","removeEventListener","undefined","Chapter2","useRef","style","boxSizing","outline","width","height","src","videoSrc"],"mappings":"8FAAA,oDAIO,SAASA,EACdC,EACAC,GAEAC,IAAMC,SAAS,CAAEC,gBAAiBH,IAElC,IAAMI,EAAOC,uBAAY,kCAAMN,EAAIO,eAAV,aAAM,EAAaF,SAAQ,CAACL,IAC/CQ,EAAQF,uBAAY,kCAAMN,EAAIO,eAAV,aAAM,EAAaC,UAAS,CAACR,IACjDS,EAASH,uBAAY,WACrBN,EAAIO,UAASP,EAAIO,QAAQG,YAAc,KAC1C,CAACV,IACEW,EAAeL,uBAAY,WAC/B,QAAKN,EAAIO,YAEPP,EAAIO,QAAQG,YAAc,IACzBV,EAAIO,QAAQK,SACZZ,EAAIO,QAAQM,OACbb,EAAIO,QAAQO,WAAa,KAE1B,CAACd,IAEEe,EAAcT,uBAAY,WAC9B,OAAKN,EAAIO,QACFP,EAAIO,QAAQG,YAAcV,EAAIO,QAAQS,SADpB,IAExB,CAAChB,IAEEiB,EAAcX,uBAClB,SAACY,GACMlB,EAAIO,UACTP,EAAIO,QAAQG,YAAcQ,EAAWlB,EAAIO,QAAQS,YAEnD,CAAChB,IAGGmB,EAAgBb,uBACpB,SAACc,GACC,GAAKpB,EAAIO,QAAT,CACA,IAAMc,EAASrB,EAAIO,QAAQG,YAAcU,EACnCE,EAAgBC,KAAKC,IAAID,KAAKE,IAAI,EAAGJ,GAASrB,EAAIO,QAAQS,UAChEhB,EAAIO,QAAQG,YAAcY,KAE5B,CAACtB,IAEG0B,EAAUpB,uBAAY,kBAAOK,IAAiBH,IAAUH,MAAS,CACrEM,EACAH,EACAH,IAGFsB,qBAAU,WAAO,IAAD,QACRC,EAAc,WAClB,OAAO1B,IAAMC,SAAS,CACpB0B,QAAS,CACPxB,OACAG,QACAC,SACAE,eACAI,cACAE,cACAE,gBACAD,SAAUH,IACVe,UAAWnB,IAAiB,OAAS,YAKrCoB,EAAQ/B,EAAIO,QAOlB,OALA,UAAAP,EAAIO,eAAJ,SAAayB,iBAAiB,QAASN,GACvC,UAAA1B,EAAIO,eAAJ,SAAayB,iBAAiB,UAAWJ,GACzC,UAAA5B,EAAIO,eAAJ,SAAayB,iBAAiB,QAASJ,GACvC,UAAA5B,EAAIO,eAAJ,SAAayB,iBAAiB,aAAcJ,GAC5CA,IACO,WACA,OAALG,QAAK,IAALA,KAAOE,oBAAoB,QAASP,GAC/B,OAALK,QAAK,IAALA,KAAOE,oBAAoB,OAAQL,GAC9B,OAALG,QAAK,IAALA,KAAOE,oBAAoB,QAASL,GAC/B,OAALG,QAAK,IAALA,KAAOE,oBAAoB,aAAcL,GACzC1B,IAAMC,SAAS,CAAE0B,aAASK,OAE3B,CACDvB,EACAH,EACAH,EACAU,EACAN,EACAQ,EACAE,EACAnB,EACA0B,M,2FC7FW,MAA0B,+B,gBCG1B,SAASS,IACtB,IAAMnC,EAAMoC,iBAAyB,MAGrC,OAFArC,YAAWC,GAAK,GAGd,uBACEA,IAAKA,EACLqC,MAAO,CACLC,UAAW,aACXC,QAAS,OACTC,MAAO,OACPC,OAAQ,QAEVD,MAAM,OACNC,OAAO,OACPC,IAAKC","file":"static/js/6.bd0dd248.chunk.js","sourcesContent":["import { useCallback, useEffect } from \"react\";\nimport { store } from \"../store/store\";\nimport { IMediaElement } from \"../IMediaElement\";\n\nexport function useChapter(\n  ref: React.RefObject<IMediaElement>,\n  needsCamera: boolean\n) {\n  store.setState({ isCameraEnabled: needsCamera });\n\n  const play = useCallback(() => ref.current?.play(), [ref]);\n  const pause = useCallback(() => ref.current?.pause(), [ref]);\n  const rewind = useCallback(() => {\n    if (ref.current) ref.current.currentTime = 0;\n  }, [ref]);\n  const getIsPlaying = useCallback(() => {\n    if (!ref.current) return false;\n    return !!(\n      ref.current.currentTime > 0 &&\n      !ref.current.paused &&\n      !ref.current.ended &&\n      ref.current.readyState > 2\n    );\n  }, [ref]);\n\n  const getProgress = useCallback(() => {\n    if (!ref.current) return 0;\n    return ref.current.currentTime / ref.current.duration;\n  }, [ref]);\n\n  const setProgress = useCallback(\n    (progress: number) => {\n      if (!ref.current) return;\n      ref.current.currentTime = progress * ref.current.duration;\n    },\n    [ref]\n  );\n\n  const seekTimeDelta = useCallback(\n    (delta: number) => {\n      if (!ref.current) return;\n      const target = ref.current.currentTime + delta;\n      const clippedTarget = Math.min(Math.max(0, target), ref.current.duration);\n      ref.current.currentTime = clippedTarget;\n    },\n    [ref]\n  );\n  const onClick = useCallback(() => (getIsPlaying() ? pause() : play()), [\n    getIsPlaying,\n    pause,\n    play,\n  ]);\n\n  useEffect(() => {\n    const updateStore = () => {\n      return store.setState({\n        chapter: {\n          play,\n          pause,\n          rewind,\n          getIsPlaying,\n          getProgress,\n          setProgress,\n          seekTimeDelta,\n          progress: getProgress(),\n          intention: getIsPlaying() ? \"PLAY\" : \"PAUSE\",\n        },\n      });\n    };\n\n    const video = ref.current;\n\n    ref.current?.addEventListener(\"click\", onClick);\n    ref.current?.addEventListener(\"playing\", updateStore);\n    ref.current?.addEventListener(\"pause\", updateStore);\n    ref.current?.addEventListener(\"timeupdate\", updateStore);\n    updateStore();\n    return () => {\n      video?.removeEventListener(\"click\", onClick);\n      video?.removeEventListener(\"play\", updateStore);\n      video?.removeEventListener(\"pause\", updateStore);\n      video?.removeEventListener(\"timeupdate\", updateStore);\n      store.setState({ chapter: undefined });\n    };\n  }, [\n    getIsPlaying,\n    pause,\n    play,\n    getProgress,\n    rewind,\n    setProgress,\n    seekTimeDelta,\n    ref,\n    onClick,\n  ]);\n}\n","export default __webpack_public_path__ + \"static/media/p2.2bd44c1d.mp4\";","import { useRef } from \"react\";\nimport videoSrc from \"./../../p2.mp4\";\nimport { useChapter } from \"../../hooks/useChapter\";\nexport default function Chapter2() {\n  const ref = useRef<HTMLVideoElement>(null);\n  useChapter(ref, false);\n\n  return (\n    <video\n      ref={ref}\n      style={{\n        boxSizing: \"border-box\",\n        outline: \"none\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      src={videoSrc}\n    ></video>\n  );\n}\n"],"sourceRoot":""}