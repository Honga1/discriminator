{"version":3,"sources":["hooks/useChapter.tsx","hooks/useAnimationFrame.tsx","libs/math.ts","chapters/chapter2/chapter2.mp4","hooks/usePredictions.tsx","hooks/useAsyncMemo.tsx","chapters/chapter2/part1/alpha.mp4","chapters/chapter2/part1/brett-mask-alpha.png","chapters/chapter2/part1/brett-mask-map.png","chapters/chapter2/part1/mask.ts","chapters/chapter2/part1/mask.mp4","chapters/chapter2/part1/SceneContext.tsx","chapters/chapter2/part1/Mask.tsx","libs/v3.ts","chapters/chapter2/part1/chunk.ts","chapters/chapter2/part1/RainbowVomit.tsx","chapters/chapter2/part1/StaticBackground.tsx","chapters/chapter2/part1/WorldOffset.tsx","chapters/chapter2/part1/Part1.tsx","hooks/useWebcam.tsx","chapters/chapter2/Chapter2.tsx"],"names":["useChapter","ref","needsCamera","useEffect","store","setState","isCameraEnabled","play","useCallback","current","pause","rewind","currentTime","getIsPlaying","paused","ended","readyState","getProgress","duration","setProgress","progress","seekTimeDelta","delta","target","clippedTarget","Math","min","max","onClick","updateStore","chapter","intention","video","addEventListener","removeEventListener","undefined","useAnimationFrame","frameRate","callback","requestRef","useRef","previousTimeRef","animate","time","a","deltaTime","requestAnimationFrame","cancelAnimationFrame","lerp","from","to","amount","clamp","value","lerpTheta","circleAt","PI","removeLoops","distance","floor","unloopedDistance","isLeft","offset","usePredictions","webcam","predictions","model","factory","deps","initial","useState","val","setVal","cancel","promise","then","useAsyncMemo","console","log","modelPromise","filters","iirFilterCoeffs","Fili","lowpass","order","characteristic","Fs","Fc","BW","gain","preGain","updatePredictions","HTMLMediaElement","HAVE_METADATA","estimateFaces","input","returnTensors","flipHorizontal","predictIrises","pixelScalePredictions","map","prediction","predictionIndex","scaledMesh","getScaledMesh","mesh","getMesh","meshIndex","x","y","z","vertexFilters","singleStep","boundingBox","getBoundingBox","orthoVectors","getOrthoVectors","mouthOpened","getMouthPosition","topHead","bottomHead","topLip","bottomLip","headSize","Vector3","distanceTo","mouthGap","videoWidth","videoHeight","aspect","topLeft","bottomRight","forward","b","c","side1","subVectors","side2","crossVectors","normalize","getForwardVector","left","a2","b2","c2","side3","side4","getLeftVector","up","sub","getUpVector","facemesh","mediapipeFacemesh","shouldLoadIrisModel","maxFaces","maskMesh","OBJLoader","parse","children","TRIANGULATION","UV_COORDS","SceneContext","createContext","Mask","track","maskType","textures","useMemo","mapVideo","document","createElement","src","maskSrc","muted","alphaMapVideo","alphaSrc","videoMaskMap","VideoTexture","videoMaskAlpha","encoding","sRGBEncoding","webcamTexture","brettsFaceAlbedo","TextureLoader","load","brettMaskMap","brettsFaceAlpha","brettMaskAlpha","alpha","albedo","own","brett","mask","useContext","maskTexture","geometry","uvs","getAttribute","forEach","vertexIndex","index","uv","u","v","setXY","needsUpdate","useFrame","center","Vector2","positions","vertex","setXYZ","nextU","nextV","object","maskMaterial","attach","uniforms-map-value","uniforms-alphaMap-value","ShaderMaterial","fragmentShader","vertexShader","transparent","uniforms","alphaMap","V3O","product","multiply","manhattanLength","VECTOR_LENGTH","add","sum","vectors","result","vectorIndex","length","vector","fromArray","subtract","base","subtraction","multiplier","divide","divisor","scale","factor","sign","normalise","euclideanLength","zero","rotateAroundAxis","axis","angle","quaternion","rotationMatrix","QO","fromAxisRotation","intermediateRotation","rotated","conjugate","extractYZW","extractXY","extractXZ","extractYZ","sqrEuclideanLength","crossProduct","ax","ay","az","bx","by","bz","sqrEuclideanDistance","euclideanDistance","down","right","forwards","back","copy","flipX","flipY","flipZ","random","randomRange","array","Error","fromVector3","rotation","sin","cos","sinAxis","chunkMesh","colors","Color","useGravityParticles","particleCount","gravity","startAtObject","setInstance","afterUpdate","shouldReset","particles","getVelocity","direction","context","creator","count","reset","objectPosition","getWorldPosition","getWorldDirection","position","getWorldPositionAndDirection","trackingPosition","velocity","startOffset","resetAt","Array","_","clock","getElapsedTime","push","RainbowVomit","targetAspect","aRObject","instances","viewport","height","set","worldPosition","lookAt","clone","negate","useTrackedObject","setColorAt","instanceColor","matrix","transformHolder","updateMatrix","getMatrixFromTransform","setMatrixAt","range","visible","instanceMatrix","args","InstancedBufferGeometry","MeshBasicMaterial","toneMapped","frustumCulled","Object3D","matrixAutoUpdate","StaticBackground","memo","u_time","useThree","material","width","WorldOffset","Part1","webcamStream","useStore","state","window","innerWidth","innerHeight","setAspect","srcObject","getVideoTracks","getSettings","videoAspect","useWebcam","hasFirstPrediction","setHasFirstPrediction","isFirstPredictionComplete","style","orthographic","Provider","Chapter2","part","setPart","ontimeupdate","event","nativeEvent","seconds","round","onTimeUpdate","Box","align","overflow","boxSizing","outline","videoSrc"],"mappings":"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,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,IACA,GACA,GACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,EACA,IACA,GACA,GACA,IACA,IACA,IACA,EACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,EACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,EACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,IACA,EACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,EACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,EACA,GACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,EACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,GACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,EACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,EACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,EACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,GACA,GACA,EACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,EACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,EACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,EACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,EACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,EACA,GACA,IACA,GACA,IACA,IACA,IACA,EACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,EACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,EACA,IACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAoBWC,EAAqC,CAChD,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAiB,kBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAiB,kBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAiB,kBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,iBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,eAAiB,kBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,eAAiB,kBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAiB,kBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,eAAiB,iBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,eAAiB,kBAClB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,iBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,iBAAmB,kBACpB,CAAC,gBAAkB,kBACnB,CAAC,gBAAkB,kBACnB,CAAC,cAAgB,kBACjB,CAAC,iBAAmB,kBAC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","file":"static/js/7.3d9c0512.chunk.js","sourcesContent":["import { useCallback, useEffect } from \"react\";\nimport { store } from \"../store/store\";\nimport { IMediaElement } from \"../IMediaElement\";\n\nexport function useChapter(\n  ref: React.RefObject<IMediaElement>,\n  needsCamera: boolean\n) {\n  useEffect(() => {\n    store.setState({ isCameraEnabled: needsCamera });\n  }, [needsCamera]);\n\n  const play = useCallback(() => ref.current?.play(), [ref]);\n  const pause = useCallback(() => ref.current?.pause(), [ref]);\n  const rewind = useCallback(() => {\n    if (ref.current) ref.current.currentTime = 0;\n  }, [ref]);\n  const getIsPlaying = useCallback(() => {\n    if (!ref.current) return false;\n    return !!(\n      ref.current.currentTime > 0 &&\n      !ref.current.paused &&\n      !ref.current.ended &&\n      ref.current.readyState > 2\n    );\n  }, [ref]);\n\n  const getProgress = useCallback(() => {\n    if (!ref.current) return 0;\n    return ref.current.currentTime / ref.current.duration;\n  }, [ref]);\n\n  const setProgress = useCallback(\n    (progress: number) => {\n      if (!ref.current) return;\n      ref.current.currentTime = progress * ref.current.duration;\n    },\n    [ref]\n  );\n\n  const seekTimeDelta = useCallback(\n    (delta: number) => {\n      if (!ref.current) return;\n      const target = ref.current.currentTime + delta;\n      const clippedTarget = Math.min(Math.max(0, target), ref.current.duration);\n      ref.current.currentTime = clippedTarget;\n    },\n    [ref]\n  );\n  const onClick = useCallback(() => (getIsPlaying() ? pause() : play()), [\n    getIsPlaying,\n    pause,\n    play,\n  ]);\n\n  useEffect(() => {\n    const updateStore = () => {\n      return store.setState({\n        chapter: {\n          play,\n          pause,\n          rewind,\n          getIsPlaying,\n          getProgress,\n          setProgress,\n          seekTimeDelta,\n          progress: getProgress(),\n          intention: getIsPlaying() ? \"PLAY\" : \"PAUSE\",\n        },\n      });\n    };\n\n    const video = ref.current;\n\n    ref.current?.addEventListener(\"click\", onClick);\n    ref.current?.addEventListener(\"playing\", updateStore);\n    ref.current?.addEventListener(\"pause\", updateStore);\n    ref.current?.addEventListener(\"timeupdate\", updateStore);\n    updateStore();\n    return () => {\n      video?.removeEventListener(\"click\", onClick);\n      video?.removeEventListener(\"play\", updateStore);\n      video?.removeEventListener(\"pause\", updateStore);\n      video?.removeEventListener(\"timeupdate\", updateStore);\n      store.setState({ chapter: undefined });\n    };\n  }, [\n    getIsPlaying,\n    pause,\n    play,\n    getProgress,\n    rewind,\n    setProgress,\n    seekTimeDelta,\n    ref,\n    onClick,\n  ]);\n}\n","import { useCallback, useEffect, useRef } from \"react\";\n\nexport const useAnimationFrame = (\n  frameRate: number,\n  callback: (deltaTime: number) => void | Promise<void>\n) => {\n  const requestRef = useRef<number>();\n  const previousTimeRef = useRef<number>();\n\n  const animate = useCallback(\n    async (time: number) => {\n      if (previousTimeRef.current === undefined) {\n        previousTimeRef.current = time;\n      }\n      const deltaTime = time - previousTimeRef.current;\n      if (deltaTime > 1000 / frameRate) {\n        await callback(deltaTime);\n        previousTimeRef.current = time;\n      }\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    [callback, frameRate]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n    return () => {\n      requestRef.current && cancelAnimationFrame(requestRef.current);\n    };\n  }, [animate]); // Make sure the effect runs only once\n};\n","export function lerp(from: number, to: number, amount: number): number {\n  amount = amount < 0 ? 0 : amount\n  amount = amount > 1 ? 1 : amount\n  return from + (to - from) * amount\n}\n\nexport const clamp = (value: number, min: number, max: number): number =>\n  Math.min(Math.max(min, value), max)\n\nexport function lerpTheta(\n  from: number,\n  to: number,\n  amount: number,\n  circleAt: number = Math.PI * 2\n) {\n  const removeLoops = (distance: number) =>\n    clamp(distance - Math.floor(distance / circleAt) * circleAt, 0, circleAt)\n\n  const distance = to - from\n  const unloopedDistance = removeLoops(distance)\n  const isLeft = unloopedDistance > Math.PI\n  const offset = isLeft ? unloopedDistance - Math.PI * 2 : unloopedDistance\n  return lerp(from, from + offset, amount)\n}\n\nexport const valuesAreWithinDistance = (\n  valueA: number,\n  valueB: number,\n  delta: number\n) => {\n  const highest = Math.max(valueA, valueB)\n  const lowest = Math.min(valueA, valueB)\n\n  return highest - delta < lowest\n}\n\nexport const rotationsAreWithinAngle = (\n  rotationA: number,\n  rotationB: number,\n  angle: number\n) => {\n  const normalisedA = rotationA % (Math.PI * 2)\n  const normalisedB = rotationB % (Math.PI * 2)\n\n  return valuesAreWithinDistance(normalisedA, normalisedB, angle)\n}\n","export default __webpack_public_path__ + \"static/media/chapter2.2bd44c1d.mp4\";","import * as facemesh from \"@tensorflow-models/face-landmarks-detection\";\nimport { AnnotatedPrediction } from \"@tensorflow-models/face-landmarks-detection/dist/mediapipe-facemesh\";\nimport * as Fili from \"fili\";\nimport { useCallback, useRef } from \"react\";\nimport { Vector3 } from \"three\";\nimport { useAnimationFrame } from \"../hooks/useAnimationFrame\";\nimport { clamp } from \"../libs/math\";\nimport { V2 } from \"../libs/v2\";\nimport { V3 } from \"../libs/v3\";\nimport { useAsyncMemo } from \"./useAsyncMemo\";\n\nexport interface Predictions {\n  scaledMesh: V3[];\n  mesh: V3[];\n  boundingBox: {\n    topLeft: V2;\n    bottomRight: V2;\n  };\n\n  orthoVectors: {\n    up: Vector3;\n    left: Vector3;\n    forward: Vector3;\n  };\n\n  mouthOpened: number;\n}\n\nexport function usePredictions(webcam: HTMLVideoElement) {\n  const predictions = useRef<Predictions[]>([]);\n  const model = useModel();\n  const filters = useRef<any[][]>([]);\n\n  const iirFilterCoeffs = useRef(\n    new Fili.CalcCascades().lowpass({\n      order: 3,\n      characteristic: \"butterworth\",\n      Fs: 30,\n      Fc: 6,\n      BW: 1,\n      gain: 0,\n      preGain: false,\n    })\n  );\n\n  const updatePredictions = useCallback(async () => {\n    if (!model) return;\n    const video = webcam;\n\n    if (video.readyState < HTMLMediaElement.HAVE_METADATA) return;\n\n    const pixelScalePredictions = await model.estimateFaces({\n      input: webcam,\n      returnTensors: false,\n      flipHorizontal: false,\n      predictIrises: false,\n    });\n\n    predictions.current = pixelScalePredictions.map(\n      (prediction, predictionIndex) => {\n        const scaledMesh = getScaledMesh(prediction, video);\n        const mesh = getMesh(prediction, video).map(([x, y, z], meshIndex) => {\n          const vertexFilters = filters.current[predictionIndex]?.[\n            meshIndex\n          ] ?? [\n            new Fili.IirFilter(iirFilterCoeffs.current),\n            new Fili.IirFilter(iirFilterCoeffs.current),\n            new Fili.IirFilter(iirFilterCoeffs.current),\n          ];\n\n          filters.current[predictionIndex] =\n            filters.current[predictionIndex] ?? [];\n\n          filters.current[predictionIndex]![meshIndex] = vertexFilters;\n\n          return [\n            vertexFilters[0].singleStep(x),\n            vertexFilters[1].singleStep(y),\n            vertexFilters[2].singleStep(z),\n          ] as V3;\n        });\n        const boundingBox = getBoundingBox(prediction, video);\n        const orthoVectors = getOrthoVectors(mesh);\n        const mouthOpened = getMouthPosition(mesh);\n\n        return {\n          scaledMesh,\n          boundingBox,\n          orthoVectors,\n          mouthOpened,\n          mesh,\n        };\n      }\n    );\n  }, [model, webcam]);\n\n  useAnimationFrame(30, updatePredictions);\n\n  return predictions;\n}\nfunction getMouthPosition(scaledMesh: V3[]) {\n  const topHead = scaledMesh[10]!;\n  const bottomHead = scaledMesh[152]!;\n\n  const topLip = scaledMesh[12]!;\n  const bottomLip = scaledMesh[15]!;\n\n  const headSize = new Vector3(...topHead).distanceTo(\n    new Vector3(...bottomHead)\n  );\n  const mouthGap = new Vector3(...topLip).distanceTo(new Vector3(...bottomLip));\n\n  const empiricalMouthOpenAmount = clamp(\n    (mouthGap / headSize - 0.03) / 0.15,\n    0,\n    1\n  );\n  return empiricalMouthOpenAmount;\n}\n\nfunction getScaledMesh(\n  prediction: AnnotatedPrediction,\n  video: HTMLVideoElement\n) {\n  return (prediction.scaledMesh as V3[]).map(([x, y, z]) => {\n    return [\n      x / video.videoWidth,\n      -y / video.videoHeight,\n      -z / video.videoWidth,\n    ] as V3;\n  });\n}\n\nfunction getMesh(prediction: AnnotatedPrediction, video: HTMLVideoElement) {\n  const aspect = video.videoWidth / video.videoHeight;\n  if (video.videoHeight > video.videoWidth) {\n    return (prediction.mesh as V3[]).map(([x, y, z]) => {\n      return [x / 192, (-y / 192) * aspect, -z / 192] as V3;\n    });\n  } else {\n    return (prediction.mesh as V3[]).map(([x, y, z]) => {\n      const correctedX = (x - 192 / 2) / 192 / aspect + 0.5;\n      return [correctedX, -y / 192, -z / 192] as V3;\n    });\n  }\n}\n\nfunction getBoundingBox(\n  prediction: AnnotatedPrediction,\n  video: HTMLVideoElement\n) {\n  const topLeft = [\n    (prediction.boundingBox.topLeft as V2)[0] / video.videoWidth,\n    -(prediction.boundingBox.topLeft as V2)[1] / video.videoHeight,\n  ] as V2;\n  const bottomRight = [\n    (prediction.boundingBox.bottomRight as V2)[0] / video.videoWidth,\n    -(prediction.boundingBox.bottomRight as V2)[1] / video.videoHeight,\n  ] as V2;\n  const boundingBox = {\n    topLeft: topLeft,\n    bottomRight: bottomRight,\n  };\n  return boundingBox;\n}\n\nfunction getOrthoVectors(mesh: V3[]) {\n  const forward = getForwardVector(mesh);\n  const left = getLeftVector(mesh);\n  const up = getUpVector(mesh);\n  return { up, forward, left };\n}\n\nfunction getUpVector(mesh: V3[]) {\n  return new Vector3(...mesh[199]!).sub(new Vector3(...mesh[9]!)).normalize();\n}\n\nfunction getLeftVector(mesh: V3[]) {\n  const a2 = new Vector3(...mesh[4]!);\n  const b2 = new Vector3(...mesh[10]!);\n  const c2 = new Vector3(...mesh[152]!);\n  const side3 = new Vector3().subVectors(a2, b2);\n  const side4 = new Vector3().subVectors(a2, c2);\n  const facingSidewaysFromHead = new Vector3()\n    .crossVectors(side3, side4)\n    .normalize();\n  return facingSidewaysFromHead;\n}\n\nfunction getForwardVector(mesh: V3[]) {\n  const a = new Vector3(mesh[151]![0]!, mesh[151]![1]!, mesh[151]![2]!);\n  const b = new Vector3(mesh[285]![0]!, mesh[285]![1]!, mesh[285]![2]!);\n  const c = new Vector3(mesh[55]![0]!, mesh[55]![1]!, mesh[55]![2]!);\n\n  const side1 = new Vector3().subVectors(a, b);\n  const side2 = new Vector3().subVectors(a, c);\n  const facingOutFromHead = new Vector3()\n    .crossVectors(side2, side1)\n    .normalize();\n  return facingOutFromHead;\n}\n\nconst modelPromise = facemesh.load(\n  facemesh.SupportedPackages.mediapipeFacemesh,\n  {\n    shouldLoadIrisModel: false,\n    maxFaces: 1,\n  }\n);\n\nexport function useModel() {\n  return useAsyncMemo(\n    async () => {\n      console.log(\"Loading model\");\n      const model = await modelPromise;\n\n      console.log(\"Loaded model\");\n      return model;\n    },\n    [],\n    undefined\n  );\n}\n","import { DependencyList, useEffect, useState } from \"react\";\n\nexport function useAsyncMemo<T extends any | undefined>(\n  factory: () => Promise<T> | undefined | null,\n  deps: DependencyList,\n  initial: T\n): T {\n  const [val, setVal] = useState<T>(initial);\n  useEffect(() => {\n    let cancel = false;\n    const promise = factory();\n    if (promise === undefined || promise === null) return;\n    promise.then((val) => {\n      if (!cancel) {\n        setVal(val);\n      }\n    });\n    return () => {\n      cancel = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  return val;\n}\n","export default __webpack_public_path__ + \"static/media/alpha.6aa3a23c.mp4\";","export default __webpack_public_path__ + \"static/media/brett-mask-alpha.26fca7d3.png\";","export default __webpack_public_path__ + \"static/media/brett-mask-map.6d3e2f11.png\";","import { Mesh } from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n\nexport const maskMesh = new OBJLoader().parse(`v 0.000000 -3.406404 5.979507\n  v 0.000000 -1.126865 7.475604\n  v 0.000000 -2.089024 6.058267\n  v -0.463928 0.955357 6.633583\n  v 0.000000 -0.463170 7.586580\n  v 0.000000 0.365669 7.242870\n  v 0.000000 2.473255 5.788627\n  v -4.253081 2.577646 3.279702\n  v 0.000000 4.019042 5.284764\n  v 0.000000 4.885979 5.385258\n  v 0.000000 8.261778 4.481535\n  v 0.000000 -3.706811 5.864924\n  v 0.000000 -3.918301 5.569430\n  v 0.000000 -3.994436 5.219482\n  v 0.000000 -4.542400 5.404754\n  v 0.000000 -4.745577 5.529457\n  v 0.000000 -5.019567 5.601448\n  v 0.000000 -5.365123 5.535441\n  v 0.000000 -6.149624 5.071372\n  v 0.000000 -1.501095 7.112196\n  v -0.416106 -1.466449 6.447657\n  v -7.087960 5.434801 0.099620\n  v -2.628639 2.035898 3.848121\n  v -3.198363 1.985815 3.796952\n  v -3.775151 2.039402 3.646194\n  v -4.465819 2.422950 3.155168\n  v -2.164289 2.189867 3.851822\n  v -3.208229 3.223926 4.115822\n  v -2.673803 3.205337 4.092203\n  v -3.745193 3.165286 3.972409\n  v -4.161018 3.059069 3.719554\n  v -5.062006 1.934418 2.776093\n  v -2.266659 -7.425768 4.389812\n  v -4.445859 2.663991 3.173422\n  v -7.214530 2.263009 0.073150\n  v -5.799793 2.349546 2.204059\n  v -2.844939 -0.720868 4.433130\n  v -0.711452 -3.329355 5.877044\n  v -0.606033 -3.924562 5.444923\n  v -1.431615 -3.500953 5.496189\n  v -1.914910 -3.803146 5.028930\n  v -1.131043 -3.973937 5.189648\n  v -1.563548 -4.082763 4.842263\n  v -2.650112 -5.003649 4.188483\n  v -0.427049 -1.094134 7.360529\n  v -0.496396 -0.475659 7.440358\n  v -5.253307 3.881582 3.363159\n  v -1.718698 0.974609 4.558359\n  v -1.608635 -0.942516 5.814193\n  v -1.651267 -0.610868 5.581319\n  v -4.765501 -0.701554 3.534632\n  v -0.478306 0.295766 7.101013\n  v -3.734964 4.508230 4.550454\n  v -4.588603 4.302037 4.048484\n  v -6.279331 6.615427 1.425850\n  v -1.220941 4.142165 5.106035\n  v -2.193489 3.100317 4.000575\n  v -3.102642 -4.352984 4.095905\n  v -6.719682 -4.788645 -1.745401\n  v -1.193824 -1.306795 5.737747\n  v -0.729766 -1.593712 5.833208\n  v -2.456206 -4.342621 4.283884\n  v -2.204823 -4.304508 4.162499\n  v -4.985894 4.802461 3.751977\n  v -1.592294 -1.257709 5.456949\n  v -2.644548 4.524654 4.921559\n  v -2.760292 5.100971 5.015990\n  v -3.523964 8.005976 3.729163\n  v -5.599763 5.715470 2.724259\n  v -3.063932 6.566144 4.529981\n  v -5.720968 4.254584 2.830852\n  v -6.374393 4.785590 1.591691\n  v -0.672728 -3.688016 5.737804\n  v -1.262560 -3.787691 5.417779\n  v -1.732553 -3.952767 5.000579\n  v -1.043625 -1.464973 5.662455\n  v -2.321234 -4.329069 4.258156\n  v -2.056846 -4.477671 4.520883\n  v -2.153084 -4.276322 4.038093\n  v -0.946874 -1.035249 6.512274\n  v -1.469132 -4.036351 4.604908\n  v -1.024340 -3.989851 4.926693\n  v -0.533422 -3.993222 5.138202\n  v -0.769720 -6.095394 4.985883\n  v -0.699606 -5.291850 5.448304\n  v -0.669687 -4.949770 5.509612\n  v -0.630947 -4.695101 5.449371\n  v -0.583218 -4.517982 5.339869\n  v -1.537170 -4.423206 4.745470\n  v -1.615600 -4.475942 4.813632\n  v -1.729053 -4.618680 4.854463\n  v -1.838624 -4.828746 4.823737\n  v -2.368250 -3.106237 4.868096\n  v -7.542244 -1.049282 -2.431321\n  v 0.000000 -1.724003 6.601390\n  v -1.826614 -4.399531 4.399021\n  v -1.929558 -4.411831 4.497052\n  v -0.597442 -2.013686 5.866456\n  v -1.405627 -1.714196 5.241087\n  v -0.662449 -1.819321 5.863759\n  v -2.342340 0.572222 4.294303\n  v -3.327324 0.104863 4.113860\n  v -1.726175 -0.919165 5.273355\n  v -5.133204 7.485602 2.660442\n  v -4.538641 6.319907 3.683424\n  v -3.986562 5.109487 4.466315\n  v -2.169681 -5.440433 4.455874\n  v -1.395634 5.011963 5.316032\n  v -1.619500 6.599217 4.921106\n  v -1.891399 8.236377 4.274997\n  v -4.195832 2.235205 3.375099\n  v -5.733342 1.411738 2.431726\n  v -1.859887 2.355757 3.843181\n  v -4.988612 3.074654 3.083858\n  v -1.303263 1.416453 4.831091\n  v -1.305757 -0.672779 6.415959\n  v -6.465170 0.937119 1.689873\n  v -5.258659 0.945811 2.974312\n  v -4.432338 0.722096 3.522615\n  v -3.300681 0.861641 3.872784\n  v -2.430178 1.131492 4.039035\n  v -1.820731 1.467954 4.224124\n  v -0.563221 2.307693 5.566789\n  v -6.338145 -0.529279 1.881175\n  v -5.587698 3.208071 2.687839\n  v -0.242624 -1.462857 7.071491\n  v -1.611251 0.339326 4.895421\n  v -7.743095 2.364999 -2.005167\n  v -1.391142 1.851048 4.448999\n  v -1.785794 -0.978284 4.850470\n  v -4.670959 2.664461 3.084075\n  v -1.333970 -0.283761 6.097047\n  v -7.270895 -2.890917 -2.252455\n  v -1.856432 2.585245 3.757904\n  v -0.923388 0.073076 6.671944\n  v -5.000589 -6.135128 1.892523\n  v -5.085276 -7.178590 0.714711\n  v -7.159291 -0.811820 -0.072044\n  v -5.843051 -5.248023 0.924091\n  v -6.847258 3.662916 0.724695\n  v -2.412942 -8.258853 4.119213\n  v -0.179909 -1.689864 6.573301\n  v -2.103655 -0.163946 4.566119\n  v -6.407571 2.236021 1.560843\n  v -3.670075 2.360153 3.635230\n  v -3.177186 2.294265 3.775704\n  v -2.196121 -4.598322 4.479786\n  v -6.234883 -1.944430 1.663542\n  v -1.292924 -9.295920 4.094063\n  v -3.210651 -8.533278 2.802001\n  v -4.068926 -7.993109 1.925119\n  v 0.000000 6.545390 5.027311\n  v 0.000000 -9.403378 4.264492\n  v -2.724032 2.315802 3.777151\n  v -2.288460 2.398891 3.697603\n  v -1.998311 2.496547 3.689148\n  v -6.130040 3.399261 2.038516\n  v -2.288460 2.886504 3.775031\n  v -2.724032 2.961810 3.871767\n  v -3.177186 2.964136 3.876973\n  v -3.670075 2.927714 3.724325\n  v -4.018389 2.857357 3.482983\n  v -7.555811 4.106811 -0.991917\n  v -4.018389 2.483695 3.440898\n  v 0.000000 -2.521945 5.932265\n  v -1.776217 -2.683946 5.213116\n  v -1.222237 -1.182444 5.952465\n  v -0.731493 -2.536683 5.815343\n  v 0.000000 3.271027 5.236015\n  v -4.135272 -6.996638 2.671970\n  v -3.311811 -7.660815 3.382963\n  v -1.313701 -8.639995 4.702456\n  v -5.940524 -6.223629 -0.631468\n  v -1.998311 2.743838 3.744030\n  v -0.901447 1.236992 5.754256\n  v 0.000000 -8.765243 4.891441\n  v -2.308977 -8.974196 3.609070\n  v -6.954154 -2.439843 -0.131163\n  v -1.098819 -4.458788 5.120727\n  v -1.181124 -4.579996 5.189564\n  v -1.255818 -4.787901 5.237051\n  v -1.325085 -5.106507 5.205010\n  v -1.546388 -5.819392 4.757893\n  v -1.953754 -4.183892 4.431713\n  v -2.117802 -4.137093 4.555096\n  v -2.285339 -4.051196 4.582438\n  v -2.850160 -3.665720 4.484994\n  v -5.278538 -2.238942 2.861224\n  v -0.946709 1.907628 5.196779\n  v -1.314173 3.104912 4.231404\n  v -1.780000 2.860000 3.881555\n  v -1.845110 -4.098880 4.247264\n  v -5.436187 -4.030482 2.109852\n  v -0.766444 3.182131 4.861453\n  v -1.938616 -6.614410 4.521085\n  v 0.000000 1.059413 6.774605\n  v -0.516573 1.583572 6.148363\n  v 0.000000 1.728369 6.316750\n  v -1.246815 0.230297 5.681036\n  v 0.000000 -7.942194 5.181173\n  v 0.000000 -6.991499 5.153478\n  v -0.997827 -6.930921 4.979576\n  v -3.288807 -5.382514 3.795752\n  v -2.311631 -1.566237 4.590085\n  v -2.680250 -6.111567 4.096152\n  v -3.832928 -1.537326 4.137731\n  v -2.961860 -2.274215 4.440943\n  v -4.386901 -2.683286 3.643886\n  v -1.217295 -7.834465 4.969286\n  v -1.542374 -0.136843 5.201008\n  v -3.878377 -6.041764 3.311079\n  v -3.084037 -6.809842 3.814195\n  v -3.747321 -4.503545 3.726453\n  v -6.094129 -3.205991 1.473482\n  v -4.588995 -4.728726 2.983221\n  v -6.583231 -3.941269 0.070268\n  v -3.492580 -3.195820 4.130198\n  v -1.255543 0.802341 5.307551\n  v -1.126122 -0.933602 6.538785\n  v -1.443109 -1.142774 5.905127\n  v -0.923043 -0.529042 7.003423\n  v -1.755386 3.529117 4.327696\n  v -2.632589 3.713828 4.364629\n  v -3.388062 3.721976 4.309028\n  v -4.075766 3.675413 4.076063\n  v -4.622910 3.474691 3.646321\n  v -5.171755 2.535753 2.670867\n  v -7.297331 0.763172 -0.048769\n  v -4.706828 1.651000 3.109532\n  v -4.071712 1.476821 3.476944\n  v -3.269817 1.470659 3.731945\n  v -2.527572 1.617311 3.865444\n  v -1.970894 1.858505 3.961782\n  v -1.579543 2.097941 4.084996\n  v -7.664182 0.673132 -2.435867\n  v -1.397041 -1.340139 5.630378\n  v -0.884838 0.658740 6.233232\n  v -0.767097 -0.968035 7.077932\n  v -0.460213 -1.334106 6.787447\n  v -0.748618 -1.067994 6.798303\n  v -1.236408 -1.585568 5.480490\n  v -0.387306 -1.409990 6.957705\n  v -0.319925 -1.607931 6.508676\n  v -1.639633 2.556298 3.863736\n  v -1.255645 2.467144 4.203800\n  v -1.031362 2.382663 4.615849\n  v -4.253081 2.772296 3.315305\n  v -4.530000 2.910000 3.339685\n  v 0.463928 0.955357 6.633583\n  v 4.253081 2.577646 3.279702\n  v 0.416106 -1.466449 6.447657\n  v 7.087960 5.434801 0.099620\n  v 2.628639 2.035898 3.848121\n  v 3.198363 1.985815 3.796952\n  v 3.775151 2.039402 3.646194\n  v 4.465819 2.422950 3.155168\n  v 2.164289 2.189867 3.851822\n  v 3.208229 3.223926 4.115822\n  v 2.673803 3.205337 4.092203\n  v 3.745193 3.165286 3.972409\n  v 4.161018 3.059069 3.719554\n  v 5.062006 1.934418 2.776093\n  v 2.266659 -7.425768 4.389812\n  v 4.445859 2.663991 3.173422\n  v 7.214530 2.263009 0.073150\n  v 5.799793 2.349546 2.204059\n  v 2.844939 -0.720868 4.433130\n  v 0.711452 -3.329355 5.877044\n  v 0.606033 -3.924562 5.444923\n  v 1.431615 -3.500953 5.496189\n  v 1.914910 -3.803146 5.028930\n  v 1.131043 -3.973937 5.189648\n  v 1.563548 -4.082763 4.842263\n  v 2.650112 -5.003649 4.188483\n  v 0.427049 -1.094134 7.360529\n  v 0.496396 -0.475659 7.440358\n  v 5.253307 3.881582 3.363159\n  v 1.718698 0.974609 4.558359\n  v 1.608635 -0.942516 5.814193\n  v 1.651267 -0.610868 5.581319\n  v 4.765501 -0.701554 3.534632\n  v 0.478306 0.295766 7.101013\n  v 3.734964 4.508230 4.550454\n  v 4.588603 4.302037 4.048484\n  v 6.279331 6.615427 1.425850\n  v 1.220941 4.142165 5.106035\n  v 2.193489 3.100317 4.000575\n  v 3.102642 -4.352984 4.095905\n  v 6.719682 -4.788645 -1.745401\n  v 1.193824 -1.306795 5.737747\n  v 0.729766 -1.593712 5.833208\n  v 2.456206 -4.342621 4.283884\n  v 2.204823 -4.304508 4.162499\n  v 4.985894 4.802461 3.751977\n  v 1.592294 -1.257709 5.456949\n  v 2.644548 4.524654 4.921559\n  v 2.760292 5.100971 5.015990\n  v 3.523964 8.005976 3.729163\n  v 5.599763 5.715470 2.724259\n  v 3.063932 6.566144 4.529981\n  v 5.720968 4.254584 2.830852\n  v 6.374393 4.785590 1.591691\n  v 0.672728 -3.688016 5.737804\n  v 1.262560 -3.787691 5.417779\n  v 1.732553 -3.952767 5.000579\n  v 1.043625 -1.464973 5.662455\n  v 2.321234 -4.329069 4.258156\n  v 2.056846 -4.477671 4.520883\n  v 2.153084 -4.276322 4.038093\n  v 0.946874 -1.035249 6.512274\n  v 1.469132 -4.036351 4.604908\n  v 1.024340 -3.989851 4.926693\n  v 0.533422 -3.993222 5.138202\n  v 0.769720 -6.095394 4.985883\n  v 0.699606 -5.291850 5.448304\n  v 0.669687 -4.949770 5.509612\n  v 0.630947 -4.695101 5.449371\n  v 0.583218 -4.517982 5.339869\n  v 1.537170 -4.423206 4.745470\n  v 1.615600 -4.475942 4.813632\n  v 1.729053 -4.618680 4.854463\n  v 1.838624 -4.828746 4.823737\n  v 2.368250 -3.106237 4.868096\n  v 7.542244 -1.049282 -2.431321\n  v 1.826614 -4.399531 4.399021\n  v 1.929558 -4.411831 4.497052\n  v 0.597442 -2.013686 5.866456\n  v 1.405627 -1.714196 5.241087\n  v 0.662449 -1.819321 5.863759\n  v 2.342340 0.572222 4.294303\n  v 3.327324 0.104863 4.113860\n  v 1.726175 -0.919165 5.273355\n  v 5.133204 7.485602 2.660442\n  v 4.538641 6.319907 3.683424\n  v 3.986562 5.109487 4.466315\n  v 2.169681 -5.440433 4.455874\n  v 1.395634 5.011963 5.316032\n  v 1.619500 6.599217 4.921106\n  v 1.891399 8.236377 4.274997\n  v 4.195832 2.235205 3.375099\n  v 5.733342 1.411738 2.431726\n  v 1.859887 2.355757 3.843181\n  v 4.988612 3.074654 3.083858\n  v 1.303263 1.416453 4.831091\n  v 1.305757 -0.672779 6.415959\n  v 6.465170 0.937119 1.689873\n  v 5.258659 0.945811 2.974312\n  v 4.432338 0.722096 3.522615\n  v 3.300681 0.861641 3.872784\n  v 2.430178 1.131492 4.039035\n  v 1.820731 1.467954 4.224124\n  v 0.563221 2.307693 5.566789\n  v 6.338145 -0.529279 1.881175\n  v 5.587698 3.208071 2.687839\n  v 0.242624 -1.462857 7.071491\n  v 1.611251 0.339326 4.895421\n  v 7.743095 2.364999 -2.005167\n  v 1.391142 1.851048 4.448999\n  v 1.785794 -0.978284 4.850470\n  v 4.670959 2.664461 3.084075\n  v 1.333970 -0.283761 6.097047\n  v 7.270895 -2.890917 -2.252455\n  v 1.856432 2.585245 3.757904\n  v 0.923388 0.073076 6.671944\n  v 5.000589 -6.135128 1.892523\n  v 5.085276 -7.178590 0.714711\n  v 7.159291 -0.811820 -0.072044\n  v 5.843051 -5.248023 0.924091\n  v 6.847258 3.662916 0.724695\n  v 2.412942 -8.258853 4.119213\n  v 0.179909 -1.689864 6.573301\n  v 2.103655 -0.163946 4.566119\n  v 6.407571 2.236021 1.560843\n  v 3.670075 2.360153 3.635230\n  v 3.177186 2.294265 3.775704\n  v 2.196121 -4.598322 4.479786\n  v 6.234883 -1.944430 1.663542\n  v 1.292924 -9.295920 4.094063\n  v 3.210651 -8.533278 2.802001\n  v 4.068926 -7.993109 1.925119\n  v 2.724032 2.315802 3.777151\n  v 2.288460 2.398891 3.697603\n  v 1.998311 2.496547 3.689148\n  v 6.130040 3.399261 2.038516\n  v 2.288460 2.886504 3.775031\n  v 2.724032 2.961810 3.871767\n  v 3.177186 2.964136 3.876973\n  v 3.670075 2.927714 3.724325\n  v 4.018389 2.857357 3.482983\n  v 7.555811 4.106811 -0.991917\n  v 4.018389 2.483695 3.440898\n  v 1.776217 -2.683946 5.213116\n  v 1.222237 -1.182444 5.952465\n  v 0.731493 -2.536683 5.815343\n  v 4.135272 -6.996638 2.671970\n  v 3.311811 -7.660815 3.382963\n  v 1.313701 -8.639995 4.702456\n  v 5.940524 -6.223629 -0.631468\n  v 1.998311 2.743838 3.744030\n  v 0.901447 1.236992 5.754256\n  v 2.308977 -8.974196 3.609070\n  v 6.954154 -2.439843 -0.131163\n  v 1.098819 -4.458788 5.120727\n  v 1.181124 -4.579996 5.189564\n  v 1.255818 -4.787901 5.237051\n  v 1.325085 -5.106507 5.205010\n  v 1.546388 -5.819392 4.757893\n  v 1.953754 -4.183892 4.431713\n  v 2.117802 -4.137093 4.555096\n  v 2.285339 -4.051196 4.582438\n  v 2.850160 -3.665720 4.484994\n  v 5.278538 -2.238942 2.861224\n  v 0.946709 1.907628 5.196779\n  v 1.314173 3.104912 4.231404\n  v 1.780000 2.860000 3.881555\n  v 1.845110 -4.098880 4.247264\n  v 5.436187 -4.030482 2.109852\n  v 0.766444 3.182131 4.861453\n  v 1.938616 -6.614410 4.521085\n  v 0.516573 1.583572 6.148363\n  v 1.246815 0.230297 5.681036\n  v 0.997827 -6.930921 4.979576\n  v 3.288807 -5.382514 3.795752\n  v 2.311631 -1.566237 4.590085\n  v 2.680250 -6.111567 4.096152\n  v 3.832928 -1.537326 4.137731\n  v 2.961860 -2.274215 4.440943\n  v 4.386901 -2.683286 3.643886\n  v 1.217295 -7.834465 4.969286\n  v 1.542374 -0.136843 5.201008\n  v 3.878377 -6.041764 3.311079\n  v 3.084037 -6.809842 3.814195\n  v 3.747321 -4.503545 3.726453\n  v 6.094129 -3.205991 1.473482\n  v 4.588995 -4.728726 2.983221\n  v 6.583231 -3.941269 0.070268\n  v 3.492580 -3.195820 4.130198\n  v 1.255543 0.802341 5.307551\n  v 1.126122 -0.933602 6.538785\n  v 1.443109 -1.142774 5.905127\n  v 0.923043 -0.529042 7.003423\n  v 1.755386 3.529117 4.327696\n  v 2.632589 3.713828 4.364629\n  v 3.388062 3.721976 4.309028\n  v 4.075766 3.675413 4.076063\n  v 4.622910 3.474691 3.646321\n  v 5.171755 2.535753 2.670867\n  v 7.297331 0.763172 -0.048769\n  v 4.706828 1.651000 3.109532\n  v 4.071712 1.476821 3.476944\n  v 3.269817 1.470659 3.731945\n  v 2.527572 1.617311 3.865444\n  v 1.970894 1.858505 3.961782\n  v 1.579543 2.097941 4.084996\n  v 7.664182 0.673132 -2.435867\n  v 1.397041 -1.340139 5.630378\n  v 0.884838 0.658740 6.233232\n  v 0.767097 -0.968035 7.077932\n  v 0.460213 -1.334106 6.787447\n  v 0.748618 -1.067994 6.798303\n  v 1.236408 -1.585568 5.480490\n  v 0.387306 -1.409990 6.957705\n  v 0.319925 -1.607931 6.508676\n  v 1.639633 2.556298 3.863736\n  v 1.255645 2.467144 4.203800\n  v 1.031362 2.382663 4.615849\n  v 4.253081 2.772296 3.315305\n  v 4.530000 2.910000 3.339685\n  vt 0.427942 0.304722\n  vt 0.526878 0.295374\n  vt 0.444832 0.269206\n  vt 0.607600 0.322297\n  vt 0.377046 0.677222\n  vt 0.473033 0.304722\n  vt 0.526913 0.282143\n  vt 0.447112 0.284192\n  vt 0.599262 0.318931\n  vt 0.414712 0.664780\n  vt 0.473122 0.295374\n  vt 0.527671 0.263774\n  vt 0.448020 0.295368\n  vt 0.593203 0.314324\n  vt 0.467288 0.470075\n  vt 0.473087 0.282143\n  vt 0.534090 0.220859\n  vt 0.448662 0.304722\n  vt 0.569944 0.232965\n  vt 0.437114 0.441104\n  vt 0.472329 0.263774\n  vt 0.524613 0.307634\n  vt 0.114210 0.384978\n  vt 0.555168 0.269206\n  vt 0.455528 0.451377\n  vt 0.465828 0.220810\n  vt 0.547818 0.307634\n  vt 0.375437 0.075808\n  vt 0.552888 0.284192\n  vt 0.429884 0.533478\n  vt 0.475387 0.307634\n  vt 0.568842 0.307634\n  vt 0.499877 0.091010\n  vt 0.551980 0.295368\n  vt 0.336768 0.355267\n  vt 0.452182 0.307634\n  vt 0.539958 0.442861\n  vt 0.455607 0.548199\n  vt 0.551338 0.304722\n  vt 0.133823 0.317299\n  vt 0.431158 0.307634\n  vt 0.596371 0.306047\n  vt 0.408772 0.626106\n  vt 0.885770 0.384971\n  vt 0.279777 0.285342\n  vt 0.460042 0.442861\n  vt 0.596961 0.293460\n  vt 0.128294 0.208059\n  vt 0.624563 0.075808\n  vt 0.189096 0.353700\n  vt 0.403629 0.306047\n  vt 0.611897 0.306039\n  vt 0.440512 0.097581\n  vt 0.544341 0.548416\n  vt 0.324548 0.296007\n  vt 0.403039 0.293460\n  vt 0.554692 0.419934\n  vt 0.335279 0.147180\n  vt 0.591234 0.626106\n  vt 0.354128 0.187447\n  vt 0.388103 0.306039\n  vt 0.577238 0.326110\n  vt 0.288719 0.180054\n  vt 0.871706 0.208059\n  vt 0.445308 0.419934\n  vt 0.553172 0.331473\n  vt 0.499923 0.648476\n  vt 0.559100 0.097368\n  vt 0.422762 0.326110\n  vt 0.527121 0.333802\n  vt 0.465844 0.379359\n  vt 0.664630 0.147129\n  vt 0.446828 0.331473\n  vt 0.826722 0.721245\n  vt 0.445682 0.433923\n  vt 0.711218 0.180025\n  vt 0.472879 0.333802\n  vt 0.770391 0.700444\n  vt 0.415838 0.375804\n  vt 0.534154 0.379360\n  vt 0.173287 0.721252\n  vt 0.635536 0.810751\n  vt 0.499988 0.381566\n  vt 0.554318 0.433923\n  vt 0.229622 0.700459\n  vt 0.770092 0.767979\n  vt 0.301415 0.612551\n  vt 0.584177 0.375893\n  vt 0.364501 0.810886\n  vt 0.668509 0.880086\n  vt 0.058133 0.680924\n  vt 0.698585 0.612551\n  vt 0.229924 0.767997\n  vt 0.616907 0.744114\n  vt 0.301415 0.636844\n  vt 0.941867 0.680924\n  vt 0.331431 0.880286\n  vt 0.614083 0.718613\n  vt 0.318785 0.641660\n  vt 0.698585 0.636844\n  vt 0.383103 0.744160\n  vt 0.577414 0.436833\n  vt 0.343364 0.644643\n  vt 0.681215 0.641660\n  vt 0.385919 0.718636\n  vt 0.722943 0.728037\n  vt 0.365962 0.644029\n  vt 0.656636 0.644643\n  vt 0.422552 0.436767\n  vt 0.607591 0.305797\n  vt 0.388665 0.637716\n  vt 0.634038 0.644029\n  vt 0.277076 0.728068\n  vt 0.618026 0.305289\n  vt 0.194993 0.657898\n  vt 0.611335 0.637716\n  vt 0.392389 0.305797\n  vt 0.542902 0.415208\n  vt 0.410373 0.608920\n  vt 0.805016 0.657892\n  vt 0.381974 0.305289\n  vt 0.557261 0.427174\n  vt 0.393207 0.604463\n  vt 0.589660 0.608938\n  vt 0.457098 0.415208\n  vt 0.932695 0.269895\n  vt 0.366170 0.601178\n  vt 0.606793 0.604463\n  vt 0.442739 0.427174\n  vt 0.645429 0.303293\n  vt 0.499977 0.045547\n  vt 0.633830 0.601178\n  vt 0.067305 0.269895\n  vt 0.607610 0.646112\n  vt 0.500023 0.809424\n  vt 0.733752 0.130299\n  vt 0.354490 0.303216\n  vt 0.552386 0.697432\n  vt 0.266248 0.130299\n  vt 0.681008 0.101715\n  vt 0.392390 0.646112\n  vt 0.830705 0.806186\n  vt 0.318993 0.101715\n  vt 0.568013 0.055435\n  vt 0.447580 0.697390\n  vt 0.703624 0.706729\n  vt 0.430987 0.055935\n  vt 0.812086 0.411461\n  vt 0.169295 0.806186\n  vt 0.662801 0.717082\n  vt 0.187885 0.411462\n  vt 0.603900 0.289783\n  vt 0.296392 0.706757\n  vt 0.516446 0.500361\n  vt 0.396100 0.289783\n  vt 0.656636 0.599403\n  vt 0.337212 0.717117\n  vt 0.723330 0.636627\n  vt 0.723087 0.467946\n  vt 0.343364 0.599403\n  vt 0.681215 0.603765\n  vt 0.483370 0.500413\n  vt 0.710288 0.631747\n  vt 0.578632 0.466377\n  vt 0.318785 0.603765\n  vt 0.825608 0.602325\n  vt 0.276896 0.467943\n  vt 0.549756 0.600249\n  vt 0.570338 0.451425\n  vt 0.174399 0.602329\n  vt 0.617942 0.491684\n  vt 0.421352 0.466259\n  vt 0.560698 0.604668\n  vt 0.598631 0.545021\n  vt 0.382385 0.491427\n  vt 0.508953 0.420562\n  vt 0.429819 0.451385\n  vt 0.573595 0.610193\n  vt 0.742247 0.685493\n  vt 0.490967 0.420622\n  vt 0.614074 0.116754\n  vt 0.401223 0.544828\n  vt 0.517472 0.422123\n  vt 0.515097 0.472748\n  vt 0.385764 0.116846\n  vt 0.865595 0.666313\n  vt 0.257765 0.685510\n  vt 0.516311 0.436946\n  vt 0.513050 0.452718\n  vt 0.134410 0.666317\n  vt 0.816351 0.259740\n  vt 0.485301 0.472605\n  vt 0.566036 0.417671\n  vt 0.624852 0.271901\n  vt 0.183610 0.259743\n  vt 0.892441 0.459239\n  vt 0.486717 0.452371\n  vt 0.531529 0.444943\n  vt 0.571228 0.317308\n  vt 0.107550 0.459245\n  vt 0.801779 0.168062\n  vt 0.374971 0.272195\n  vt 0.523913 0.436170\n  vt 0.549626 0.319139\n  vt 0.198221 0.168062\n  vt 0.760966 0.220247\n  vt 0.428771 0.317309\n  vt 0.526564 0.453882\n  vt 0.585384 0.333459\n  vt 0.238979 0.220255\n  vt 0.537728 0.494615\n  vt 0.450374 0.319139\n  vt 0.541366 0.521101\n  vt 0.560215 0.342771\n  vt 0.462783 0.494253\n  vt 0.580985 0.612840\n  vt 0.414617 0.333459\n  vt 0.567192 0.430580\n  vt 0.525850 0.319809\n  vt 0.419054 0.612845\n  vt 0.967686 0.355643\n  vt 0.439785 0.342771\n  vt 0.992440 0.519223\n  vt 0.528249 0.349596\n  vt 0.032314 0.355643\n  vt 0.560611 0.480983\n  vt 0.474155 0.319808\n  vt 0.579658 0.590055\n  vt 0.643998 0.465512\n  vt 0.439121 0.481042\n  vt 0.733530 0.623023\n  vt 0.471751 0.349596\n  vt 0.603876 0.583413\n  vt 0.790082 0.608646\n  vt 0.266470 0.623023\n  vt 0.602995 0.451312\n  vt 0.355808 0.465594\n  vt 0.633505 0.573912\n  vt 0.893693 0.600040\n  vt 0.396993 0.451203\n  vt 0.573500 0.580000\n  vt 0.209925 0.608647\n  vt 0.666525 0.566134\n  vt 0.719902 0.624400\n  vt 0.426243 0.579569\n  vt 0.980531 0.598436\n  vt 0.106310 0.600044\n  vt 0.702114 0.566837\n  vt 0.602918 0.157137\n  vt 0.019469 0.598436\n  vt 0.595293 0.514976\n  vt 0.280098 0.624400\n  vt 0.732392 0.575453\n  vt 0.752212 0.589195\n  vt 0.404670 0.514867\n  vt 0.509127 0.437282\n  vt 0.396889 0.157245\n  vt 0.897013 0.531231\n  vt 0.702097 0.646409\n  vt 0.490726 0.437599\n  vt 0.771046 0.651041\n  vt 0.247792 0.589190\n  vt 0.758757 0.617213\n  vt 0.680678 0.652735\n  vt 0.228962 0.651049\n  vt 0.810748 0.476074\n  vt 0.297903 0.646409\n  vt 0.716482 0.666799\n  vt 0.629906 0.653924\n  vt 0.189241 0.476076\n  vt 0.523481 0.594373\n  vt 0.319322 0.652735\n  vt 0.687132 0.677654\n  vt 0.654766 0.655989\n  vt 0.476410 0.594194\n  vt 0.600862 0.567527\n  vt 0.370094 0.653924\n  vt 0.655896 0.679837\n  vt 0.606630 0.596295\n  vt 0.398964 0.567345\n  vt 0.631101 0.552846\n  vt 0.345234 0.655989\n  vt 0.622953 0.677221\n  vt 0.725342 0.610869\n  vt 0.368756 0.552793\n  vt 0.667113 0.539327\n  vt 0.393362 0.596294\n  vt 0.585271 0.664823\n  vt 0.688880 0.590540\n  vt 0.332828 0.539288\n  vt 0.713757 0.532373\n  vt 0.274658 0.610869\n  vt 0.531987 0.469860\n  vt 0.661242 0.586975\n  vt 0.286267 0.532325\n  vt 0.752702 0.542818\n  vt 0.311120 0.590540\n  vt 0.562759 0.441215\n  vt 0.634070 0.590424\n  vt 0.247308 0.542806\n  vt 0.821442 0.542444\n  vt 0.313951 0.224692\n  vt 0.338758 0.586975\n  vt 0.544562 0.451624\n  vt 0.895093 0.745859\n  vt 0.178560 0.542446\n  vt 0.551868 0.463430\n  vt 0.410986 0.491277\n  vt 0.365930 0.590424\n  vt 0.570082 0.533674\n  vt 0.526227 0.426090\n  vt 0.448340 0.463064\n  vt 0.572156 0.562348\n  vt 0.447750 0.137523\n  vt 0.104907 0.745859\n  vt 0.663187 0.355403\n  vt 0.710288 0.619236\n  vt 0.427685 0.562039\n  vt 0.742870 0.644554\n  vt 0.295284 0.378419\n  vt 0.473773 0.426090\n  vt 0.866152 0.317295\n  vt 0.517862 0.528052\n  vt 0.257135 0.644560\n  vt 0.587247 0.601068\n  vt 0.357155 0.395730\n  vt 0.499816 0.437019\n  vt 0.720122 0.285333\n  vt 0.276670 0.636627\n  vt 0.412782 0.601030\n  vt 0.781070 0.564595\n  vt 0.319688 0.429262\n  vt 0.499968 0.218629\n  vt 0.810858 0.353695\n  vt 0.289712 0.631747\n  vt 0.218937 0.564589\n  vt 0.711045 0.601048\n  vt 0.374293 0.219815\n  vt 0.499977 0.262981\n  vt 0.675343 0.296022\n  vt 0.450067 0.599566\n  vt 0.288955 0.601048\n  vt 0.588166 0.890956\n  vt 0.378909 0.425990\n  vt 0.499977 0.280615\n  vt 0.645735 0.187360\n  vt 0.438999 0.603505\n  vt 0.412198 0.891099\n  vt 0.570304 0.812129\n  vt 0.344549 0.254561\n  vt 0.499977 0.294066\n  vt 0.685945 0.224643\n  vt 0.426450 0.610201\n  vt 0.429765 0.812166\n  vt 0.558266 0.738328\n  vt 0.456549 0.180799\n  vt 0.499977 0.304722\n  vt 0.589072 0.491363\n  vt 0.482483 0.422151\n  vt 0.441728 0.738324\n  vt 0.600409 0.250995\n  vt 0.499913 0.178271\n  vt 0.500023 0.307652\n  vt 0.552012 0.137408\n  vt 0.483518 0.437016\n  vt 0.399510 0.251079\n  vt 0.672684 0.743419\n  vt 0.499886 0.133083\n  vt 0.500016 0.320776\n  vt 0.704663 0.378470\n  vt 0.433991 0.417638\n  vt 0.327338 0.743473\n  vt 0.709250 0.798492\n  vt 0.432112 0.506411\n  vt 0.500023 0.333766\n  vt 0.642764 0.395662\n  vt 0.468472 0.444943\n  vt 0.290777 0.798554\n  vt 0.757824 0.852324\n  vt 0.499974 0.560363\n  vt 0.500023 0.892950\n  vt 0.680198 0.429281\n  vt 0.476088 0.436170\n  vt 0.242176 0.852324\n  vt 0.588354 0.453138\n  vt 0.479154 0.557346\n  vt 0.499987 0.730081\n  vt 0.625560 0.219688\n  vt 0.473466 0.454256\n  vt 0.411671 0.453035\n  vt 0.665586 0.504049\n  vt 0.499989 0.530175\n  vt 0.499955 0.687602\n  vt 0.621009 0.425982\n  vt 0.458639 0.520911\n  vt 0.334562 0.503927\n  vt 0.627543 0.526648\n  vt 0.411362 0.195673\n  vt 0.289712 0.619236\n  vt 0.655317 0.254485\n  vt 0.432949 0.430482\n  vt 0.372120 0.526586\n  vt 0.536915 0.406214\n  vt 0.468268 0.647329\n  vt 0.499523 0.598938\n  vt 0.543283 0.180745\n  vt 0.007561 0.519223\n  vt 0.463080 0.406216\n  vt 0.577268 0.414065\n  vt 0.228018 0.316428\n  vt 0.499910 0.501747\n  vt 0.567985 0.506521\n  vt 0.420121 0.589772\n  vt 0.422729 0.414015\n  vt 0.531915 0.398463\n  vt 0.413386 0.307634\n  vt 0.500151 0.472844\n  vt 0.520797 0.557435\n  vt 0.396012 0.583304\n  vt 0.468080 0.398465\n  vt 0.590372 0.298177\n  vt 0.416164 0.631286\n  vt 0.482113 0.528021\n  vt 0.588371 0.195559\n  vt 0.366427 0.573884\n  vt 0.409626 0.298177\n  vt 0.586800 0.304600\n  vt 0.436392 0.640113\n  vt 0.499974 0.397628\n  vt 0.531597 0.647517\n  vt 0.333434 0.566122\n  vt 0.413200 0.304600\n  vt 0.986046 0.439966\n  vt 0.452770 0.579150\n  vt 0.500026 0.452513\n  vt 0.771915 0.316422\n  vt 0.297879 0.566824\n  vt 0.499914 0.419853\n  vt 0.609945 0.360090\n  vt 0.247923 0.398667\n  vt 0.499977 0.347466\n  vt 0.586614 0.307634\n  vt 0.267612 0.575440\n  vt 0.013954 0.439966\n  vt 0.581691 0.279937\n  vt 0.367856 0.336081\n  vt 0.583841 0.631286\n  vt 0.102986 0.531237\n  vt 0.390095 0.360427\n  vt 0.576838 0.288154\n  vt 0.392400 0.322297\n  vt 0.563544 0.640172\n  vt 0.241246 0.617214\n  vt 0.418309 0.279937\n  vt 0.573521 0.296460\n  vt 0.400738 0.318931\n  vt 0.547226 0.579605\n  vt 0.283526 0.666810\n  vt 0.423162 0.288154\n  vt 0.572058 0.304722\n  vt 0.406787 0.314327\n  vt 0.752033 0.398685\n  vt 0.312876 0.677668\n  vt 0.426479 0.296460\n  vt 0.526967 0.304722\n  vt 0.430012 0.233191\n  vt 0.631938 0.336500\n  vt 0.344108 0.679849\n  f 174/43 156/119 134/220\n  f 247/335 34/252 8/399\n  f 383/124 399/59 363/216\n  f 264/244 467/163 250/317\n  f 309/42 416/442 325/427\n  f 79/51 96/432 192/416\n  f 357/246 390/96 265/239\n  f 128/250 35/247 163/91\n  f 369/186 265/239 390/96\n  f 140/190 163/91 35/247\n  f 268/224 1/441 303/70\n  f 38/232 73/77 1/441\n  f 12/375 303/70 1/441\n  f 12/375 1/441 73/77\n  f 350/281 452/238 351/276\n  f 121/285 122/280 232/425\n  f 453/233 351/276 452/238\n  f 233/419 232/425 122/280\n  f 268/224 303/70 270/214\n  f 38/232 40/222 73/77\n  f 304/66 270/214 303/70\n  f 74/73 73/77 40/222\n  f 358/241 344/313 351/276\n  f 129/245 122/280 115/318\n  f 278/174 351/276 344/313\n  f 48/182 115/318 122/280\n  f 351/276 453/233 358/241\n  f 122/280 129/245 233/419\n  f 454/228 358/241 453/233\n  f 234/413 233/419 129/245\n  f 300/82 334/373 298/90\n  f 70/89 68/97 105/378\n  f 333/379 298/90 334/373\n  f 104/384 105/378 68/97\n  f 176/33 153/131 397/68\n  f 176/33 172/53 153/131\n  f 378/144 397/68 153/131\n  f 149/147 153/131 172/53\n  f 382/128 385/116 383/124\n  f 155/123 156/119 158/111\n  f 399/59 383/124 385/116\n  f 174/43 158/111 156/119\n  f 281/159 348/291 331/391\n  f 51/167 102/396 119/295\n  f 349/286 331/391 348/291\n  f 120/290 119/295 102/396\n  f 270/214 304/66 271/209\n  f 40/222 41/217 74/73\n  f 305/62 271/209 304/66\n  f 75/69 74/73 41/217\n  f 10/387 337/355 152/135\n  f 10/387 152/135 108/360\n  f 338/349 152/135 337/355\n  f 109/354 108/360 152/135\n  f 345/307 279/169 361/226\n  f 116/312 132/230 49/177\n  f 280/164 361/226 279/169\n  f 50/172 49/177 132/230\n  f 263/249 432/346 419/424\n  f 33/257 195/398 212/60\n  f 425/388 419/424 432/346\n  f 205/338 212/60 195/398\n  f 305/62 409/9 271/209\n  f 75/69 41/217 185/456\n  f 410/4 271/209 409/9\n  f 186/451 185/456 41/217\n  f 273/199 311/32 408/14\n  f 43/207 184/461 81/41\n  f 416/442 408/14 311/32\n  f 192/416 81/41 184/461\n  f 323/439 271/209 411/467\n  f 93/449 187/446 41/217\n  f 410/4 411/467 271/209\n  f 186/451 41/217 187/446\n  f 348/291 450/248 349/286\n  f 119/295 120/290 230/437\n  f 451/243 349/286 450/248\n  f 231/431 230/437 120/290\n  f 435/328 433/340 431/352\n  f 215/45 211/302 213/55\n  f 423/400 431/352 433/340\n  f 203/350 213/55 211/302\n  f 314/17 315/12 19/333\n  f 84/26 19/333 85/21\n  f 18/339 19/333 315/12\n  f 18/339 85/21 19/333\n  f 308/47 376/152 307/52\n  f 78/56 77/61 147/155\n  f 292/114 307/52 376/152\n  f 62/121 147/155 77/61\n  f 260/264 388/104 261/259\n  f 30/272 31/267 161/99\n  f 389/100 261/259 388/104\n  f 162/95 161/99 31/267\n  f 287/134 415/447 385/116\n  f 57/141 158/111 191/422\n  f 399/59 385/116 415/447\n  f 174/43 191/422 158/111\n  f 419/424 425/388 407/19\n  f 195/398 183/466 205/338\n  f 336/361 407/19 425/388\n  f 107/366 205/338 183/466\n  f 368/191 417/436 365/206\n  f 139/195 136/210 193/410\n  f 435/328 365/206 417/436\n  f 215/45 193/410 136/210\n  f 392/88 424/394 328/409\n  f 166/79 99/414 204/344\n  f 359/236 328/409 424/394\n  f 130/240 204/344 99/414\n  f 299/86 302/74 285/142\n  f 69/93 55/149 72/81\n  f 252/305 285/142 302/74\n  f 22/315 72/81 55/149\n  f 5/417 276/184 6/411\n  f 5/417 6/411 46/192\n  f 282/154 6/411 276/184\n  f 52/162 46/192 6/411\n  f 255/289 374/161 254/294\n  f 25/297 24/303 145/165\n  f 375/156 254/294 374/161\n  f 146/160 145/165 24/303\n  f 321/450 322/445 308/47\n  f 91/459 78/56 92/454\n  f 376/152 308/47 322/445\n  f 147/155 92/454 78/56\n  f 281/159 426/382 412/462\n  f 51/167 188/440 206/332\n  f 428/370 412/462 426/382\n  f 208/320 206/332 188/440\n  f 422/406 314/17 201/362\n  f 202/356 201/362 84/26\n  f 19/333 201/362 314/17\n  f 19/333 84/26 201/362\n  f 336/361 322/445 407/19\n  f 107/366 183/466 92/454\n  f 406/24 407/19 322/445\n  f 182/3 92/454 183/466\n  f 406/24 322/445 405/29\n  f 182/3 181/8 92/454\n  f 321/450 405/29 322/445\n  f 91/459 92/454 181/8\n  f 18/339 315/12 17/345\n  f 18/339 17/345 85/21\n  f 316/7 17/345 315/12\n  f 86/16 85/21 17/345\n  f 426/382 267/229 427/376\n  f 206/332 207/326 37/237\n  f 424/394 427/376 267/229\n  f 204/344 37/237 207/326\n  f 370/181 397/68 401/49\n  f 141/185 177/28 172/53\n  f 378/144 401/49 397/68\n  f 149/147 172/53 177/28\n  f 392/88 270/214 323/439\n  f 166/79 93/449 40/222\n  f 271/209 323/439 270/214\n  f 41/217 40/222 93/449\n  f 418/430 466/168 414/452\n  f 194/404 190/428 246/341\n  f 465/173 414/452 466/168\n  f 245/347 246/341 190/428\n  f 258/274 259/269 387/108\n  f 28/282 160/103 29/277\n  f 386/112 387/108 259/269\n  f 159/107 29/277 160/103\n  f 261/259 389/100 468/158\n  f 31/267 248/329 162/95\n  f 467/163 468/158 389/100\n  f 247/335 162/95 248/329\n  f 249/323 457/213 420/418\n  f 4/423 197/386 237/395\n  f 400/54 420/418 457/213\n  f 175/38 237/395 197/386\n  f 334/373 299/86 333/379\n  f 105/378 104/384 69/93\n  f 285/142 333/379 299/86\n  f 55/149 69/93 104/384\n  f 286/138 9/393 418/430\n  f 56/145 194/404 9/393\n  f 169/67 418/430 9/393\n  f 169/67 9/393 194/404\n  f 341/331 262/254 347/296\n  f 112/336 118/300 32/262\n  f 449/253 347/296 262/254\n  f 229/443 32/262 118/300\n  f 286/138 418/430 442/288\n  f 56/145 222/10 194/404\n  f 414/452 442/288 418/430\n  f 190/428 194/404 222/10\n  f 328/409 461/193 327/415\n  f 99/414 98/420 241/371\n  f 329/403 327/415 461/193\n  f 100/408 241/371 98/420\n  f 278/174 356/251 330/397\n  f 48/182 101/402 127/255\n  f 372/171 330/397 356/251\n  f 143/175 127/255 101/402\n  f 310/37 393/84 439/304\n  f 80/46 219/25 167/75\n  f 440/298 439/304 393/84\n  f 220/20 167/75 219/25\n  f 382/128 383/124 257/279\n  f 155/123 27/287 156/119\n  f 342/325 257/279 383/124\n  f 113/330 156/119 27/287\n  f 361/226 280/164 421/412\n  f 132/230 199/374 50/172\n  f 430/358 421/412 280/164\n  f 210/308 50/172 199/374\n  f 366/201 365/206 380/136\n  f 137/205 151/139 136/210\n  f 395/76 380/136 365/206\n  f 170/63 136/210 151/139\n  f 356/251 278/174 438/310\n  f 127/255 218/30 48/182\n  f 344/313 438/310 278/174\n  f 115/318 48/182 218/30\n  f 444/278 445/273 283/150\n  f 224/468 53/157 225/463\n  f 284/146 283/150 445/273\n  f 54/153 225/463 53/157\n  f 282/154 276/184 364/211\n  f 52/162 135/215 46/192\n  f 441/293 364/211 276/184\n  f 221/15 46/192 135/215\n  f 432/346 263/249 396/72\n  f 212/60 171/58 33/257\n  f 370/181 396/72 263/249\n  f 141/185 33/257 171/58\n  f 338/349 300/82 339/343\n  f 109/354 110/348 70/89\n  f 298/90 339/343 300/82\n  f 68/97 70/89 110/348\n  f 336/361 274/194 322/445\n  f 107/366 92/454 44/202\n  f 376/152 322/445 274/194\n  f 147/155 44/202 92/454\n  f 349/286 451/243 350/281\n  f 120/290 121/285 231/431\n  f 452/238 350/281 451/243\n  f 232/425 231/431 121/285\n  f 468/158 360/231 343/319\n  f 248/329 114/324 131/235\n  f 447/263 343/319 360/231\n  f 227/453 131/235 114/324\n  f 283/150 284/146 335/367\n  f 53/157 106/372 54/153\n  f 294/106 335/367 284/146\n  f 64/113 54/153 106/372\n  f 251/311 459/203 463/183\n  f 21/321 243/359 239/383\n  f 462/188 463/183 459/203\n  f 242/365 239/383 243/359\n  f 277/179 354/261 301/78\n  f 47/187 71/85 125/265\n  f 384/120 301/78 354/261\n  f 157/115 125/265 71/85\n  f 326/421 293/110 325/427\n  f 97/426 96/432 63/117\n  f 309/42 325/427 293/110\n  f 79/51 63/117 96/432\n  f 284/146 277/179 294/106\n  f 54/153 64/113 47/187\n  f 301/78 294/106 277/179\n  f 71/85 47/187 64/113\n  f 448/258 265/239 346/301\n  f 228/448 117/306 35/247\n  f 373/166 346/301 265/239\n  f 144/170 35/247 117/306\n  f 353/266 346/301 347/296\n  f 124/270 118/300 117/306\n  f 341/331 347/296 346/301\n  f 112/336 117/306 118/300\n  f 2/435 20/327 275/189\n  f 2/435 45/197 20/327\n  f 355/256 275/189 20/327\n  f 126/260 20/327 45/197\n  f 249/323 282/154 457/213\n  f 4/423 237/395 52/162\n  f 364/211 457/213 282/154\n  f 135/215 52/162 237/395\n  f 426/382 427/376 428/370\n  f 206/332 208/320 207/326\n  f 437/316 428/370 427/376\n  f 217/35 207/326 208/320\n  f 381/132 382/128 253/299\n  f 154/127 23/309 155/123\n  f 257/279 253/299 382/128\n  f 27/287 155/123 23/309\n  f 392/88 394/80 270/214\n  f 166/79 40/222 168/71\n  f 268/224 270/214 394/80\n  f 38/232 168/71 40/222\n  f 200/368 429/364 201/362\n  f 200/368 201/362 209/314\n  f 422/406 201/362 429/364\n  f 202/356 209/314 201/362\n  f 331/391 330/397 267/229\n  f 102/396 37/237 101/402\n  f 372/171 267/229 330/397\n  f 143/175 101/402 37/237\n  f 423/400 433/340 274/194\n  f 203/350 44/202 213/55\n  f 288/130 274/194 433/340\n  f 58/137 213/55 44/202\n  f 291/118 251/311 329/403\n  f 61/125 100/408 21/321\n  f 463/183 329/403 251/311\n  f 243/359 21/321 100/408\n  f 259/269 287/134 386/112\n  f 29/277 159/107 57/141\n  f 385/116 386/112 287/134\n  f 158/111 57/141 159/107\n  f 343/319 447/263 354/261\n  f 114/324 125/265 227/453\n  f 266/234 354/261 447/263\n  f 36/242 227/453 125/265\n  f 258/274 387/108 260/264\n  f 28/282 30/272 160/103\n  f 388/104 260/264 387/108\n  f 161/99 160/103 30/272\n  f 431/352 423/400 432/346\n  f 211/302 212/60 203/350\n  f 425/388 432/346 423/400\n  f 205/338 203/350 212/60\n  f 446/268 343/319 277/179\n  f 226/458 47/187 114/324\n  f 354/261 277/179 343/319\n  f 125/265 114/324 47/187\n  f 425/388 423/400 336/361\n  f 205/338 107/366 203/350\n  f 274/194 336/361 423/400\n  f 44/202 203/350 107/366\n  f 307/52 293/110 308/47\n  f 77/61 78/56 63/117\n  f 326/421 308/47 293/110\n  f 97/426 63/117 78/56\n  f 367/196 448/258 353/266\n  f 138/200 124/270 228/448\n  f 346/301 353/266 448/258\n  f 117/306 228/448 124/270\n  f 303/70 269/219 304/66\n  f 73/77 74/73 39/227\n  f 272/204 304/66 269/219\n  f 42/212 39/227 74/73\n  f 372/171 359/236 267/229\n  f 143/175 37/237 130/240\n  f 424/394 267/229 359/236\n  f 204/344 130/240 37/237\n  f 328/409 295/102 461/193\n  f 99/414 241/371 65/109\n  f 456/218 461/193 295/102\n  f 236/401 65/109 241/371\n  f 295/102 332/385 279/169\n  f 65/109 49/177 103/390\n  f 280/164 279/169 332/385\n  f 50/172 103/390 49/177\n  f 304/66 272/204 305/62\n  f 74/73 75/69 42/212\n  f 273/199 305/62 272/204\n  f 43/207 42/212 75/69\n  f 428/370 437/316 435/328\n  f 208/320 215/45 217/35\n  f 433/340 435/328 437/316\n  f 213/55 217/35 215/45\n  f 305/62 273/199 409/9\n  f 75/69 185/456 43/207\n  f 408/14 409/9 273/199\n  f 184/461 43/207 185/456\n  f 395/76 431/352 396/72\n  f 170/63 171/58 211/302\n  f 432/346 396/72 431/352\n  f 212/60 211/302 171/58\n  f 396/72 370/181 379/140\n  f 171/58 150/143 141/185\n  f 401/49 379/140 370/181\n  f 177/28 141/185 150/143\n  f 297/94 335/367 300/82\n  f 67/101 70/89 106/372\n  f 334/373 300/82 335/367\n  f 105/378 106/372 70/89\n  f 418/430 169/67 352/271\n  f 194/404 123/275 169/67\n  f 7/405 352/271 169/67\n  f 7/405 169/67 123/275\n  f 281/159 412/462 353/266\n  f 51/167 124/270 188/440\n  f 377/148 353/266 412/462\n  f 148/151 188/440 124/270\n  f 320/455 321/450 326/421\n  f 90/464 97/426 91/459\n  f 308/47 326/421 321/450\n  f 78/56 91/459 97/426\n  f 286/138 296/98 337/355\n  f 56/145 108/360 66/105\n  f 297/94 337/355 296/98\n  f 67/101 66/105 108/360\n  f 405/29 321/450 404/34\n  f 181/8 180/13 91/459\n  f 320/455 404/34 321/450\n  f 90/464 91/459 180/13\n  f 331/391 349/286 330/397\n  f 102/396 101/402 120/290\n  f 350/281 330/397 349/286\n  f 121/285 120/290 101/402\n  f 335/367 294/106 334/373\n  f 106/372 105/378 64/113\n  f 299/86 334/373 294/106\n  f 69/93 64/113 105/378\n  f 324/433 455/223 367/196\n  f 94/444 138/200 235/407\n  f 448/258 367/196 455/223\n  f 228/448 235/407 138/200\n  f 17/345 316/7 16/351\n  f 17/345 16/351 86/16\n  f 317/2 16/351 316/7\n  f 87/11 86/16 16/351\n  f 430/358 280/164 359/236\n  f 210/308 130/240 50/172\n  f 332/385 359/236 280/164\n  f 103/390 50/172 130/240\n  f 16/351 317/2 15/357\n  f 16/351 15/357 87/11\n  f 318/465 15/357 317/2\n  f 88/6 87/11 15/357\n  f 9/393 286/138 10/387\n  f 9/393 10/387 56/145\n  f 337/355 10/387 286/138\n  f 108/360 56/145 10/387\n  f 330/397 350/281 278/174\n  f 101/402 48/182 121/285\n  f 351/276 278/174 350/281\n  f 122/280 121/285 48/182\n  f 253/299 254/294 381/132\n  f 23/309 154/127 24/303\n  f 375/156 381/132 254/294\n  f 146/160 24/303 154/127\n  f 403/39 404/34 319/460\n  f 179/18 89/1 180/13\n  f 320/455 319/460 404/34\n  f 90/464 180/13 89/1\n  f 352/271 7/405 420/418\n  f 123/275 197/386 7/405\n  f 198/380 420/418 7/405\n  f 198/380 7/405 197/386\n  f 325/427 319/460 326/421\n  f 96/432 97/426 89/1\n  f 320/455 326/421 319/460\n  f 90/464 89/1 97/426\n  f 398/64 368/191 366/201\n  f 173/48 137/205 139/195\n  f 365/206 366/201 368/191\n  f 136/210 139/195 137/205\n  f 289/126 436/322 398/64\n  f 59/133 173/48 216/40\n  f 368/191 398/64 436/322\n  f 139/195 216/40 173/48\n  f 439/304 440/298 345/307\n  f 219/25 116/312 220/20\n  f 279/169 345/307 440/298\n  f 49/177 220/20 116/312\n  f 272/204 312/27 273/199\n  f 42/212 43/207 82/36\n  f 311/32 273/199 312/27\n  f 81/41 82/36 43/207\n  f 6/411 282/154 196/392\n  f 6/411 196/392 52/162\n  f 249/323 196/392 282/154\n  f 4/423 52/162 196/392\n  f 274/194 288/130 376/152\n  f 44/202 147/155 58/137\n  f 292/114 376/152 288/130\n  f 62/121 58/137 147/155\n  f 397/68 429/364 176/33\n  f 172/53 176/33 209/314\n  f 200/368 176/33 429/364\n  f 200/368 209/314 176/33\n  f 269/219 313/22 272/204\n  f 39/227 42/212 83/31\n  f 312/27 272/204 313/22\n  f 82/36 83/31 42/212\n  f 445/273 446/268 284/146\n  f 225/463 54/153 226/458\n  f 277/179 284/146 446/268\n  f 47/187 226/458 54/153\n  f 255/289 340/337 374/161\n  f 25/297 145/165 111/342\n  f 391/92 374/161 340/337\n  f 164/87 111/342 145/165\n  f 296/98 283/150 297/94\n  f 66/105 67/101 53/157\n  f 335/367 297/94 283/150\n  f 106/372 53/157 67/101\n  f 347/296 449/253 348/291\n  f 118/300 119/295 229/443\n  f 450/248 348/291 449/253\n  f 230/437 229/443 119/295\n  f 455/223 357/246 448/258\n  f 235/407 228/448 128/250\n  f 265/239 448/258 357/246\n  f 35/247 128/250 228/448\n  f 337/355 297/94 338/349\n  f 108/360 109/354 67/101\n  f 300/82 338/349 297/94\n  f 70/89 67/101 109/354\n  f 152/135 338/349 11/381\n  f 152/135 11/381 109/354\n  f 339/343 11/381 338/349\n  f 110/348 109/354 11/381\n  f 279/169 440/298 295/102\n  f 49/177 65/109 220/20\n  f 456/218 295/102 440/298\n  f 236/401 220/20 65/109\n  f 408/14 416/442 293/110\n  f 184/461 63/117 192/416\n  f 309/42 293/110 416/442\n  f 79/51 192/416 63/117\n  f 359/236 372/171 430/358\n  f 130/240 210/308 143/175\n  f 356/251 430/358 372/171\n  f 127/255 143/175 210/308\n  f 346/301 373/166 341/331\n  f 117/306 112/336 144/170\n  f 266/234 341/331 373/166\n  f 36/242 144/170 112/336\n  f 389/100 391/92 467/163\n  f 162/95 247/335 164/87\n  f 250/317 467/163 391/92\n  f 8/399 164/87 247/335\n  f 353/266 347/296 281/159\n  f 124/270 51/167 118/300\n  f 348/291 281/159 347/296\n  f 119/295 118/300 51/167\n  f 296/98 443/283 283/150\n  f 66/105 53/157 223/5\n  f 444/278 283/150 443/283\n  f 224/468 223/5 53/157\n  f 20/327 95/438 355/256\n  f 20/327 126/260 95/438\n  f 371/176 355/256 95/438\n  f 142/180 95/438 126/260\n  f 296/98 286/138 443/283\n  f 66/105 223/5 56/145\n  f 442/288 443/283 286/138\n  f 222/10 56/145 223/5\n  f 420/418 198/380 249/323\n  f 197/386 4/423 198/380\n  f 196/392 249/323 198/380\n  f 196/392 198/380 4/423\n  f 360/231 264/244 256/284\n  f 131/235 26/292 34/252\n  f 250/317 256/284 264/244\n  f 8/399 34/252 26/292\n  f 276/184 275/189 441/293\n  f 46/192 221/15 45/197\n  f 458/208 441/293 275/189\n  f 238/389 45/197 221/15\n  f 301/78 384/120 302/74\n  f 71/85 72/81 157/115\n  f 369/186 302/74 384/120\n  f 140/190 157/115 72/81\n  f 418/430 352/271 466/168\n  f 194/404 246/341 123/275\n  f 413/457 466/168 352/271\n  f 189/434 123/275 246/341\n  f 467/163 264/244 468/158\n  f 247/335 248/329 34/252\n  f 360/231 468/158 264/244\n  f 131/235 34/252 248/329\n  f 390/96 252/305 369/186\n  f 163/91 140/190 22/315\n  f 302/74 369/186 252/305\n  f 72/81 22/315 140/190\n  f 375/156 387/108 381/132\n  f 146/160 154/127 160/103\n  f 386/112 381/132 387/108\n  f 159/107 160/103 154/127\n  f 380/136 395/76 379/140\n  f 151/139 150/143 170/63\n  f 396/72 379/140 395/76\n  f 171/58 170/63 150/143\n  f 352/271 420/418 413/457\n  f 123/275 189/434 197/386\n  f 400/54 413/457 420/418\n  f 175/38 197/386 189/434\n  f 427/376 323/439 437/316\n  f 207/326 217/35 93/449\n  f 411/467 437/316 323/439\n  f 187/446 93/449 217/35\n  f 388/104 374/161 389/100\n  f 161/99 162/95 145/165\n  f 391/92 389/100 374/161\n  f 164/87 145/165 162/95\n  f 394/80 327/415 165/83\n  f 168/71 165/83 98/420\n  f 3/429 165/83 327/415\n  f 3/429 98/420 165/83\n  f 355/256 371/176 462/188\n  f 126/260 242/365 142/180\n  f 463/183 462/188 371/176\n  f 243/359 142/180 242/365\n  f 1/441 268/224 165/83\n  f 1/441 165/83 38/232\n  f 394/80 165/83 268/224\n  f 168/71 38/232 165/83\n  f 12/375 13/369 303/70\n  f 12/375 73/77 13/369\n  f 269/219 303/70 13/369\n  f 39/227 13/369 73/77\n  f 387/108 375/156 388/104\n  f 160/103 161/99 146/160\n  f 374/161 388/104 375/156\n  f 145/165 146/160 161/99\n  f 13/369 14/363 269/219\n  f 13/369 39/227 14/363\n  f 313/22 269/219 14/363\n  f 83/31 14/363 39/227\n  f 294/106 301/78 299/86\n  f 64/113 69/93 71/85\n  f 302/74 299/86 301/78\n  f 72/81 71/85 69/93\n  f 341/331 266/234 262/254\n  f 112/336 32/262 36/242\n  f 447/263 262/254 266/234\n  f 227/453 36/242 32/262\n  f 381/132 386/112 382/128\n  f 154/127 155/123 159/107\n  f 385/116 382/128 386/112\n  f 158/111 159/107 155/123\n  f 281/159 331/391 426/382\n  f 51/167 206/332 102/396\n  f 267/229 426/382 331/391\n  f 37/237 102/396 206/332\n  f 424/394 392/88 427/376\n  f 204/344 207/326 166/79\n  f 323/439 427/376 392/88\n  f 93/449 166/79 207/326\n  f 430/358 356/251 421/412\n  f 210/308 199/374 127/255\n  f 438/310 421/412 356/251\n  f 218/30 127/255 199/374\n  f 392/88 328/409 394/80\n  f 166/79 168/71 99/414\n  f 327/415 394/80 328/409\n  f 98/420 99/414 168/71\n  f 458/208 439/304 441/293\n  f 238/389 221/15 219/25\n  f 345/307 441/293 439/304\n  f 116/312 219/25 221/15\n  f 383/124 363/216 342/325\n  f 156/119 113/330 134/220\n  f 464/178 342/325 363/216\n  f 244/353 134/220 113/330\n  f 458/208 462/188 460/198\n  f 238/389 240/377 242/365\n  f 459/203 460/198 462/188\n  f 239/383 242/365 240/377\n  f 435/328 431/352 365/206\n  f 215/45 136/210 211/302\n  f 395/76 365/206 431/352\n  f 170/63 211/302 136/210\n  f 415/447 464/178 399/59\n  f 191/422 174/43 244/353\n  f 363/216 399/59 464/178\n  f 134/220 244/353 174/43\n  f 263/249 429/364 370/181\n  f 33/257 141/185 209/314\n  f 397/68 370/181 429/364\n  f 172/53 209/314 141/185\n  f 458/208 275/189 462/188\n  f 238/389 242/365 45/197\n  f 355/256 462/188 275/189\n  f 126/260 45/197 242/365\n  f 317/2 404/34 318/465\n  f 87/11 88/6 180/13\n  f 403/39 318/465 404/34\n  f 179/18 180/13 88/6\n  f 316/7 405/29 317/2\n  f 86/16 87/11 181/8\n  f 404/34 317/2 405/29\n  f 180/13 181/8 87/11\n  f 315/12 406/24 316/7\n  f 85/21 86/16 182/3\n  f 405/29 316/7 406/24\n  f 181/8 182/3 86/16\n  f 314/17 407/19 315/12\n  f 84/26 85/21 183/466\n  f 406/24 315/12 407/19\n  f 182/3 183/466 85/21\n  f 419/424 407/19 422/406\n  f 195/398 202/356 183/466\n  f 314/17 422/406 407/19\n  f 84/26 183/466 202/356\n  f 367/196 402/44 324/433\n  f 138/200 94/444 178/23\n  f 362/221 324/433 402/44\n  f 133/225 178/23 94/444\n  f 409/9 408/14 307/52\n  f 185/456 77/61 184/461\n  f 293/110 307/52 408/14\n  f 63/117 184/461 77/61\n  f 409/9 307/52 410/4\n  f 185/456 186/451 77/61\n  f 292/114 410/4 307/52\n  f 62/121 77/61 186/451\n  f 411/467 410/4 288/130\n  f 187/446 58/137 186/451\n  f 292/114 288/130 410/4\n  f 62/121 186/451 58/137\n  f 437/316 411/467 433/340\n  f 217/35 213/55 187/446\n  f 288/130 433/340 411/467\n  f 58/137 187/446 213/55\n  f 435/328 417/436 428/370\n  f 215/45 208/320 193/410\n  f 412/462 428/370 417/436\n  f 188/440 193/410 208/320\n  f 265/239 369/186 373/166\n  f 35/247 144/170 140/190\n  f 384/120 373/166 369/186\n  f 157/115 140/190 144/170\n  f 458/208 460/198 439/304\n  f 238/389 219/25 240/377\n  f 310/37 439/304 460/198\n  f 80/46 240/377 219/25\n  f 353/266 377/148 367/196\n  f 124/270 138/200 148/151\n  f 402/44 367/196 377/148\n  f 178/23 148/151 138/200\n  f 5/417 2/435 276/184\n  f 5/417 46/192 2/435\n  f 275/189 276/184 2/435\n  f 45/197 2/435 46/192\n  f 429/364 263/249 422/406\n  f 209/314 202/356 33/257\n  f 419/424 422/406 263/249\n  f 195/398 33/257 202/356\n  f 328/409 359/236 295/102\n  f 99/414 65/109 130/240\n  f 332/385 295/102 359/236\n  f 103/390 130/240 65/109\n  f 368/191 436/322 417/436\n  f 139/195 193/410 216/40\n  f 434/334 417/436 436/322\n  f 214/50 216/40 193/410\n  f 456/218 440/298 290/122\n  f 236/401 60/129 220/20\n  f 393/84 290/122 440/298\n  f 167/75 220/20 60/129\n  f 329/403 463/183 327/415\n  f 100/408 98/420 243/359\n  f 371/176 327/415 463/183\n  f 142/180 243/359 98/420\n  f 327/415 371/176 3/429\n  f 98/420 3/429 142/180\n  f 95/438 3/429 371/176\n  f 95/438 142/180 3/429\n  f 461/193 456/218 306/57\n  f 241/371 76/65 236/401\n  f 290/122 306/57 456/218\n  f 60/129 236/401 76/65\n  f 449/253 340/337 450/248\n  f 229/443 230/437 111/342\n  f 255/289 450/248 340/337\n  f 25/297 111/342 230/437\n  f 262/254 447/263 256/284\n  f 32/262 26/292 227/453\n  f 360/231 256/284 447/263\n  f 131/235 227/453 26/292\n  f 450/248 255/289 451/243\n  f 230/437 231/431 25/297\n  f 254/294 451/243 255/289\n  f 24/303 25/297 231/431\n  f 451/243 254/294 452/238\n  f 231/431 232/425 24/303\n  f 253/299 452/238 254/294\n  f 23/309 24/303 232/425\n  f 452/238 253/299 453/233\n  f 232/425 233/419 23/309\n  f 257/279 453/233 253/299\n  f 27/287 23/309 233/419\n  f 257/279 342/325 453/233\n  f 27/287 233/419 113/330\n  f 454/228 453/233 342/325\n  f 234/413 113/330 233/419\n  f 414/452 465/173 415/447\n  f 190/428 191/422 245/347\n  f 464/178 415/447 465/173\n  f 244/353 245/347 191/422\n  f 442/288 414/452 287/134\n  f 222/10 57/141 190/428\n  f 415/447 287/134 414/452\n  f 191/422 190/428 57/141\n  f 442/288 287/134 443/283\n  f 222/10 223/5 57/141\n  f 259/269 443/283 287/134\n  f 29/277 57/141 223/5\n  f 443/283 259/269 444/278\n  f 223/5 224/468 29/277\n  f 258/274 444/278 259/269\n  f 28/282 29/277 224/468\n  f 445/273 444/278 260/264\n  f 225/463 30/272 224/468\n  f 258/274 260/264 444/278\n  f 28/282 224/468 30/272\n  f 260/264 261/259 445/273\n  f 30/272 225/463 31/267\n  f 446/268 445/273 261/259\n  f 226/458 31/267 225/463\n  f 261/259 468/158 446/268\n  f 31/267 226/458 248/329\n  f 343/319 446/268 468/158\n  f 114/324 248/329 226/458\n  f 251/311 310/37 459/203\n  f 21/321 239/383 80/46\n  f 460/198 459/203 310/37\n  f 240/377 80/46 239/383\n  f 291/118 306/57 393/84\n  f 61/125 167/75 76/65\n  f 290/122 393/84 306/57\n  f 60/129 76/65 167/75\n  f 461/193 306/57 329/403\n  f 241/371 100/408 76/65\n  f 291/118 329/403 306/57\n  f 61/125 76/65 100/408\n  f 377/148 434/334 402/44\n  f 148/151 178/23 214/50\n  f 436/322 402/44 434/334\n  f 216/40 214/50 178/23\n  f 251/311 291/118 310/37\n  f 21/321 80/46 61/125\n  f 393/84 310/37 291/118\n  f 167/75 61/125 80/46\n  f 412/462 417/436 377/148\n  f 188/440 148/151 193/410\n  f 434/334 377/148 417/436\n  f 214/50 193/410 148/151\n  f 342/325 464/178 454/228\n  f 113/330 234/413 244/353\n  f 465/173 454/228 464/178\n  f 245/347 244/353 234/413\n  f 454/228 465/173 358/241\n  f 234/413 129/245 245/347\n  f 466/168 358/241 465/173\n  f 246/341 245/347 129/245\n  f 413/457 344/313 466/168\n  f 189/434 246/341 115/318\n  f 358/241 466/168 344/313\n  f 129/245 115/318 246/341\n  f 438/310 344/313 400/54\n  f 218/30 175/38 115/318\n  f 413/457 400/54 344/313\n  f 189/434 115/318 175/38\n  f 364/211 441/293 361/226\n  f 135/215 132/230 221/15\n  f 345/307 361/226 441/293\n  f 116/312 221/15 132/230\n  f 457/213 421/412 400/54\n  f 237/395 175/38 199/374\n  f 438/310 400/54 421/412\n  f 218/30 199/374 175/38\n  f 457/213 364/211 421/412\n  f 237/395 199/374 135/215\n  f 361/226 421/412 364/211\n  f 132/230 135/215 199/374\n  f 362/221 402/44 289/126\n  f 133/225 59/133 178/23\n  f 436/322 289/126 402/44\n  f 216/40 178/23 59/133\n  f 354/261 266/234 384/120\n  f 125/265 157/115 36/242\n  f 373/166 384/120 266/234\n  f 144/170 36/242 157/115\n  f 256/284 250/317 340/337\n  f 26/292 111/342 8/399\n  f 391/92 340/337 250/317\n  f 164/87 8/399 111/342\n  f 262/254 256/284 449/253\n  f 32/262 229/443 26/292\n  f 340/337 449/253 256/284\n  f 111/342 26/292 229/443\n  f 15/357 318/465 14/363\n  f 15/357 14/363 88/6\n  f 313/22 14/363 318/465\n  f 83/31 88/6 14/363\n  f 318/465 403/39 313/22\n  f 88/6 83/31 179/18\n  f 312/27 313/22 403/39\n  f 82/36 179/18 83/31\n  f 403/39 319/460 312/27\n  f 179/18 82/36 89/1\n  f 311/32 312/27 319/460\n  f 81/41 89/1 82/36\n  f 319/460 325/427 311/32\n  f 89/1 81/41 96/432\n  f 416/442 311/32 325/427\n  f 192/416 96/432 81/41`).children[0]! as Mesh;\n\nexport const TRIANGULATION = [\n  127,\n  34,\n  139,\n  11,\n  0,\n  37,\n  232,\n  231,\n  120,\n  72,\n  37,\n  39,\n  128,\n  121,\n  47,\n  232,\n  121,\n  128,\n  104,\n  69,\n  67,\n  175,\n  171,\n  148,\n  157,\n  154,\n  155,\n  118,\n  50,\n  101,\n  73,\n  39,\n  40,\n  9,\n  151,\n  108,\n  48,\n  115,\n  131,\n  194,\n  204,\n  211,\n  74,\n  40,\n  185,\n  80,\n  42,\n  183,\n  40,\n  92,\n  186,\n  230,\n  229,\n  118,\n  202,\n  212,\n  214,\n  83,\n  18,\n  17,\n  76,\n  61,\n  146,\n  160,\n  29,\n  30,\n  56,\n  157,\n  173,\n  106,\n  204,\n  194,\n  135,\n  214,\n  192,\n  203,\n  165,\n  98,\n  21,\n  71,\n  68,\n  51,\n  45,\n  4,\n  144,\n  24,\n  23,\n  77,\n  146,\n  91,\n  205,\n  50,\n  187,\n  201,\n  200,\n  18,\n  91,\n  106,\n  182,\n  90,\n  91,\n  181,\n  85,\n  84,\n  17,\n  206,\n  203,\n  36,\n  148,\n  171,\n  140,\n  92,\n  40,\n  39,\n  193,\n  189,\n  244,\n  159,\n  158,\n  28,\n  247,\n  246,\n  161,\n  236,\n  3,\n  196,\n  54,\n  68,\n  104,\n  193,\n  168,\n  8,\n  117,\n  228,\n  31,\n  189,\n  193,\n  55,\n  98,\n  97,\n  99,\n  126,\n  47,\n  100,\n  166,\n  79,\n  218,\n  155,\n  154,\n  26,\n  209,\n  49,\n  131,\n  135,\n  136,\n  150,\n  47,\n  126,\n  217,\n  223,\n  52,\n  53,\n  45,\n  51,\n  134,\n  211,\n  170,\n  140,\n  67,\n  69,\n  108,\n  43,\n  106,\n  91,\n  230,\n  119,\n  120,\n  226,\n  130,\n  247,\n  63,\n  53,\n  52,\n  238,\n  20,\n  242,\n  46,\n  70,\n  156,\n  78,\n  62,\n  96,\n  46,\n  53,\n  63,\n  143,\n  34,\n  227,\n  173,\n  155,\n  133,\n  123,\n  117,\n  111,\n  44,\n  125,\n  19,\n  236,\n  134,\n  51,\n  216,\n  206,\n  205,\n  154,\n  153,\n  22,\n  39,\n  37,\n  167,\n  200,\n  201,\n  208,\n  36,\n  142,\n  100,\n  57,\n  212,\n  202,\n  20,\n  60,\n  99,\n  28,\n  158,\n  157,\n  35,\n  226,\n  113,\n  160,\n  159,\n  27,\n  204,\n  202,\n  210,\n  113,\n  225,\n  46,\n  43,\n  202,\n  204,\n  62,\n  76,\n  77,\n  137,\n  123,\n  116,\n  41,\n  38,\n  72,\n  203,\n  129,\n  142,\n  64,\n  98,\n  240,\n  49,\n  102,\n  64,\n  41,\n  73,\n  74,\n  212,\n  216,\n  207,\n  42,\n  74,\n  184,\n  169,\n  170,\n  211,\n  170,\n  149,\n  176,\n  105,\n  66,\n  69,\n  122,\n  6,\n  168,\n  123,\n  147,\n  187,\n  96,\n  77,\n  90,\n  65,\n  55,\n  107,\n  89,\n  90,\n  180,\n  101,\n  100,\n  120,\n  63,\n  105,\n  104,\n  93,\n  137,\n  227,\n  15,\n  86,\n  85,\n  129,\n  102,\n  49,\n  14,\n  87,\n  86,\n  55,\n  8,\n  9,\n  100,\n  47,\n  121,\n  145,\n  23,\n  22,\n  88,\n  89,\n  179,\n  6,\n  122,\n  196,\n  88,\n  95,\n  96,\n  138,\n  172,\n  136,\n  215,\n  58,\n  172,\n  115,\n  48,\n  219,\n  42,\n  80,\n  81,\n  195,\n  3,\n  51,\n  43,\n  146,\n  61,\n  171,\n  175,\n  199,\n  81,\n  82,\n  38,\n  53,\n  46,\n  225,\n  144,\n  163,\n  110,\n  246,\n  33,\n  7,\n  52,\n  65,\n  66,\n  229,\n  228,\n  117,\n  34,\n  127,\n  234,\n  107,\n  108,\n  69,\n  109,\n  108,\n  151,\n  48,\n  64,\n  235,\n  62,\n  78,\n  191,\n  129,\n  209,\n  126,\n  111,\n  35,\n  143,\n  163,\n  161,\n  246,\n  117,\n  123,\n  50,\n  222,\n  65,\n  52,\n  19,\n  125,\n  141,\n  221,\n  55,\n  65,\n  3,\n  195,\n  197,\n  25,\n  7,\n  33,\n  220,\n  237,\n  44,\n  70,\n  71,\n  139,\n  122,\n  193,\n  245,\n  247,\n  130,\n  33,\n  71,\n  21,\n  162,\n  153,\n  158,\n  159,\n  170,\n  169,\n  150,\n  188,\n  174,\n  196,\n  216,\n  186,\n  92,\n  144,\n  160,\n  161,\n  2,\n  97,\n  167,\n  141,\n  125,\n  241,\n  164,\n  167,\n  37,\n  72,\n  38,\n  12,\n  145,\n  159,\n  160,\n  38,\n  82,\n  13,\n  63,\n  68,\n  71,\n  226,\n  35,\n  111,\n  158,\n  153,\n  154,\n  101,\n  50,\n  205,\n  206,\n  92,\n  165,\n  209,\n  198,\n  217,\n  165,\n  167,\n  97,\n  220,\n  115,\n  218,\n  133,\n  112,\n  243,\n  239,\n  238,\n  241,\n  214,\n  135,\n  169,\n  190,\n  173,\n  133,\n  171,\n  208,\n  32,\n  125,\n  44,\n  237,\n  86,\n  87,\n  178,\n  85,\n  86,\n  179,\n  84,\n  85,\n  180,\n  83,\n  84,\n  181,\n  201,\n  83,\n  182,\n  137,\n  93,\n  132,\n  76,\n  62,\n  183,\n  61,\n  76,\n  184,\n  57,\n  61,\n  185,\n  212,\n  57,\n  186,\n  214,\n  207,\n  187,\n  34,\n  143,\n  156,\n  79,\n  239,\n  237,\n  123,\n  137,\n  177,\n  44,\n  1,\n  4,\n  201,\n  194,\n  32,\n  64,\n  102,\n  129,\n  213,\n  215,\n  138,\n  59,\n  166,\n  219,\n  242,\n  99,\n  97,\n  2,\n  94,\n  141,\n  75,\n  59,\n  235,\n  24,\n  110,\n  228,\n  25,\n  130,\n  226,\n  23,\n  24,\n  229,\n  22,\n  23,\n  230,\n  26,\n  22,\n  231,\n  112,\n  26,\n  232,\n  189,\n  190,\n  243,\n  221,\n  56,\n  190,\n  28,\n  56,\n  221,\n  27,\n  28,\n  222,\n  29,\n  27,\n  223,\n  30,\n  29,\n  224,\n  247,\n  30,\n  225,\n  238,\n  79,\n  20,\n  166,\n  59,\n  75,\n  60,\n  75,\n  240,\n  147,\n  177,\n  215,\n  20,\n  79,\n  166,\n  187,\n  147,\n  213,\n  112,\n  233,\n  244,\n  233,\n  128,\n  245,\n  128,\n  114,\n  188,\n  114,\n  217,\n  174,\n  131,\n  115,\n  220,\n  217,\n  198,\n  236,\n  198,\n  131,\n  134,\n  177,\n  132,\n  58,\n  143,\n  35,\n  124,\n  110,\n  163,\n  7,\n  228,\n  110,\n  25,\n  356,\n  389,\n  368,\n  11,\n  302,\n  267,\n  452,\n  350,\n  349,\n  302,\n  303,\n  269,\n  357,\n  343,\n  277,\n  452,\n  453,\n  357,\n  333,\n  332,\n  297,\n  175,\n  152,\n  377,\n  384,\n  398,\n  382,\n  347,\n  348,\n  330,\n  303,\n  304,\n  270,\n  9,\n  336,\n  337,\n  278,\n  279,\n  360,\n  418,\n  262,\n  431,\n  304,\n  408,\n  409,\n  310,\n  415,\n  407,\n  270,\n  409,\n  410,\n  450,\n  348,\n  347,\n  422,\n  430,\n  434,\n  313,\n  314,\n  17,\n  306,\n  307,\n  375,\n  387,\n  388,\n  260,\n  286,\n  414,\n  398,\n  335,\n  406,\n  418,\n  364,\n  367,\n  416,\n  423,\n  358,\n  327,\n  251,\n  284,\n  298,\n  281,\n  5,\n  4,\n  373,\n  374,\n  253,\n  307,\n  320,\n  321,\n  425,\n  427,\n  411,\n  421,\n  313,\n  18,\n  321,\n  405,\n  406,\n  320,\n  404,\n  405,\n  315,\n  16,\n  17,\n  426,\n  425,\n  266,\n  377,\n  400,\n  369,\n  322,\n  391,\n  269,\n  417,\n  465,\n  464,\n  386,\n  257,\n  258,\n  466,\n  260,\n  388,\n  456,\n  399,\n  419,\n  284,\n  332,\n  333,\n  417,\n  285,\n  8,\n  346,\n  340,\n  261,\n  413,\n  441,\n  285,\n  327,\n  460,\n  328,\n  355,\n  371,\n  329,\n  392,\n  439,\n  438,\n  382,\n  341,\n  256,\n  429,\n  420,\n  360,\n  364,\n  394,\n  379,\n  277,\n  343,\n  437,\n  443,\n  444,\n  283,\n  275,\n  440,\n  363,\n  431,\n  262,\n  369,\n  297,\n  338,\n  337,\n  273,\n  375,\n  321,\n  450,\n  451,\n  349,\n  446,\n  342,\n  467,\n  293,\n  334,\n  282,\n  458,\n  461,\n  462,\n  276,\n  353,\n  383,\n  308,\n  324,\n  325,\n  276,\n  300,\n  293,\n  372,\n  345,\n  447,\n  382,\n  398,\n  362,\n  352,\n  345,\n  340,\n  274,\n  1,\n  19,\n  456,\n  248,\n  281,\n  436,\n  427,\n  425,\n  381,\n  256,\n  252,\n  269,\n  391,\n  393,\n  200,\n  199,\n  428,\n  266,\n  330,\n  329,\n  287,\n  273,\n  422,\n  250,\n  462,\n  328,\n  258,\n  286,\n  384,\n  265,\n  353,\n  342,\n  387,\n  259,\n  257,\n  424,\n  431,\n  430,\n  342,\n  353,\n  276,\n  273,\n  335,\n  424,\n  292,\n  325,\n  307,\n  366,\n  447,\n  345,\n  271,\n  303,\n  302,\n  423,\n  266,\n  371,\n  294,\n  455,\n  460,\n  279,\n  278,\n  294,\n  271,\n  272,\n  304,\n  432,\n  434,\n  427,\n  272,\n  407,\n  408,\n  394,\n  430,\n  431,\n  395,\n  369,\n  400,\n  334,\n  333,\n  299,\n  351,\n  417,\n  168,\n  352,\n  280,\n  411,\n  325,\n  319,\n  320,\n  295,\n  296,\n  336,\n  319,\n  403,\n  404,\n  330,\n  348,\n  349,\n  293,\n  298,\n  333,\n  323,\n  454,\n  447,\n  15,\n  16,\n  315,\n  358,\n  429,\n  279,\n  14,\n  15,\n  316,\n  285,\n  336,\n  9,\n  329,\n  349,\n  350,\n  374,\n  380,\n  252,\n  318,\n  402,\n  403,\n  6,\n  197,\n  419,\n  318,\n  319,\n  325,\n  367,\n  364,\n  365,\n  435,\n  367,\n  397,\n  344,\n  438,\n  439,\n  272,\n  271,\n  311,\n  195,\n  5,\n  281,\n  273,\n  287,\n  291,\n  396,\n  428,\n  199,\n  311,\n  271,\n  268,\n  283,\n  444,\n  445,\n  373,\n  254,\n  339,\n  263,\n  466,\n  249,\n  282,\n  334,\n  296,\n  449,\n  347,\n  346,\n  264,\n  447,\n  454,\n  336,\n  296,\n  299,\n  338,\n  10,\n  151,\n  278,\n  439,\n  455,\n  292,\n  407,\n  415,\n  358,\n  371,\n  355,\n  340,\n  345,\n  372,\n  390,\n  249,\n  466,\n  346,\n  347,\n  280,\n  442,\n  443,\n  282,\n  19,\n  94,\n  370,\n  441,\n  442,\n  295,\n  248,\n  419,\n  197,\n  263,\n  255,\n  359,\n  440,\n  275,\n  274,\n  300,\n  383,\n  368,\n  351,\n  412,\n  465,\n  263,\n  467,\n  466,\n  301,\n  368,\n  389,\n  380,\n  374,\n  386,\n  395,\n  378,\n  379,\n  412,\n  351,\n  419,\n  436,\n  426,\n  322,\n  373,\n  390,\n  388,\n  2,\n  164,\n  393,\n  370,\n  462,\n  461,\n  164,\n  0,\n  267,\n  302,\n  11,\n  12,\n  374,\n  373,\n  387,\n  268,\n  12,\n  13,\n  293,\n  300,\n  301,\n  446,\n  261,\n  340,\n  385,\n  384,\n  381,\n  330,\n  266,\n  425,\n  426,\n  423,\n  391,\n  429,\n  355,\n  437,\n  391,\n  327,\n  326,\n  440,\n  457,\n  438,\n  341,\n  382,\n  362,\n  459,\n  457,\n  461,\n  434,\n  430,\n  394,\n  414,\n  463,\n  362,\n  396,\n  369,\n  262,\n  354,\n  461,\n  457,\n  316,\n  403,\n  402,\n  315,\n  404,\n  403,\n  314,\n  405,\n  404,\n  313,\n  406,\n  405,\n  421,\n  418,\n  406,\n  366,\n  401,\n  361,\n  306,\n  408,\n  407,\n  291,\n  409,\n  408,\n  287,\n  410,\n  409,\n  432,\n  436,\n  410,\n  434,\n  416,\n  411,\n  264,\n  368,\n  383,\n  309,\n  438,\n  457,\n  352,\n  376,\n  401,\n  274,\n  275,\n  4,\n  421,\n  428,\n  262,\n  294,\n  327,\n  358,\n  433,\n  416,\n  367,\n  289,\n  455,\n  439,\n  462,\n  370,\n  326,\n  2,\n  326,\n  370,\n  305,\n  460,\n  455,\n  254,\n  449,\n  448,\n  255,\n  261,\n  446,\n  253,\n  450,\n  449,\n  252,\n  451,\n  450,\n  256,\n  452,\n  451,\n  341,\n  453,\n  452,\n  413,\n  464,\n  463,\n  441,\n  413,\n  414,\n  258,\n  442,\n  441,\n  257,\n  443,\n  442,\n  259,\n  444,\n  443,\n  260,\n  445,\n  444,\n  467,\n  342,\n  445,\n  459,\n  458,\n  250,\n  289,\n  392,\n  290,\n  290,\n  328,\n  460,\n  376,\n  433,\n  435,\n  250,\n  290,\n  392,\n  411,\n  416,\n  433,\n  341,\n  463,\n  464,\n  453,\n  464,\n  465,\n  357,\n  465,\n  412,\n  343,\n  412,\n  399,\n  360,\n  363,\n  440,\n  437,\n  399,\n  456,\n  420,\n  456,\n  363,\n  401,\n  435,\n  288,\n  372,\n  383,\n  353,\n  339,\n  255,\n  249,\n  448,\n  261,\n  255,\n  133,\n  243,\n  190,\n  133,\n  155,\n  112,\n  33,\n  246,\n  247,\n  33,\n  130,\n  25,\n  398,\n  384,\n  286,\n  362,\n  398,\n  414,\n  362,\n  463,\n  341,\n  263,\n  359,\n  467,\n  263,\n  249,\n  255,\n  466,\n  467,\n  260,\n  75,\n  60,\n  166,\n  238,\n  239,\n  79,\n  162,\n  127,\n  139,\n  72,\n  11,\n  37,\n  121,\n  232,\n  120,\n  73,\n  72,\n  39,\n  114,\n  128,\n  47,\n  233,\n  232,\n  128,\n  103,\n  104,\n  67,\n  152,\n  175,\n  148,\n  173,\n  157,\n  155,\n  119,\n  118,\n  101,\n  74,\n  73,\n  40,\n  107,\n  9,\n  108,\n  49,\n  48,\n  131,\n  32,\n  194,\n  211,\n  184,\n  74,\n  185,\n  191,\n  80,\n  183,\n  185,\n  40,\n  186,\n  119,\n  230,\n  118,\n  210,\n  202,\n  214,\n  84,\n  83,\n  17,\n  77,\n  76,\n  146,\n  161,\n  160,\n  30,\n  190,\n  56,\n  173,\n  182,\n  106,\n  194,\n  138,\n  135,\n  192,\n  129,\n  203,\n  98,\n  54,\n  21,\n  68,\n  5,\n  51,\n  4,\n  145,\n  144,\n  23,\n  90,\n  77,\n  91,\n  207,\n  205,\n  187,\n  83,\n  201,\n  18,\n  181,\n  91,\n  182,\n  180,\n  90,\n  181,\n  16,\n  85,\n  17,\n  205,\n  206,\n  36,\n  176,\n  148,\n  140,\n  165,\n  92,\n  39,\n  245,\n  193,\n  244,\n  27,\n  159,\n  28,\n  30,\n  247,\n  161,\n  174,\n  236,\n  196,\n  103,\n  54,\n  104,\n  55,\n  193,\n  8,\n  111,\n  117,\n  31,\n  221,\n  189,\n  55,\n  240,\n  98,\n  99,\n  142,\n  126,\n  100,\n  219,\n  166,\n  218,\n  112,\n  155,\n  26,\n  198,\n  209,\n  131,\n  169,\n  135,\n  150,\n  114,\n  47,\n  217,\n  224,\n  223,\n  53,\n  220,\n  45,\n  134,\n  32,\n  211,\n  140,\n  109,\n  67,\n  108,\n  146,\n  43,\n  91,\n  231,\n  230,\n  120,\n  113,\n  226,\n  247,\n  105,\n  63,\n  52,\n  241,\n  238,\n  242,\n  124,\n  46,\n  156,\n  95,\n  78,\n  96,\n  70,\n  46,\n  63,\n  116,\n  143,\n  227,\n  116,\n  123,\n  111,\n  1,\n  44,\n  19,\n  3,\n  236,\n  51,\n  207,\n  216,\n  205,\n  26,\n  154,\n  22,\n  165,\n  39,\n  167,\n  199,\n  200,\n  208,\n  101,\n  36,\n  100,\n  43,\n  57,\n  202,\n  242,\n  20,\n  99,\n  56,\n  28,\n  157,\n  124,\n  35,\n  113,\n  29,\n  160,\n  27,\n  211,\n  204,\n  210,\n  124,\n  113,\n  46,\n  106,\n  43,\n  204,\n  96,\n  62,\n  77,\n  227,\n  137,\n  116,\n  73,\n  41,\n  72,\n  36,\n  203,\n  142,\n  235,\n  64,\n  240,\n  48,\n  49,\n  64,\n  42,\n  41,\n  74,\n  214,\n  212,\n  207,\n  183,\n  42,\n  184,\n  210,\n  169,\n  211,\n  140,\n  170,\n  176,\n  104,\n  105,\n  69,\n  193,\n  122,\n  168,\n  50,\n  123,\n  187,\n  89,\n  96,\n  90,\n  66,\n  65,\n  107,\n  179,\n  89,\n  180,\n  119,\n  101,\n  120,\n  68,\n  63,\n  104,\n  234,\n  93,\n  227,\n  16,\n  15,\n  85,\n  209,\n  129,\n  49,\n  15,\n  14,\n  86,\n  107,\n  55,\n  9,\n  120,\n  100,\n  121,\n  153,\n  145,\n  22,\n  178,\n  88,\n  179,\n  197,\n  6,\n  196,\n  89,\n  88,\n  96,\n  135,\n  138,\n  136,\n  138,\n  215,\n  172,\n  218,\n  115,\n  219,\n  41,\n  42,\n  81,\n  5,\n  195,\n  51,\n  57,\n  43,\n  61,\n  208,\n  171,\n  199,\n  41,\n  81,\n  38,\n  224,\n  53,\n  225,\n  24,\n  144,\n  110,\n  105,\n  52,\n  66,\n  118,\n  229,\n  117,\n  227,\n  34,\n  234,\n  66,\n  107,\n  69,\n  10,\n  109,\n  151,\n  219,\n  48,\n  235,\n  183,\n  62,\n  191,\n  142,\n  129,\n  126,\n  116,\n  111,\n  143,\n  7,\n  163,\n  246,\n  118,\n  117,\n  50,\n  223,\n  222,\n  52,\n  94,\n  19,\n  141,\n  222,\n  221,\n  65,\n  196,\n  3,\n  197,\n  45,\n  220,\n  44,\n  156,\n  70,\n  139,\n  188,\n  122,\n  245,\n  139,\n  71,\n  162,\n  145,\n  153,\n  159,\n  149,\n  170,\n  150,\n  122,\n  188,\n  196,\n  206,\n  216,\n  92,\n  163,\n  144,\n  161,\n  164,\n  2,\n  167,\n  242,\n  141,\n  241,\n  0,\n  164,\n  37,\n  11,\n  72,\n  12,\n  144,\n  145,\n  160,\n  12,\n  38,\n  13,\n  70,\n  63,\n  71,\n  31,\n  226,\n  111,\n  157,\n  158,\n  154,\n  36,\n  101,\n  205,\n  203,\n  206,\n  165,\n  126,\n  209,\n  217,\n  98,\n  165,\n  97,\n  237,\n  220,\n  218,\n  237,\n  239,\n  241,\n  210,\n  214,\n  169,\n  140,\n  171,\n  32,\n  241,\n  125,\n  237,\n  179,\n  86,\n  178,\n  180,\n  85,\n  179,\n  181,\n  84,\n  180,\n  182,\n  83,\n  181,\n  194,\n  201,\n  182,\n  177,\n  137,\n  132,\n  184,\n  76,\n  183,\n  185,\n  61,\n  184,\n  186,\n  57,\n  185,\n  216,\n  212,\n  186,\n  192,\n  214,\n  187,\n  139,\n  34,\n  156,\n  218,\n  79,\n  237,\n  147,\n  123,\n  177,\n  45,\n  44,\n  4,\n  208,\n  201,\n  32,\n  98,\n  64,\n  129,\n  192,\n  213,\n  138,\n  235,\n  59,\n  219,\n  141,\n  242,\n  97,\n  97,\n  2,\n  141,\n  240,\n  75,\n  235,\n  229,\n  24,\n  228,\n  31,\n  25,\n  226,\n  230,\n  23,\n  229,\n  231,\n  22,\n  230,\n  232,\n  26,\n  231,\n  233,\n  112,\n  232,\n  244,\n  189,\n  243,\n  189,\n  221,\n  190,\n  222,\n  28,\n  221,\n  223,\n  27,\n  222,\n  224,\n  29,\n  223,\n  225,\n  30,\n  224,\n  113,\n  247,\n  225,\n  99,\n  60,\n  240,\n  213,\n  147,\n  215,\n  60,\n  20,\n  166,\n  192,\n  187,\n  213,\n  243,\n  112,\n  244,\n  244,\n  233,\n  245,\n  245,\n  128,\n  188,\n  188,\n  114,\n  174,\n  134,\n  131,\n  220,\n  174,\n  217,\n  236,\n  236,\n  198,\n  134,\n  215,\n  177,\n  58,\n  156,\n  143,\n  124,\n  25,\n  110,\n  7,\n  31,\n  228,\n  25,\n  264,\n  356,\n  368,\n  0,\n  11,\n  267,\n  451,\n  452,\n  349,\n  267,\n  302,\n  269,\n  350,\n  357,\n  277,\n  350,\n  452,\n  357,\n  299,\n  333,\n  297,\n  396,\n  175,\n  377,\n  381,\n  384,\n  382,\n  280,\n  347,\n  330,\n  269,\n  303,\n  270,\n  151,\n  9,\n  337,\n  344,\n  278,\n  360,\n  424,\n  418,\n  431,\n  270,\n  304,\n  409,\n  272,\n  310,\n  407,\n  322,\n  270,\n  410,\n  449,\n  450,\n  347,\n  432,\n  422,\n  434,\n  18,\n  313,\n  17,\n  291,\n  306,\n  375,\n  259,\n  387,\n  260,\n  424,\n  335,\n  418,\n  434,\n  364,\n  416,\n  391,\n  423,\n  327,\n  301,\n  251,\n  298,\n  275,\n  281,\n  4,\n  254,\n  373,\n  253,\n  375,\n  307,\n  321,\n  280,\n  425,\n  411,\n  200,\n  421,\n  18,\n  335,\n  321,\n  406,\n  321,\n  320,\n  405,\n  314,\n  315,\n  17,\n  423,\n  426,\n  266,\n  396,\n  377,\n  369,\n  270,\n  322,\n  269,\n  413,\n  417,\n  464,\n  385,\n  386,\n  258,\n  248,\n  456,\n  419,\n  298,\n  284,\n  333,\n  168,\n  417,\n  8,\n  448,\n  346,\n  261,\n  417,\n  413,\n  285,\n  326,\n  327,\n  328,\n  277,\n  355,\n  329,\n  309,\n  392,\n  438,\n  381,\n  382,\n  256,\n  279,\n  429,\n  360,\n  365,\n  364,\n  379,\n  355,\n  277,\n  437,\n  282,\n  443,\n  283,\n  281,\n  275,\n  363,\n  395,\n  431,\n  369,\n  299,\n  297,\n  337,\n  335,\n  273,\n  321,\n  348,\n  450,\n  349,\n  359,\n  446,\n  467,\n  283,\n  293,\n  282,\n  250,\n  458,\n  462,\n  300,\n  276,\n  383,\n  292,\n  308,\n  325,\n  283,\n  276,\n  293,\n  264,\n  372,\n  447,\n  346,\n  352,\n  340,\n  354,\n  274,\n  19,\n  363,\n  456,\n  281,\n  426,\n  436,\n  425,\n  380,\n  381,\n  252,\n  267,\n  269,\n  393,\n  421,\n  200,\n  428,\n  371,\n  266,\n  329,\n  432,\n  287,\n  422,\n  290,\n  250,\n  328,\n  385,\n  258,\n  384,\n  446,\n  265,\n  342,\n  386,\n  387,\n  257,\n  422,\n  424,\n  430,\n  445,\n  342,\n  276,\n  422,\n  273,\n  424,\n  306,\n  292,\n  307,\n  352,\n  366,\n  345,\n  268,\n  271,\n  302,\n  358,\n  423,\n  371,\n  327,\n  294,\n  460,\n  331,\n  279,\n  294,\n  303,\n  271,\n  304,\n  436,\n  432,\n  427,\n  304,\n  272,\n  408,\n  395,\n  394,\n  431,\n  378,\n  395,\n  400,\n  296,\n  334,\n  299,\n  6,\n  351,\n  168,\n  376,\n  352,\n  411,\n  307,\n  325,\n  320,\n  285,\n  295,\n  336,\n  320,\n  319,\n  404,\n  329,\n  330,\n  349,\n  334,\n  293,\n  333,\n  366,\n  323,\n  447,\n  316,\n  15,\n  315,\n  331,\n  358,\n  279,\n  317,\n  14,\n  316,\n  8,\n  285,\n  9,\n  277,\n  329,\n  350,\n  253,\n  374,\n  252,\n  319,\n  318,\n  403,\n  351,\n  6,\n  419,\n  324,\n  318,\n  325,\n  397,\n  367,\n  365,\n  288,\n  435,\n  397,\n  278,\n  344,\n  439,\n  310,\n  272,\n  311,\n  248,\n  195,\n  281,\n  375,\n  273,\n  291,\n  175,\n  396,\n  199,\n  312,\n  311,\n  268,\n  276,\n  283,\n  445,\n  390,\n  373,\n  339,\n  295,\n  282,\n  296,\n  448,\n  449,\n  346,\n  356,\n  264,\n  454,\n  337,\n  336,\n  299,\n  337,\n  338,\n  151,\n  294,\n  278,\n  455,\n  308,\n  292,\n  415,\n  429,\n  358,\n  355,\n  265,\n  340,\n  372,\n  388,\n  390,\n  466,\n  352,\n  346,\n  280,\n  295,\n  442,\n  282,\n  354,\n  19,\n  370,\n  285,\n  441,\n  295,\n  195,\n  248,\n  197,\n  457,\n  440,\n  274,\n  301,\n  300,\n  368,\n  417,\n  351,\n  465,\n  251,\n  301,\n  389,\n  385,\n  380,\n  386,\n  394,\n  395,\n  379,\n  399,\n  412,\n  419,\n  410,\n  436,\n  322,\n  387,\n  373,\n  388,\n  326,\n  2,\n  393,\n  354,\n  370,\n  461,\n  393,\n  164,\n  267,\n  268,\n  302,\n  12,\n  386,\n  374,\n  387,\n  312,\n  268,\n  13,\n  298,\n  293,\n  301,\n  265,\n  446,\n  340,\n  380,\n  385,\n  381,\n  280,\n  330,\n  425,\n  322,\n  426,\n  391,\n  420,\n  429,\n  437,\n  393,\n  391,\n  326,\n  344,\n  440,\n  438,\n  458,\n  459,\n  461,\n  364,\n  434,\n  394,\n  428,\n  396,\n  262,\n  274,\n  354,\n  457,\n  317,\n  316,\n  402,\n  316,\n  315,\n  403,\n  315,\n  314,\n  404,\n  314,\n  313,\n  405,\n  313,\n  421,\n  406,\n  323,\n  366,\n  361,\n  292,\n  306,\n  407,\n  306,\n  291,\n  408,\n  291,\n  287,\n  409,\n  287,\n  432,\n  410,\n  427,\n  434,\n  411,\n  372,\n  264,\n  383,\n  459,\n  309,\n  457,\n  366,\n  352,\n  401,\n  1,\n  274,\n  4,\n  418,\n  421,\n  262,\n  331,\n  294,\n  358,\n  435,\n  433,\n  367,\n  392,\n  289,\n  439,\n  328,\n  462,\n  326,\n  94,\n  2,\n  370,\n  289,\n  305,\n  455,\n  339,\n  254,\n  448,\n  359,\n  255,\n  446,\n  254,\n  253,\n  449,\n  253,\n  252,\n  450,\n  252,\n  256,\n  451,\n  256,\n  341,\n  452,\n  414,\n  413,\n  463,\n  286,\n  441,\n  414,\n  286,\n  258,\n  441,\n  258,\n  257,\n  442,\n  257,\n  259,\n  443,\n  259,\n  260,\n  444,\n  260,\n  467,\n  445,\n  309,\n  459,\n  250,\n  305,\n  289,\n  290,\n  305,\n  290,\n  460,\n  401,\n  376,\n  435,\n  309,\n  250,\n  392,\n  376,\n  411,\n  433,\n  453,\n  341,\n  464,\n  357,\n  453,\n  465,\n  343,\n  357,\n  412,\n  437,\n  343,\n  399,\n  344,\n  360,\n  440,\n  420,\n  437,\n  456,\n  360,\n  420,\n  363,\n  361,\n  401,\n  288,\n  265,\n  372,\n  353,\n  390,\n  339,\n  249,\n  339,\n  448,\n  255,\n];\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const UV_COORDS: Array<[number, number]> = [\n  [0.499976992607117, 0.652534008026123],\n  [0.500025987625122, 0.547487020492554],\n  [0.499974012374878, 0.602371990680695],\n  [0.482113003730774, 0.471979022026062],\n  [0.500150978565216, 0.527155995368958],\n  [0.499909996986389, 0.498252987861633],\n  [0.499523013830185, 0.40106201171875],\n  [0.289712011814117, 0.380764007568359],\n  [0.499954998493195, 0.312398016452789],\n  [0.499987006187439, 0.269918978214264],\n  [0.500023007392883, 0.107050001621246],\n  [0.500023007392883, 0.666234016418457],\n  [0.5000159740448, 0.679224014282227],\n  [0.500023007392883, 0.692348003387451],\n  [0.499976992607117, 0.695277988910675],\n  [0.499976992607117, 0.70593398809433],\n  [0.499976992607117, 0.719385027885437],\n  [0.499976992607117, 0.737019002437592],\n  [0.499967992305756, 0.781370997428894],\n  [0.499816000461578, 0.562981009483337],\n  [0.473773002624512, 0.573909997940063],\n  [0.104906998574734, 0.254140973091125],\n  [0.365929991006851, 0.409575998783112],\n  [0.338757991790771, 0.41302502155304],\n  [0.311120003461838, 0.409460008144379],\n  [0.274657994508743, 0.389131009578705],\n  [0.393361985683441, 0.403706014156342],\n  [0.345234006643295, 0.344011008739471],\n  [0.370094001293182, 0.346076011657715],\n  [0.319321990013123, 0.347265005111694],\n  [0.297903001308441, 0.353591024875641],\n  [0.24779200553894, 0.410809993743896],\n  [0.396889001131058, 0.842755019664764],\n  [0.280097991228104, 0.375599980354309],\n  [0.106310002505779, 0.399955987930298],\n  [0.2099249958992, 0.391353011131287],\n  [0.355807989835739, 0.534406006336212],\n  [0.471751004457474, 0.65040397644043],\n  [0.474155008792877, 0.680191993713379],\n  [0.439785003662109, 0.657229006290436],\n  [0.414617002010345, 0.66654098033905],\n  [0.450374007225037, 0.680860996246338],\n  [0.428770989179611, 0.682690978050232],\n  [0.374971002340317, 0.727805018424988],\n  [0.486716985702515, 0.547628998756409],\n  [0.485300987958908, 0.527395009994507],\n  [0.257764995098114, 0.314490020275116],\n  [0.401223003864288, 0.455172002315521],\n  [0.429818987846375, 0.548614978790283],\n  [0.421351999044418, 0.533740997314453],\n  [0.276895999908447, 0.532056987285614],\n  [0.483370006084442, 0.499586999416351],\n  [0.33721199631691, 0.282882988452911],\n  [0.296391993761063, 0.293242990970612],\n  [0.169294998049736, 0.193813979625702],\n  [0.447580009698868, 0.302609980106354],\n  [0.392390012741089, 0.353887975215912],\n  [0.354490011930466, 0.696784019470215],\n  [0.067304998636246, 0.730105042457581],\n  [0.442739009857178, 0.572826027870178],\n  [0.457098007202148, 0.584792017936707],\n  [0.381974011659622, 0.694710969924927],\n  [0.392388999462128, 0.694203019142151],\n  [0.277076005935669, 0.271932005882263],\n  [0.422551989555359, 0.563233017921448],\n  [0.385919004678726, 0.281364023685455],\n  [0.383103013038635, 0.255840003490448],\n  [0.331431001424789, 0.119714021682739],\n  [0.229923993349075, 0.232002973556519],\n  [0.364500999450684, 0.189113974571228],\n  [0.229622006416321, 0.299540996551514],\n  [0.173287004232407, 0.278747975826263],\n  [0.472878992557526, 0.666198015213013],\n  [0.446828007698059, 0.668527007102966],\n  [0.422762006521225, 0.673889994621277],\n  [0.445307999849319, 0.580065965652466],\n  [0.388103008270264, 0.693961024284363],\n  [0.403039008378983, 0.706539988517761],\n  [0.403629004955292, 0.693953037261963],\n  [0.460041999816895, 0.557139039039612],\n  [0.431158006191254, 0.692366003990173],\n  [0.452181994915009, 0.692366003990173],\n  [0.475387006998062, 0.692366003990173],\n  [0.465828001499176, 0.779190003871918],\n  [0.472328990697861, 0.736225962638855],\n  [0.473087012767792, 0.717857003211975],\n  [0.473122000694275, 0.704625964164734],\n  [0.473033010959625, 0.695277988910675],\n  [0.427942007780075, 0.695277988910675],\n  [0.426479011774063, 0.703539967536926],\n  [0.423162013292313, 0.711845993995667],\n  [0.4183090031147, 0.720062971115112],\n  [0.390094995498657, 0.639572978019714],\n  [0.013953999616206, 0.560034036636353],\n  [0.499913990497589, 0.58014702796936],\n  [0.413199990987778, 0.69539999961853],\n  [0.409626007080078, 0.701822996139526],\n  [0.468080013990402, 0.601534962654114],\n  [0.422728985548019, 0.585985004901886],\n  [0.463079988956451, 0.593783974647522],\n  [0.37211999297142, 0.47341400384903],\n  [0.334562003612518, 0.496073007583618],\n  [0.411671012639999, 0.546965003013611],\n  [0.242175996303558, 0.14767599105835],\n  [0.290776997804642, 0.201445996761322],\n  [0.327338010072708, 0.256527006626129],\n  [0.399509996175766, 0.748921036720276],\n  [0.441727995872498, 0.261676013469696],\n  [0.429764986038208, 0.187834024429321],\n  [0.412198007106781, 0.108901023864746],\n  [0.288955003023148, 0.398952007293701],\n  [0.218936994671822, 0.435410976409912],\n  [0.41278201341629, 0.398970007896423],\n  [0.257135003805161, 0.355440020561218],\n  [0.427684992551804, 0.437960982322693],\n  [0.448339998722076, 0.536936044692993],\n  [0.178560003638268, 0.45755398273468],\n  [0.247308000922203, 0.457193970680237],\n  [0.286267012357712, 0.467674970626831],\n  [0.332827985286713, 0.460712015628815],\n  [0.368755996227264, 0.447206974029541],\n  [0.398963987827301, 0.432654976844788],\n  [0.476410001516342, 0.405806005001068],\n  [0.189241006970406, 0.523923993110657],\n  [0.228962004184723, 0.348950982093811],\n  [0.490725994110107, 0.562400996685028],\n  [0.404670000076294, 0.485132992267609],\n  [0.019469000399113, 0.401564002037048],\n  [0.426243007183075, 0.420431017875671],\n  [0.396993011236191, 0.548797011375427],\n  [0.266469985246658, 0.376977026462555],\n  [0.439121007919312, 0.51895797252655],\n  [0.032313998788595, 0.644356966018677],\n  [0.419054001569748, 0.387154996395111],\n  [0.462783008813858, 0.505746960639954],\n  [0.238978996872902, 0.779744982719421],\n  [0.198220998048782, 0.831938028335571],\n  [0.107550002634525, 0.540755033493042],\n  [0.183610007166862, 0.740257024765015],\n  [0.134409993886948, 0.333683013916016],\n  [0.385764002799988, 0.883153975009918],\n  [0.490967005491257, 0.579378008842468],\n  [0.382384985685349, 0.508572995662689],\n  [0.174399003386497, 0.397670984268188],\n  [0.318785011768341, 0.39623498916626],\n  [0.343364000320435, 0.400596976280212],\n  [0.396100014448166, 0.710216999053955],\n  [0.187885001301765, 0.588537991046906],\n  [0.430987000465393, 0.944064974784851],\n  [0.318993002176285, 0.898285031318665],\n  [0.266247987747192, 0.869701027870178],\n  [0.500023007392883, 0.190576016902924],\n  [0.499976992607117, 0.954452991485596],\n  [0.366169989109039, 0.398822009563446],\n  [0.393207013607025, 0.39553701877594],\n  [0.410373002290726, 0.391080021858215],\n  [0.194993004202843, 0.342101991176605],\n  [0.388664990663528, 0.362284004688263],\n  [0.365961998701096, 0.355970978736877],\n  [0.343364000320435, 0.355356991291046],\n  [0.318785011768341, 0.35834002494812],\n  [0.301414996385574, 0.363156020641327],\n  [0.058132998645306, 0.319076001644135],\n  [0.301414996385574, 0.387449026107788],\n  [0.499987989664078, 0.618434011936188],\n  [0.415838003158569, 0.624195992946625],\n  [0.445681989192963, 0.566076993942261],\n  [0.465844005346298, 0.620640993118286],\n  [0.49992299079895, 0.351523995399475],\n  [0.288718998432159, 0.819945991039276],\n  [0.335278987884521, 0.852819979190826],\n  [0.440512001514435, 0.902418971061707],\n  [0.128294005990028, 0.791940987110138],\n  [0.408771991729736, 0.373893976211548],\n  [0.455606997013092, 0.451801002025604],\n  [0.499877005815506, 0.908990025520325],\n  [0.375436991453171, 0.924192011356354],\n  [0.11421000212431, 0.615022003650665],\n  [0.448662012815475, 0.695277988910675],\n  [0.4480200111866, 0.704632043838501],\n  [0.447111994028091, 0.715808033943176],\n  [0.444831997156143, 0.730794012546539],\n  [0.430011987686157, 0.766808986663818],\n  [0.406787008047104, 0.685672998428345],\n  [0.400738000869751, 0.681069016456604],\n  [0.392399996519089, 0.677703022956848],\n  [0.367855995893478, 0.663918972015381],\n  [0.247923001646996, 0.601333022117615],\n  [0.452769994735718, 0.420849978923798],\n  [0.43639200925827, 0.359887003898621],\n  [0.416164010763168, 0.368713974952698],\n  [0.413385987281799, 0.692366003990173],\n  [0.228018000721931, 0.683571994304657],\n  [0.468268007040024, 0.352671027183533],\n  [0.411361992359161, 0.804327011108398],\n  [0.499989002943039, 0.469825029373169],\n  [0.479153990745544, 0.442654013633728],\n  [0.499974012374878, 0.439637005329132],\n  [0.432112008333206, 0.493588984012604],\n  [0.499886006116867, 0.866917014122009],\n  [0.49991300702095, 0.821729004383087],\n  [0.456548988819122, 0.819200992584229],\n  [0.344549000263214, 0.745438992977142],\n  [0.37890899181366, 0.574010014533997],\n  [0.374292999505997, 0.780184984207153],\n  [0.319687992334366, 0.570737957954407],\n  [0.357154995203018, 0.604269981384277],\n  [0.295284003019333, 0.621580958366394],\n  [0.447750002145767, 0.862477004528046],\n  [0.410986006259918, 0.508723020553589],\n  [0.31395098567009, 0.775308012962341],\n  [0.354128003120422, 0.812552988529205],\n  [0.324548006057739, 0.703992962837219],\n  [0.189096003770828, 0.646299958229065],\n  [0.279776990413666, 0.71465802192688],\n  [0.1338230073452, 0.682700991630554],\n  [0.336768001317978, 0.644733011722565],\n  [0.429883986711502, 0.466521978378296],\n  [0.455527991056442, 0.548622965812683],\n  [0.437114000320435, 0.558896005153656],\n  [0.467287987470627, 0.529924988746643],\n  [0.414712011814117, 0.335219979286194],\n  [0.37704598903656, 0.322777986526489],\n  [0.344107985496521, 0.320150971412659],\n  [0.312875986099243, 0.32233202457428],\n  [0.283526003360748, 0.333190023899078],\n  [0.241245999932289, 0.382785975933075],\n  [0.102986000478268, 0.468762993812561],\n  [0.267612010240555, 0.424560010433197],\n  [0.297879010438919, 0.433175981044769],\n  [0.333433985710144, 0.433878004550934],\n  [0.366427004337311, 0.426115989685059],\n  [0.396012008190155, 0.416696012020111],\n  [0.420121014118195, 0.41022801399231],\n  [0.007561000064015, 0.480777025222778],\n  [0.432949006557465, 0.569517970085144],\n  [0.458638995885849, 0.479089021682739],\n  [0.473466008901596, 0.545744001865387],\n  [0.476087987422943, 0.563830018043518],\n  [0.468472003936768, 0.555056989192963],\n  [0.433990985155106, 0.582361996173859],\n  [0.483518004417419, 0.562983989715576],\n  [0.482482999563217, 0.57784903049469],\n  [0.42645001411438, 0.389798998832703],\n  [0.438998997211456, 0.39649498462677],\n  [0.450067013502121, 0.400434017181396],\n  [0.289712011814117, 0.368252992630005],\n  [0.276670008897781, 0.363372981548309],\n  [0.517862021923065, 0.471948027610779],\n  [0.710287988185883, 0.380764007568359],\n  [0.526226997375488, 0.573909997940063],\n  [0.895093023777008, 0.254140973091125],\n  [0.634069979190826, 0.409575998783112],\n  [0.661242008209229, 0.41302502155304],\n  [0.688880026340485, 0.409460008144379],\n  [0.725341975688934, 0.389131009578705],\n  [0.606630027294159, 0.40370500087738],\n  [0.654766023159027, 0.344011008739471],\n  [0.629905998706818, 0.346076011657715],\n  [0.680678009986877, 0.347265005111694],\n  [0.702096998691559, 0.353591024875641],\n  [0.75221198797226, 0.410804986953735],\n  [0.602918028831482, 0.842862963676453],\n  [0.719901978969574, 0.375599980354309],\n  [0.893692970275879, 0.399959981441498],\n  [0.790081977844238, 0.391354024410248],\n  [0.643998026847839, 0.534487962722778],\n  [0.528249025344849, 0.65040397644043],\n  [0.525849997997284, 0.680191040039062],\n  [0.560214996337891, 0.657229006290436],\n  [0.585384011268616, 0.66654098033905],\n  [0.549625992774963, 0.680860996246338],\n  [0.57122802734375, 0.682691991329193],\n  [0.624852001667023, 0.72809898853302],\n  [0.513050019741058, 0.547281980514526],\n  [0.51509702205658, 0.527251958847046],\n  [0.742246985435486, 0.314507007598877],\n  [0.598631024360657, 0.454979002475739],\n  [0.570338010787964, 0.548575043678284],\n  [0.578631997108459, 0.533622980117798],\n  [0.723087012767792, 0.532054007053375],\n  [0.516445994377136, 0.499638974666595],\n  [0.662801027297974, 0.282917976379395],\n  [0.70362401008606, 0.293271005153656],\n  [0.830704987049103, 0.193813979625702],\n  [0.552385985851288, 0.302568018436432],\n  [0.607609987258911, 0.353887975215912],\n  [0.645429015159607, 0.696707010269165],\n  [0.932694971561432, 0.730105042457581],\n  [0.557260990142822, 0.572826027870178],\n  [0.542901992797852, 0.584792017936707],\n  [0.6180260181427, 0.694710969924927],\n  [0.607590973377228, 0.694203019142151],\n  [0.722943007946014, 0.271963000297546],\n  [0.577413976192474, 0.563166975975037],\n  [0.614082992076874, 0.281386971473694],\n  [0.616907000541687, 0.255886018276215],\n  [0.668509006500244, 0.119913995265961],\n  [0.770092010498047, 0.232020974159241],\n  [0.635536015033722, 0.189248979091644],\n  [0.77039098739624, 0.299556016921997],\n  [0.826722025871277, 0.278755009174347],\n  [0.527121007442474, 0.666198015213013],\n  [0.553171992301941, 0.668527007102966],\n  [0.577238023281097, 0.673889994621277],\n  [0.554691970348358, 0.580065965652466],\n  [0.611896991729736, 0.693961024284363],\n  [0.59696102142334, 0.706539988517761],\n  [0.596370995044708, 0.693953037261963],\n  [0.539958000183105, 0.557139039039612],\n  [0.568841993808746, 0.692366003990173],\n  [0.547818005084991, 0.692366003990173],\n  [0.52461302280426, 0.692366003990173],\n  [0.534089982509613, 0.779141008853912],\n  [0.527670979499817, 0.736225962638855],\n  [0.526912987232208, 0.717857003211975],\n  [0.526877999305725, 0.704625964164734],\n  [0.526966989040375, 0.695277988910675],\n  [0.572058022022247, 0.695277988910675],\n  [0.573521018028259, 0.703539967536926],\n  [0.57683801651001, 0.711845993995667],\n  [0.581691026687622, 0.720062971115112],\n  [0.609944999217987, 0.639909982681274],\n  [0.986046016216278, 0.560034036636353],\n  [0.5867999792099, 0.69539999961853],\n  [0.590372025966644, 0.701822996139526],\n  [0.531915009021759, 0.601536989212036],\n  [0.577268004417419, 0.585934996604919],\n  [0.536915004253387, 0.593786001205444],\n  [0.627542972564697, 0.473352015018463],\n  [0.665585994720459, 0.495950996875763],\n  [0.588353991508484, 0.546862006187439],\n  [0.757824003696442, 0.14767599105835],\n  [0.709249973297119, 0.201507985591888],\n  [0.672684013843536, 0.256581008434296],\n  [0.600408971309662, 0.74900496006012],\n  [0.55826598405838, 0.261672019958496],\n  [0.570303976535797, 0.187870979309082],\n  [0.588165998458862, 0.109044015407562],\n  [0.711045026779175, 0.398952007293701],\n  [0.781069993972778, 0.435405015945435],\n  [0.587247014045715, 0.398931980133057],\n  [0.742869973182678, 0.355445981025696],\n  [0.572156012058258, 0.437651991844177],\n  [0.55186802148819, 0.536570012569427],\n  [0.821442008018494, 0.457556009292603],\n  [0.752701997756958, 0.457181990146637],\n  [0.71375697851181, 0.467626988887787],\n  [0.66711300611496, 0.460672974586487],\n  [0.631101012229919, 0.447153985500336],\n  [0.6008620262146, 0.432473003864288],\n  [0.523481011390686, 0.405627012252808],\n  [0.810747981071472, 0.523926019668579],\n  [0.771045982837677, 0.348959028720856],\n  [0.509127020835876, 0.562718033790588],\n  [0.595292985439301, 0.485023975372314],\n  [0.980530977249146, 0.401564002037048],\n  [0.573499977588654, 0.420000016689301],\n  [0.602994978427887, 0.548687994480133],\n  [0.733529984951019, 0.376977026462555],\n  [0.560611009597778, 0.519016981124878],\n  [0.967685997486115, 0.644356966018677],\n  [0.580985009670258, 0.387160003185272],\n  [0.537728011608124, 0.505385041236877],\n  [0.760966002941132, 0.779752969741821],\n  [0.801778972148895, 0.831938028335571],\n  [0.892440974712372, 0.54076099395752],\n  [0.816350996494293, 0.740260004997253],\n  [0.865594983100891, 0.333687007427216],\n  [0.614073991775513, 0.883246004581451],\n  [0.508952975273132, 0.579437971115112],\n  [0.617941975593567, 0.508316040039062],\n  [0.825608015060425, 0.397674977779388],\n  [0.681214988231659, 0.39623498916626],\n  [0.656635999679565, 0.400596976280212],\n  [0.603900015354156, 0.710216999053955],\n  [0.81208598613739, 0.588539004325867],\n  [0.56801301240921, 0.944564998149872],\n  [0.681007981300354, 0.898285031318665],\n  [0.733752012252808, 0.869701027870178],\n  [0.633830010890961, 0.398822009563446],\n  [0.606792986392975, 0.39553701877594],\n  [0.589659988880157, 0.391062021255493],\n  [0.805015981197357, 0.342108011245728],\n  [0.611334979534149, 0.362284004688263],\n  [0.634037971496582, 0.355970978736877],\n  [0.656635999679565, 0.355356991291046],\n  [0.681214988231659, 0.35834002494812],\n  [0.698584973812103, 0.363156020641327],\n  [0.941866993904114, 0.319076001644135],\n  [0.698584973812103, 0.387449026107788],\n  [0.584177017211914, 0.624107003211975],\n  [0.554318010807037, 0.566076993942261],\n  [0.534153997898102, 0.62064003944397],\n  [0.711217999458313, 0.819975018501282],\n  [0.664629995822906, 0.852871000766754],\n  [0.559099972248077, 0.902631998062134],\n  [0.871706008911133, 0.791940987110138],\n  [0.591234028339386, 0.373893976211548],\n  [0.544341027736664, 0.451583981513977],\n  [0.624562978744507, 0.924192011356354],\n  [0.88577002286911, 0.615028977394104],\n  [0.551338016986847, 0.695277988910675],\n  [0.551980018615723, 0.704632043838501],\n  [0.552887976169586, 0.715808033943176],\n  [0.555167973041534, 0.730794012546539],\n  [0.569944024085999, 0.767035007476807],\n  [0.593203008174896, 0.685675978660583],\n  [0.599261999130249, 0.681069016456604],\n  [0.607599973678589, 0.677703022956848],\n  [0.631937980651855, 0.663500010967255],\n  [0.752032995223999, 0.601315021514893],\n  [0.547226011753082, 0.420395016670227],\n  [0.563543975353241, 0.359827995300293],\n  [0.583841025829315, 0.368713974952698],\n  [0.586614012718201, 0.692366003990173],\n  [0.771915018558502, 0.683578014373779],\n  [0.531597018241882, 0.352482974529266],\n  [0.588370978832245, 0.804440975189209],\n  [0.52079701423645, 0.442565023899078],\n  [0.567984998226166, 0.493479013442993],\n  [0.543282985687256, 0.819254994392395],\n  [0.655317008495331, 0.745514988899231],\n  [0.621008992195129, 0.574018001556396],\n  [0.625559985637665, 0.78031200170517],\n  [0.680198013782501, 0.570719003677368],\n  [0.64276397228241, 0.604337990283966],\n  [0.704662978649139, 0.621529996395111],\n  [0.552012026309967, 0.862591981887817],\n  [0.589071989059448, 0.508637011051178],\n  [0.685944974422455, 0.775357007980347],\n  [0.645735025405884, 0.812640011310577],\n  [0.675342977046967, 0.703978002071381],\n  [0.810858011245728, 0.646304965019226],\n  [0.72012197971344, 0.714666962623596],\n  [0.866151988506317, 0.682704985141754],\n  [0.663187026977539, 0.644596993923187],\n  [0.570082008838654, 0.466325998306274],\n  [0.544561982154846, 0.548375964164734],\n  [0.562758982181549, 0.558784961700439],\n  [0.531987011432648, 0.530140042304993],\n  [0.585271000862122, 0.335177004337311],\n  [0.622952997684479, 0.32277899980545],\n  [0.655896008014679, 0.320163011550903],\n  [0.687132000923157, 0.322345972061157],\n  [0.716481983661652, 0.333200991153717],\n  [0.758756995201111, 0.382786989212036],\n  [0.897013008594513, 0.468769013881683],\n  [0.732392013072968, 0.424547016620636],\n  [0.70211398601532, 0.433162987232208],\n  [0.66652500629425, 0.433866024017334],\n  [0.633504986763, 0.426087975502014],\n  [0.603875994682312, 0.416586995124817],\n  [0.579657971858978, 0.409945011138916],\n  [0.992439985275269, 0.480777025222778],\n  [0.567192018032074, 0.569419980049133],\n  [0.54136598110199, 0.478899002075195],\n  [0.526564002037048, 0.546118021011353],\n  [0.523913025856018, 0.563830018043518],\n  [0.531529009342194, 0.555056989192963],\n  [0.566035985946655, 0.582329034805298],\n  [0.51631098985672, 0.563053965568542],\n  [0.5174720287323, 0.577877044677734],\n  [0.573594987392426, 0.389806985855103],\n  [0.560697972774506, 0.395331978797913],\n  [0.549755990505219, 0.399751007556915],\n  [0.710287988185883, 0.368252992630005],\n  [0.723330020904541, 0.363372981548309],\n];\n","export default __webpack_public_path__ + \"static/media/mask.107b2347.mp4\";","import React, { createContext } from \"react\";\nimport { Predictions } from \"../../../hooks/usePredictions\";\n\nexport const SceneContext = createContext<{\n  facemesh: React.MutableRefObject<Predictions[]>;\n}>({\n  facemesh: { current: [] },\n});\n","import { useFrame } from \"@react-three/fiber\";\nimport React, { useContext, useEffect, useMemo, useRef } from \"react\";\nimport {\n  BufferGeometry,\n  IUniform,\n  Mesh,\n  ShaderMaterial,\n  sRGBEncoding,\n  Texture,\n  TextureLoader,\n  Vector2,\n  VideoTexture,\n} from \"three\";\nimport { V3 } from \"../../../libs/v3\";\nimport alphaSrc from \"./alpha.mp4\";\nimport brettMaskAlpha from \"./brett-mask-alpha.png\";\nimport brettMaskMap from \"./brett-mask-map.png\";\nimport { maskMesh, TRIANGULATION, UV_COORDS } from \"./mask\";\nimport maskSrc from \"./mask.mp4\";\nimport { SceneContext } from \"./SceneContext\";\n\ninterface MaskMaterial extends ShaderMaterial {\n  uniforms: {\n    map: IUniform<VideoTexture | Texture | undefined>;\n    alphaMap: IUniform<VideoTexture | Texture | undefined>;\n  };\n}\n\nexport const Mask = ({\n  track,\n  maskType,\n  webcam,\n}: {\n  webcam: HTMLVideoElement;\n  track: \"center\" | \"webcam\";\n  maskType: \"brett\" | \"own\" | \"video\";\n}) => {\n  const textures = useMemo(() => {\n    const mapVideo = document.createElement(\"video\");\n    mapVideo.src = maskSrc;\n    mapVideo.muted = true;\n\n    const alphaMapVideo = document.createElement(\"video\");\n    alphaMapVideo.src = alphaSrc;\n    alphaMapVideo.muted = true;\n\n    const videoMaskMap = new VideoTexture(mapVideo);\n    const videoMaskAlpha = new VideoTexture(alphaMapVideo);\n\n    videoMaskMap.encoding = sRGBEncoding;\n    videoMaskAlpha.encoding = sRGBEncoding;\n\n    mapVideo.play();\n    alphaMapVideo.play();\n\n    const webcamTexture = new VideoTexture(webcam);\n\n    const brettsFaceAlbedo = new TextureLoader().load(brettMaskMap);\n    const brettsFaceAlpha = new TextureLoader().load(brettMaskAlpha);\n\n    return {\n      video: { alpha: videoMaskAlpha, albedo: videoMaskMap },\n      own: { albedo: webcamTexture, alpha: brettsFaceAlpha },\n      brett: { albedo: brettsFaceAlbedo, alpha: brettsFaceAlpha },\n    };\n  }, [webcam]);\n\n  const mask = useRef<Mesh<BufferGeometry, MaskMaterial>>();\n  const predictions = useContext(SceneContext).facemesh;\n  const maskTexture = textures[maskType];\n\n  useEffect(() => {\n    const maskMesh = mask.current;\n    if (!maskMesh) return;\n\n    const geometry = maskMesh.geometry;\n\n    if (geometry === undefined) return;\n\n    const uvs = geometry.getAttribute(\"uv\");\n    TRIANGULATION.forEach((vertexIndex, index) => {\n      const uv = UV_COORDS[vertexIndex];\n      if (!uv) return;\n      const [u, v] = uv;\n      uvs.setXY(index, u, v);\n    });\n    uvs.needsUpdate = true;\n  }, []);\n\n  useFrame(() => {\n    const geometry = mask.current?.geometry;\n\n    const prediction = predictions.current[0];\n    if (geometry === undefined) return;\n    if (!prediction) return;\n\n    let mesh: V3[];\n\n    if (track === \"center\") {\n      mesh = prediction.mesh as V3[];\n    } else {\n      mesh = prediction.scaledMesh as V3[];\n    }\n\n    if (maskType === \"own\") {\n      maskTexture.albedo.center = new Vector2(mesh[4]![0], mesh[4]![1]);\n    }\n\n    const { topLeft, bottomRight } = prediction.boundingBox;\n\n    const positions = geometry.getAttribute(\"position\");\n    const uvs = geometry.getAttribute(\"uv\");\n    TRIANGULATION.forEach((vertexIndex, index) => {\n      const vertex = mesh[vertexIndex];\n      const uv = UV_COORDS[vertexIndex];\n      if (!vertex) return;\n      if (!uv) return;\n      const [u, v] = uv;\n      const [x, y, z] = vertex;\n      positions.setXYZ(index, x, y, z);\n\n      if (maskType === \"own\") {\n        // Correct for head rotation and center position\n        const nextU =\n          (u + mesh[4]![0] - 0.5) * (bottomRight[0] - topLeft[0]) + topLeft[0];\n        const nextV = v * (topLeft[1] - bottomRight[1]) - topLeft[1];\n        uvs.setXY(index, nextU, nextV);\n      } else {\n        uvs.setXY(index, u, v);\n      }\n    });\n    uvs.needsUpdate = true;\n    positions.needsUpdate = true;\n  });\n\n  return (\n    <mesh ref={mask} geometry={maskMesh.geometry}>\n      <primitive\n        object={maskMaterial}\n        attach=\"material\"\n        uniforms-map-value={maskTexture.albedo}\n        uniforms-alphaMap-value={maskTexture.alpha}\n      />\n    </mesh>\n  );\n};\n\nconst vert = /* glsl */ `\nvarying vec2 vUv;\nuniform mat3 uvTransform;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec3 transformed = vec3( position );\n  vUv = uv.xy;\n  vec4 mvPosition = vec4( transformed, 1.0 );\n  mvPosition = modelViewMatrix * mvPosition;\n  gl_Position = projectionMatrix * mvPosition;\n\n}\n`;\n\nconst frag = /* glsl */ `\nvarying vec2 vUv;\nuniform sampler2D map;\nuniform sampler2D alphaMap;\n\nvoid main() {\n  vec2 invertedUv = vec2(vUv.x, 1.0 - vUv.y);\n\tvec4 texelColor = texture2D( map, invertedUv );\n  vec4 alphaColor = texture2D( alphaMap, invertedUv);\n  gl_FragColor = vec4(texelColor.rgb, alphaColor.r);\n}\n`;\n\nconst maskMaterial = new ShaderMaterial({\n  fragmentShader: frag,\n  vertexShader: vert,\n  transparent: true,\n  uniforms: {\n    map: { value: undefined },\n    alphaMap: { value: undefined },\n  },\n});\n","import { clamp, lerp, lerpTheta } from \"./math\";\nimport { V2 } from \"./v2\";\n\nexport type V3 = [x: number, y: number, z: number];\n\nexport class V3O {\n  static VECTOR_LENGTH = 3;\n\n  static add = (a: V3, b: V3): V3 => [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\n  static sum = (vectors: V3[]): V3 => {\n    const result = [0, 0, 0];\n\n    for (let vectorIndex = 0; vectorIndex < vectors.length; vectorIndex++) {\n      const vector = vectors[vectorIndex]!;\n      result[0] += vector[0];\n      result[1] += vector[1];\n      result[2] += vector[2];\n    }\n\n    return V3O.fromArray(result);\n  };\n\n  /**\n   * @returns a - b\n   */\n  static subtract = (base: V3, subtraction: V3): V3 => [\n    base[0] - subtraction[0],\n    base[1] - subtraction[1],\n    base[2] - subtraction[2],\n  ];\n\n  /**\n   * @returns element-wise multiplication of base and multiplier\n   */\n  static multiply = (base: V3, multiplier: V3): V3 => [\n    base[0] * multiplier[0],\n    base[1] * multiplier[1],\n    base[2] * multiplier[2],\n  ];\n\n  /**\n   * @returns a / b\n   */\n  static divide = (base: V3, divisor: V3): V3 => [\n    base[0] / divisor[0],\n    base[1] / divisor[1],\n    base[2] / divisor[2],\n  ];\n\n  static scale = (base: V3, factor: number): V3 => [\n    base[0] * factor,\n    base[1] * factor,\n    base[2] * factor,\n  ];\n\n  static sign = (vector: V3): V3 => [\n    Math.sign(vector[0]),\n    Math.sign(vector[1]),\n    Math.sign(vector[2]),\n  ];\n\n  static normalise = (vector: V3): V3 => {\n    const length = V3O.euclideanLength(vector);\n    if (length === 0) {\n      return V3O.zero();\n    }\n    return V3O.scale(vector, 1 / length);\n  };\n\n  static rotateAroundAxis = (vector: V3, axis: V3, angle: number): V3 => {\n    const quaternion = [0, ...vector] as Q;\n    const rotationMatrix = QO.fromAxisRotation(axis, angle);\n    const intermediateRotation = QO.multiply(rotationMatrix, quaternion);\n    const rotated = QO.multiply(\n      intermediateRotation,\n      QO.conjugate(rotationMatrix)\n    );\n    const rotatedVector = QO.extractYZW(rotated);\n    return rotatedVector;\n  };\n\n  static extractXY = (vector: V3): V2 => [vector[0], vector[1]];\n  static extractXZ = (vector: V3): V2 => [vector[0], vector[2]];\n  static extractYZ = (vector: V3): V2 => [vector[1], vector[2]];\n\n  static sqrEuclideanLength = (vector: V3): number =>\n    V3O.manhattanLength(V3O.multiply(vector, vector));\n\n  static manhattanLength = (vector: V3): number =>\n    vector[0] + vector[1] + vector[2];\n\n  static dotProduct(a: V3, b: V3): number {\n    const product = V3O.multiply(a, b);\n    return V3O.manhattanLength(product);\n  }\n\n  static crossProduct = (a: V3, b: V3): V3 => {\n    const [ax, ay, az] = a;\n    const [bx, by, bz] = b;\n\n    const x = ay * bz - az * by;\n    const y = az * bx - ax * bz;\n    const z = ax * by - ay * bx;\n\n    return [x, y, z];\n  };\n\n  static euclideanLength = (vector: V3): number =>\n    V3O.sqrEuclideanLength(vector) ** 0.5;\n\n  static sqrEuclideanDistance = (a: V3, b: V3): number => {\n    const distance = V3O.subtract(a, b);\n    return V3O.sqrEuclideanLength(distance);\n  };\n\n  static euclideanDistance = (a: V3, b: V3): number => {\n    const distance = V3O.subtract(a, b);\n    return V3O.euclideanLength(distance);\n  };\n\n  static lerp = (from: V3, to: V3, amount: number): V3 => [\n    lerp(from[0], to[0], amount),\n    lerp(from[1], to[1], amount),\n    lerp(from[2], to[2], amount),\n  ];\n\n  static lerpTheta = (from: V3, to: V3, amount: number): V3 => [\n    lerpTheta(from[0], to[0], amount, Math.PI * 2),\n    lerpTheta(from[1], to[1], amount, Math.PI * 2),\n    lerpTheta(from[2], to[2], amount, Math.PI * 2),\n  ];\n\n  static up = (): V3 => [0, 1, 0];\n  static down = (): V3 => [0, -1, 0];\n  static right = (): V3 => [1, 0, 0];\n  static left = (): V3 => [-1, 0, 0];\n  static forwards = (): V3 => [0, 0, 1];\n  static back = (): V3 => [0, 0, -1];\n  static zero = (): V3 => [0, 0, 0];\n  static copy = (vector: V3): V3 => [vector[0], vector[1], vector[2]];\n  static flipX = (vector: V3): V3 => [-vector[0], vector[1], vector[2]];\n  static flipY = (vector: V3): V3 => [vector[0], -vector[1], vector[2]];\n  static flipZ = (vector: V3): V3 => [vector[0], vector[1], -vector[2]];\n  static clamp = (vector: V3, min: V3, max: V3): V3 => [\n    clamp(vector[0], min[0], max[0]),\n    clamp(vector[1], min[1], max[1]),\n    clamp(vector[2], min[2], max[2]),\n  ];\n\n  static random = (): V3 => [Math.random(), Math.random(), Math.random()];\n  static randomRange = (min: number, max: number): V3 =>\n    V3O.add(V3O.scale(V3O.random(), max - min), [min, min, min]);\n  static fromArray = (array: number[]): V3 => {\n    if (array.length !== V3O.VECTOR_LENGTH)\n      throw new Error(\n        `Cannot create V3 from ${array}, length is ${array.length}. Length should be ${V3O.VECTOR_LENGTH}`\n      );\n    return (array as unknown) as V3;\n  };\n\n  static fromVector3 = (vector: { x: number; y: number; z: number }): V3 => [\n    vector.x,\n    vector.y,\n    vector.z,\n  ];\n}\ntype Q = [x: number, y: number, z: number, w: number];\n\nclass QO {\n  static multiply = (a: Q, b: Q): Q => {\n    const x = a[0] * b[0] - a[1] * b[1] - a[2] * b[2] - a[3] * b[3];\n    const y = a[0] * b[1] + a[1] * b[0] - a[2] * b[3] + a[3] * b[2];\n    const z = a[0] * b[2] + a[1] * b[3] + a[2] * b[0] - a[3] * b[1];\n    const w = a[0] * b[3] - a[1] * b[2] + a[2] * b[1] + a[3] * b[0];\n\n    return [x, y, z, w];\n  };\n\n  static conjugate = (quaternion: Q): Q => {\n    return [quaternion[0], -quaternion[1], -quaternion[2], -quaternion[3]];\n  };\n\n  static fromAxisRotation = (vector: V3, rotation: number): Q => {\n    const sin = Math.sin(rotation / 2);\n    const cos = Math.cos(rotation / 2);\n    const sinAxis = V3O.scale(vector, sin);\n    return [cos, ...sinAxis];\n  };\n\n  static extractYZW = (quaternion: Q): V3 => {\n    const [, ...result] = quaternion;\n    return result;\n  };\n}\n","import { Mesh } from \"three\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n\nexport const chunkMesh = new OBJLoader().parse(`v 0.037207 1.017618 -0.206549\nv 0.034367 0.989806 -0.385212\nv 0.064035 0.772665 -1.070172\nv 0.064543 0.232427 -1.376838\nv 0.041779 -0.327697 -1.228603\nv -0.015373 -0.908055 -0.428701\nv 0.195872 0.935318 -0.351306\nv 0.444450 0.654262 -0.869922\nv 0.506102 0.183450 -1.100792\nv 0.433754 -0.276130 -1.015475\nv 0.351300 -0.692432 -0.817173\nv 0.207789 -0.898612 -0.406336\nv 0.135129 -0.879335 -0.203041\nv 0.467456 0.737732 -0.566755\nv 0.593321 -0.053363 -0.896019\nv 0.660534 0.508702 -0.539004\nv 0.711112 0.157872 -0.672653\nv 0.680009 -0.230287 -0.645747\nv 0.568566 -0.684253 -0.533038\nv 0.417386 -0.828667 -0.293113\nv 0.558900 -0.757300 -0.253993\nv 0.476873 -0.795017 -0.229156\nv 0.797387 0.130791 -0.363801\nv 0.784787 -0.216531 -0.310828\nv 0.674098 -0.643398 -0.179060\nv 0.798285 -0.221128 -0.077996\nv 0.703574 -0.599529 0.022167\nv 0.491096 -0.704973 0.039768\nv 0.652423 0.504812 0.142941\nv 0.690758 0.454355 0.147314\nv 0.539497 -0.675671 0.109755\nv 0.414600 0.765964 0.148772\nv 0.719809 0.388903 0.274180\nv 0.633802 -0.633270 0.200011\nv 0.772723 0.051706 0.400328\nv 0.715578 -0.490527 0.366362\nv 0.709678 0.403048 0.577758\nv 0.725541 0.028840 0.649517\nv 0.715203 -0.250026 0.651174\nv 0.571753 -0.646138 0.461282\nv 0.215828 0.939311 0.165976\nv 0.566076 0.627175 0.630970\nv 0.648492 0.264224 0.841432\nv 0.606015 -0.278790 0.867452\nv 0.542471 -0.527538 0.773024\nv 0.442455 -0.676176 0.614580\nv 0.051761 -0.786185 0.137831\nv -0.017456 -0.793662 0.061282\nv 0.374781 -0.535759 0.915320\nv 0.104133 0.961366 0.673152\nv 0.230071 0.787713 1.032224\nv 0.272857 0.261095 1.313463\nv 0.224582 -0.321535 1.162122\nv 0.110101 -0.673477 0.763740\nv -0.004890 1.028151 0.403650\nv -0.053455 1.051836 0.278773\nv -0.143283 1.021302 0.609630\nv -0.284263 0.814083 1.084004\nv -0.349969 0.233497 1.308872\nv -0.288352 -0.311811 1.119832\nv -0.200652 -0.597227 0.734394\nv -0.165388 1.053862 0.384924\nv -0.101069 1.057437 0.175849\nv -0.396012 0.970229 0.507024\nv -0.600371 0.611408 0.755248\nv -0.673993 0.180572 0.798688\nv -0.590159 -0.219601 0.755368\nv -0.324699 1.020313 0.289272\nv -0.691426 -0.017757 0.610309\nv -0.216912 1.054601 0.146186\nv -0.574262 0.807882 0.270068\nv -0.691392 0.499779 0.422528\nv -0.676285 -0.163646 0.447706\nv -0.558274 -0.408652 0.419510\nv -0.458981 -0.538653 0.353592\nv -0.181690 1.070361 0.087216\nv -0.728592 0.466087 0.186455\nv -0.752608 0.056467 0.305256\nv -0.523422 -0.558301 0.200996\nv -0.455125 -0.627368 0.127602\nv -0.794281 0.209669 0.117915\nv -0.803502 0.075538 0.177685\nv -0.745218 0.547341 -0.008325\nv -0.870293 -0.066587 0.068523\nv -0.180343 1.059916 -0.048467\nv -0.506391 0.880959 -0.090199\nv -0.651975 0.739488 -0.125260\nv -0.754223 0.609903 -0.157278\nv -0.800291 0.552895 -0.219448\nv -0.902992 0.097453 -0.095615\nv -0.764991 -0.445306 -0.049577\nv -0.463495 0.903441 -0.160932\nv -0.817836 0.545174 -0.301421\nv -0.940801 -0.183540 -0.296140\nv -0.661752 -0.656346 -0.202911\nv -0.197199 1.037519 -0.124929\nv -0.313396 0.984045 -0.189087\nv -0.591002 0.810162 -0.327802\nv -0.703031 0.726716 -0.393749\nv -0.958533 0.038277 -0.562259\nv -0.520446 -0.756141 -0.247448\nv -0.411903 -0.788767 -0.214970\nv -0.284169 0.985825 -0.272131\nv -0.606953 0.813729 -0.538159\nv -0.747039 0.685625 -0.688524\nv -0.890112 0.222045 -0.856121\nv -0.840237 -0.279583 -0.770295\nv -0.598234 -0.708026 -0.526117\nv -0.107434 1.033806 -0.213581\nv -0.335728 0.946807 -0.488034\nv -0.468120 0.887730 -0.676121\nv -0.401759 0.800105 -1.036093\nv -0.523393 0.208113 -1.299068\nv -0.495721 -0.342470 -1.154433\nv -0.346774 -0.735558 -0.783465\nv -0.244731 -0.868963 -0.391618\nv -0.125207 0.914219 -0.809623\nv 0.029131 -0.720567 -0.886025\nvt 0.625000 0.312500\nvt 0.562500 0.312500\nvt 0.593750 0.250000\nvt 0.750000 0.562500\nvt 0.750000 0.687500\nvt 0.687500 0.687500\nvt 0.687500 0.562500\nvt 0.625000 0.187500\nvt 0.687500 0.187500\nvt 0.687500 0.312500\nvt 0.687500 0.437500\nvt 0.750000 0.437500\nvt 0.687500 0.875000\nvt 0.750000 0.875000\nvt 0.750000 0.937500\nvt 0.968750 0.500000\nvt 0.937500 0.687500\nvt 0.906250 0.500000\nvt 0.937500 0.437500\nvt 0.687500 0.125000\nvt 0.093750 0.312500\nvt 0.093750 0.375000\nvt 0.062500 0.312500\nvt 0.531250 0.437500\nvt 0.406250 0.500000\nvt 0.375000 0.437500\nvt 0.406250 0.375000\nvt 0.656250 0.750000\nvt 0.625000 0.687500\nvt 0.234375 0.000000\nvt 0.218750 0.312500\nvt 0.250000 0.875000\nvt 0.281250 0.812500\nvt 0.343750 0.937500\nvt 0.875000 0.875000\nvt 0.843750 0.937500\nvt 0.843750 0.812500\nvt 0.625000 0.437500\nvt 0.562500 0.437500\nvt 0.625000 0.562500\nvt 0.562500 0.562500\nvt 0.375000 0.500000\nvt 0.343750 0.437500\nvt 0.375000 0.625000\nvt 0.343750 0.687500\nvt 0.343750 0.562500\nvt 0.593750 0.187500\nvt 0.906250 0.812500\nvt 0.906250 0.750000\nvt 0.968750 0.750000\nvt 0.968750 0.812500\nvt 0.343750 0.375000\nvt 0.375000 0.312500\nvt 0.656250 0.500000\nvt 0.218750 0.437500\nvt 0.156250 0.437500\nvt 0.468750 0.687500\nvt 0.437500 0.875000\nvt 0.437500 0.625000\nvt 0.468750 0.750000\nvt 0.500000 0.312500\nvt 0.468750 0.250000\nvt 0.500000 0.250000\nvt 0.875000 0.750000\nvt 0.875000 0.687500\nvt 0.750000 0.187500\nvt 0.796875 0.000000\nvt 0.812500 0.187500\nvt 0.312500 0.375000\nvt 0.281250 0.437500\nvt 0.750000 0.312500\nvt 0.515625 0.000000\nvt 0.343750 0.062500\nvt 0.218750 0.687500\nvt 0.281250 0.687500\nvt 0.218750 0.812500\nvt 0.734375 0.000000\nvt 0.281250 0.312500\nvt 0.281250 0.562500\nvt 0.031250 0.500000\nvt 0.062500 0.500000\nvt 0.031250 0.562500\nvt 0.093750 0.437500\nvt 1.000000 0.437500\nvt 0.968750 0.375000\nvt 0.437500 0.312500\nvt 0.125000 0.500000\nvt 0.343750 0.312500\nvt 0.968750 0.875000\nvt 0.937500 0.875000\nvt 0.093750 0.812500\nvt 0.125000 0.875000\nvt 0.218750 0.562500\nvt 0.156250 0.562500\nvt 0.156250 0.687500\nvt 0.218750 0.937500\nvt 0.187500 0.875000\nvt 0.093750 0.687500\nvt 0.812500 0.312500\nvt 0.812500 0.437500\nvt 0.156250 0.937500\nvt 0.296875 0.000000\nvt 0.812500 0.562500\nvt 0.875000 0.562500\nvt 0.812500 0.687500\nvt 0.062500 0.750000\nvt 0.156250 0.812500\nvt 0.875000 0.437500\nvt 0.875000 0.312500\nvt 0.906250 0.187500\nvt 0.906250 0.250000\nvt 0.937500 0.312500\nvt 0.093750 0.937500\nvt 0.062500 0.250000\nvt 0.000000 0.750000\nvt 1.000000 0.750000\nvt 0.843750 0.750000\nvt 0.968750 0.687500\nvt 0.000000 0.437500\nvt 0.906250 0.937500\nvt 0.781250 0.750000\nvt 0.906250 0.875000\nvt 0.062500 0.937500\nvt 0.968750 0.937500\nvt 0.046875 0.000000\nvt 0.453125 0.000000\nvn 0.7223 -0.6042 -0.3365\nvn 0.8199 -0.5724 -0.0100\nvn 0.5598 -0.8285 0.0063\nvn 0.2113 0.1172 -0.9703\nvn 0.2494 0.7104 -0.6581\nvn 0.6457 0.6054 -0.4652\nvn 0.7150 0.0898 -0.6933\nvn 0.3670 -0.9300 0.0213\nvn 0.2131 -0.9685 -0.1287\nvn 0.4733 -0.6847 -0.5542\nvn 0.6141 -0.3676 -0.6984\nvn 0.1561 -0.4456 -0.8815\nvn 0.4518 0.8824 -0.1310\nvn 0.1671 0.9665 -0.1946\nvn 0.2620 0.9621 -0.0749\nvn -0.9646 0.1588 0.2104\nvn -0.9152 0.3916 0.0952\nvn -0.9948 0.0235 -0.0988\nvn -0.9699 -0.2351 0.0631\nvn 0.0728 -0.9659 0.2485\nvn -0.5305 -0.7897 0.3080\nvn -0.7471 -0.5798 0.3250\nvn -0.5267 -0.7676 0.3652\nvn 0.9926 -0.1210 0.0093\nvn 0.9941 0.0413 0.1000\nvn 0.9334 -0.1946 0.3014\nvn 0.9099 -0.3791 0.1681\nvn 0.6274 0.7636 -0.1526\nvn 0.8709 0.4613 -0.1694\nvn -0.0940 -0.9638 0.2493\nvn -0.3930 -0.8351 0.3849\nvn 0.2861 0.9554 0.0727\nvn 0.3504 0.9073 0.2324\nvn 0.5328 0.8457 0.0294\nvn -0.3411 0.9344 -0.1028\nvn 0.0059 0.9892 -0.1463\nvn -0.2966 0.9497 -0.1005\nvn 0.8956 -0.2256 -0.3833\nvn 0.9756 -0.1589 -0.1517\nvn 0.9405 0.1145 -0.3197\nvn 0.9863 0.1204 -0.1127\nvn 0.9555 0.0027 0.2950\nvn 0.7798 -0.2420 0.5773\nvn 0.9185 0.3572 0.1698\nvn 0.7578 0.6140 0.2205\nvn 0.8466 0.1551 0.5091\nvn 0.4046 -0.8977 0.1741\nvn -0.5990 0.7996 0.0416\nvn -0.7426 0.6666 0.0642\nvn -0.8389 0.5034 0.2068\nvn -0.7465 0.6585 0.0953\nvn 0.6658 -0.5730 0.4778\nvn 0.5807 -0.7920 0.1885\nvn 0.8479 -0.1874 -0.4958\nvn -0.4311 -0.5357 0.7260\nvn -0.8117 -0.4461 0.3770\nvn 0.8763 0.4762 0.0728\nvn 0.7073 0.7067 0.0150\nvn 0.9242 0.3809 0.0255\nvn 0.7054 0.5939 0.3868\nvn 0.8103 -0.5817 0.0703\nvn 0.3420 -0.9385 0.0464\nvn 0.3279 -0.9273 0.1805\nvn -0.5684 0.8222 -0.0296\nvn -0.7882 0.5632 -0.2481\nvn -0.0423 -0.9926 -0.1134\nvn -0.2191 -0.9751 -0.0352\nvn 0.3472 -0.6793 0.6464\nvn 0.2568 -0.4701 0.8444\nvn 0.0720 -0.7923 -0.6058\nvn 0.1288 -0.9840 0.1225\nvn -0.3505 0.6590 0.6655\nvn 0.4135 0.6866 0.5979\nvn -0.1241 0.9529 0.2766\nvn -0.0519 -0.9036 0.4253\nvn 0.3990 0.1073 0.9106\nvn -0.9066 0.1476 0.3953\nvn -0.9559 0.0303 0.2921\nvn -0.9440 0.2018 0.2611\nvn -0.9115 -0.3191 0.2593\nvn -0.9333 -0.1126 0.3409\nvn -0.8218 -0.4969 0.2786\nvn 0.5818 -0.8078 0.0943\nvn -0.9543 -0.2047 0.2174\nvn 0.3161 -0.9073 0.2774\nvn -0.5715 0.8196 -0.0396\nvn -0.5662 0.8239 -0.0231\nvn -0.8021 0.5912 0.0845\nvn -0.4304 0.9025 0.0132\nvn -0.4526 0.0392 0.8908\nvn -0.9166 -0.0006 0.3999\nvn -0.8369 0.4264 0.3431\nvn 0.8018 0.5214 -0.2921\nvn -0.0788 0.9925 0.0930\nvn -0.9463 0.2883 0.1461\nvn -0.3217 -0.8196 -0.4740\nvn -0.4385 -0.4660 -0.7685\nvn 0.1234 0.9923 0.0007\nvn -0.4640 0.1022 -0.8799\nvn -0.8942 0.1434 -0.4241\nvn -0.3446 0.7051 -0.6197\nvn -0.9550 0.2450 0.1672\nvn -0.5938 0.7854 0.1747\nvn -0.8308 -0.4034 -0.3833\nvn -0.6218 -0.7544 -0.2102\nvn -0.2850 -0.9227 0.2597\nvn -0.4289 -0.8932 0.1351\nvn -0.7005 -0.6953 0.1607\nvn -0.2311 0.9729 0.0025\nvn -0.3793 -0.8523 0.3600\nvn -0.9089 0.3572 0.2150\nvn -0.3887 0.9048 -0.1740\nvn -0.8838 0.4272 0.1904\nvn -0.2090 0.9714 -0.1128\nvn 0.0552 0.9513 -0.3031\nvn -0.4149 0.9045 -0.0987\nvn -0.1823 0.9803 -0.0764\nusemtl None\ns 1\nf 19/1/1 25/2/2 21/3/3\nf 4/4/4 3/5/5 8/6/6 9/7/7\nf 20/8/8 12/9/9 11/10/10 19/1/1\nf 10/11/11 5/12/12 4/4/4 9/7/7\nf 7/13/13 2/14/14 1/15/15\nf 90/16/16 93/17/17 100/18/18 94/19/19\nf 3/5/5 2/14/14 7/13/13\nf 12/9/9 20/8/8 13/20/20\nf 75/21/21 74/22/22 79/23/23\nf 26/24/24 35/25/25 39/26/26 36/27/27\nf 8/6/6 14/28/28 16/29/29\nf 75/21/21 48/30/30 61/31/31\nf 7/13/13 1/15/15 55/32/32 50/33/33 41/34/34\nf 103/35/35 109/36/36 110/37/37\nf 19/1/1 18/38/38 24/39/39\nf 24/39/39 18/38/38 17/40/40 23/41/41\nf 39/26/26 38/42/42 44/43/43\nf 37/44/44 42/45/45 43/46/46\nf 22/47/47 20/8/8 21/3/3\nf 7/13/13 41/34/34 14/28/28\nf 98/48/48 99/49/49 88/50/50 87/51/51\nf 17/40/40 9/7/7 8/6/6 16/29/29\nf 36/27/27 39/26/26 45/52/52 40/53/53\nf 9/7/7 17/40/40 15/54/54\nf 61/31/31 60/55/55 67/56/56\nf 15/54/54 17/40/40 18/38/38\nf 19/1/1 21/3/3 20/8/8\nf 30/57/57 32/58/58 33/59/59\nf 29/60/60 30/57/57 16/29/29\nf 27/61/61 31/62/62 28/63/63\nf 99/49/49 104/64/64 105/65/65\nf 6/66/66 13/20/20 48/67/30 116/68/67\nf 27/61/61 28/63/63 21/3/3 25/2/2\nf 49/69/68 44/43/43 53/70/69\nf 11/10/10 118/71/70 5/12/12 10/11/11\nf 48/72/30 28/63/63 31/62/62 47/73/71\nf 35/25/25 26/24/24 24/39/39 23/41/41\nf 58/74/72 51/75/73 50/33/33 57/76/74\nf 48/77/30 13/20/20 20/8/8 28/63/63\nf 19/1/1 24/39/39 25/2/2\nf 35/25/25 33/59/59 37/44/44\nf 49/69/68 53/70/69 54/78/75\nf 52/79/76 43/46/46 42/45/45 51/75/73\nf 21/3/3 28/63/63 20/8/8 22/47/47\nf 7/13/13 14/28/28 8/6/6 3/5/5\nf 30/57/57 29/60/60 32/58/58\nf 82/80/77 78/81/78 81/82/79\nf 73/83/80 84/84/81 91/85/82 74/22/22\nf 73/83/80 78/81/78 82/80/77 84/84/81\nf 74/22/22 91/85/82 79/23/23\nf 27/61/61 36/27/27 34/86/83\nf 32/58/58 42/45/45 37/44/44 33/59/59\nf 53/70/69 44/43/43 43/46/46 52/79/76\nf 69/87/84 78/81/78 73/83/80\nf 14/28/28 41/34/34 32/58/58\nf 35/25/25 38/42/42 39/26/26\nf 46/88/85 49/69/68 54/78/75\nf 46/88/85 40/53/53 45/52/52\nf 86/89/86 92/90/87 87/51/51 71/91/88 68/92/89\nf 39/26/26 44/43/43 45/52/52\nf 50/33/33 55/32/32 57/76/74\nf 46/88/85 45/52/52 49/69/68\nf 26/24/24 36/27/27 27/61/61 25/2/2\nf 59/93/90 52/79/76 51/75/73 58/74/72\nf 66/94/91 59/93/90 58/74/72 65/95/92\nf 67/56/56 60/55/55 59/93/90 66/94/91\nf 45/52/52 44/43/43 49/69/68\nf 61/31/31 54/78/75 53/70/69 60/55/55\nf 55/32/32 56/96/93 62/97/94 57/76/74\nf 72/98/95 66/94/91 65/95/92\nf 38/42/42 35/25/25 37/44/44\nf 118/71/70 115/99/96 114/100/97 5/12/12\nf 62/97/94 63/101/98 68/92/89\nf 75/21/21 61/31/31 67/56/56 74/22/22\nf 54/78/75 61/31/31 48/102/30\nf 113/103/99 106/104/100 105/65/65 112/105/101\nf 77/106/102 66/94/91 72/98/95\nf 64/107/103 68/92/89 71/91/88\nf 69/87/84 66/94/91 78/81/78\nf 57/76/74 62/97/94 64/107/103\nf 107/108/104 114/100/97 115/99/96 108/109/105\nf 32/58/58 41/34/34 42/45/45\nf 66/94/91 77/106/102 81/82/79 78/81/78\nf 102/110/106 101/111/107 116/68/67\nf 106/104/100 100/18/18 93/17/17 105/65/65\nf 87/51/51 92/90/87 98/48/48\nf 56/96/93 63/101/98 62/97/94\nf 94/19/19 100/18/18 107/108/104\nf 81/82/79 90/16/16 82/80/77\nf 84/84/81 94/19/19 91/85/82\nf 101/111/107 95/112/108 108/109/105\nf 77/106/102 72/98/95 71/91/88\nf 63/101/98 70/113/109 68/92/89\nf 1/15/15 63/101/98 55/32/32\nf 58/74/72 57/76/74 64/107/103 65/95/92\nf 62/97/94 68/92/89 64/107/103\nf 50/33/33 51/75/73 42/45/45 41/34/34\nf 25/2/2 24/39/39 26/24/24\nf 69/87/84 73/83/80 67/56/56\nf 73/83/80 74/22/22 67/56/56\nf 95/112/108 101/111/107 80/114/110\nf 40/53/53 31/62/62 34/86/83\nf 60/55/55 53/70/69 52/79/76 59/93/90\nf 65/95/92 64/107/103 71/91/88 72/98/95\nf 91/85/82 94/19/19 95/112/108\nf 93/17/17 99/49/49 105/65/65\nf 29/60/60 16/29/29 14/28/28 32/58/58\nf 77/106/102 71/91/88 83/115/111\nf 56/96/93 55/32/32 63/101/98\nf 34/86/83 36/27/27 40/53/53\nf 88/50/50 83/116/111 87/51/51\nf 105/65/65 111/117/112 112/105/101\nf 38/42/42 37/44/44 43/46/46\nf 71/91/88 87/51/51 83/115/111\nf 81/82/79 83/116/111 88/50/50 89/118/113 93/17/17 90/16/16\nf 82/80/77 90/16/16 84/119/81\nf 91/85/82 95/112/108 79/23/23\nf 98/48/48 103/35/35 110/37/37 104/64/64\nf 6/66/66 12/9/9 13/20/20\nf 31/62/62 40/53/53 46/88/85 47/73/71\nf 66/94/91 69/87/84 67/56/56\nf 111/117/112 104/64/64 110/37/37\nf 96/120/114 109/36/36 103/35/35\nf 110/37/37 109/36/36 117/121/115 111/117/112\nf 84/84/81 90/16/16 94/19/19\nf 88/50/50 99/49/49 93/17/17 89/118/113\nf 80/114/110 79/23/23 95/112/108\nf 114/100/97 107/108/104 106/104/100 113/103/99\nf 99/49/49 98/48/48 104/64/64\nf 97/122/116 96/120/114 103/35/35\nf 86/89/86 68/92/89 70/113/109 76/123/117 85/124/117 96/120/114 97/122/116 103/35/35 98/48/48 92/90/87\nf 102/110/106 116/68/67 48/125/30\nf 115/99/96 116/68/67 101/111/107 108/109/105\nf 105/65/65 104/64/64 111/117/112\nf 100/18/18 106/104/100 107/108/104\nf 77/106/102 83/115/111 81/82/79\nf 48/125/30 75/21/21 79/23/23 80/114/110 101/111/107 102/110/106\nf 109/36/36 1/15/15 117/121/115\nf 34/86/83 31/62/62 27/61/61\nf 108/109/105 95/112/108 94/19/19 107/108/104\nf 63/101/98 1/15/15 109/36/36 96/120/114 85/124/117 76/123/117 70/113/109\nf 54/78/75 48/126/30 47/73/71 46/88/85\nf 112/105/101 117/121/115 3/5/5\nf 1/15/15 2/14/14 117/121/115\nf 112/105/101 111/117/112 117/121/115\nf 6/66/66 116/68/67 115/99/96 118/71/70\nf 112/105/101 3/5/5 4/4/4 113/103/99\nf 9/7/7 15/54/54 10/11/11\nf 15/54/54 18/38/38 19/1/1\nf 38/42/42 43/46/46 44/43/43\nf 30/57/57 33/59/59 35/25/25 23/41/41\nf 17/40/40 16/29/29 30/57/57 23/41/41\nf 117/121/115 2/14/14 3/5/5\nf 15/54/54 19/1/1 11/10/10 10/11/11\nf 113/103/99 4/4/4 5/12/12 114/100/97\nf 12/9/9 6/66/66 118/71/70 11/10/10\n`).children[0]! as Mesh;\n","import { useFrame } from \"@react-three/fiber\";\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport {\n  Color,\n  InstancedBufferGeometry,\n  InstancedMesh,\n  Matrix4,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  SphereBufferGeometry,\n  Vector3\n} from \"three\";\nimport { V3, V3O } from \"../../../libs/v3\";\nimport { chunkMesh } from \"./chunk\";\nimport { SceneContext } from \"./SceneContext\";\n\nfunction arrayOf<T>(creator: (index: number) => T, count: number) {\n  return Array.from({ length: count }).map((_, index) => creator(index));\n}\n\ninterface Particle {\n  position: V3;\n  velocity: V3;\n  startOffset: number;\n  resetAt: number;\n}\n\nconst colors = [\n  new Color(\"#ffA8F7\"),\n  new Color(\"#74B15A\"),\n  new Color(\"#F75648\"),\n  new Color(\"#00499F\"),\n];\n\nfunction useGravityParticles({\n  particleCount,\n  gravity,\n  duration,\n  startAtObject,\n  setInstance,\n  afterUpdate,\n  shouldReset,\n}: {\n  particleCount: number;\n  gravity: number;\n  duration: number;\n  startAtObject: { current: Object3D | undefined };\n  setInstance: (position: V3, index: number) => void;\n  afterUpdate?: (range: number) => void;\n  shouldReset?: () => boolean;\n}) {\n  const particles = useRef<Particle[]>();\n\n  useFrame((context, deltaTime: number) => {\n    if (!startAtObject.current) return;\n\n    const reset = shouldReset?.() ?? false;\n\n    const {\n      direction,\n      position: trackingPosition,\n    } = getWorldPositionAndDirection(startAtObject.current);\n\n    if (particles.current === undefined) {\n      particles.current = arrayOf<Particle>(\n        (index) => ({\n          position: V3O.copy(trackingPosition),\n          velocity: getVelocity(direction),\n          startOffset: (index / particleCount) * duration * Math.random(),\n          resetAt: 0,\n        }),\n        particleCount\n      );\n    }\n\n    const time = context.clock.getElapsedTime();\n\n    let positions = [];\n    for (let index = 0; index < particles.current.length; index++) {\n      const { velocity, position, startOffset, resetAt } = particles.current[\n        index\n      ]!;\n\n      if (resetAt + startOffset > time) {\n        velocity[1] += gravity * deltaTime;\n        position[0] += velocity[0] * deltaTime;\n        position[1] += velocity[1] * deltaTime;\n        position[2] += velocity[2] * deltaTime;\n        positions.push(position);\n      } else if (!reset) {\n        particles.current[index] = {\n          ...particles.current[index]!,\n          position: V3O.subtract(\n            V3O.add(V3O.copy(trackingPosition), V3O.randomRange(-0.2, 0.2)),\n            [0, 0.4, 0]\n          ),\n          velocity: getVelocity(direction),\n          startOffset,\n          resetAt: time,\n        };\n        positions.push(position);\n      } else {\n        particles.current[index] = {\n          ...particles.current[index]!,\n          position: V3O.subtract(\n            V3O.add(V3O.copy(trackingPosition), V3O.randomRange(-0.2, 0.2)),\n            [0, 0.4, 1.2]\n          ),\n          velocity: [0, 0, 0],\n          startOffset,\n        };\n        continue;\n      }\n\n      setInstance(position, positions.length - 1);\n    }\n\n    afterUpdate?.(positions.length);\n  });\n\n  function getVelocity(direction: V3): V3 {\n    return V3O.rotateAroundAxis(\n      V3O.scale(\n        V3O.rotateAroundAxis(direction, V3O.up(), (Math.random() - 0.5) * 0.3),\n        -5\n      ),\n      V3O.left(),\n      (Math.random() - 0.5) * 0.3\n    );\n  }\n}\n\nexport const RainbowVomit = ({ targetAspect }: { targetAspect: number }) => {\n  const aRObject = useRef<Mesh>();\n  const instances = useRef<\n    InstancedMesh<SphereBufferGeometry, MeshBasicMaterial>\n  >();\n\n  const vomitCount = 500;\n\n  useTrackedObject(aRObject, targetAspect);\n  const predictions = useContext(SceneContext).facemesh;\n\n  useEffect(() => {\n    if (!instances.current) return;\n    for (let index = 0; index < vomitCount; index++) {\n      instances.current?.setColorAt(index, colors[index % colors.length]!);\n    }\n    instances.current.instanceColor!.needsUpdate = true;\n  });\n\n  useGravityParticles({\n    particleCount: vomitCount,\n    gravity: -10,\n    duration: 2,\n    startAtObject: aRObject,\n    setInstance: (position, index) => {\n      if (!instances.current) return;\n      const matrix = getMatrixFromTransform(\n        position,\n        [0, 0, 0],\n        [0.3, 0.3, 0.3]\n      );\n      instances.current?.setMatrixAt(index, matrix);\n    },\n    afterUpdate: (range) => {\n      if (!instances.current) return;\n      if (!predictions.current[0]) {\n        instances.current.visible = false;\n      } else {\n        instances.current.visible = true;\n      }\n      instances.current.count = range;\n      instances.current.instanceMatrix.needsUpdate = true;\n    },\n    shouldReset: () =>\n      (predictions.current[0] && predictions.current[0].mouthOpened < 0.5) ||\n      false,\n  });\n\n  const args = useRef<[InstancedBufferGeometry, MeshBasicMaterial, number]>([\n    new InstancedBufferGeometry().copy(chunkMesh.geometry),\n    new MeshBasicMaterial({ toneMapped: false }),\n    vomitCount,\n  ]);\n\n  return (\n    <>\n      <group ref={aRObject} frustumCulled={false}></group>\n      <instancedMesh\n        frustumCulled={false}\n        ref={instances}\n        args={args.current}\n      ></instancedMesh>\n    </>\n  );\n};\n\nfunction getWorldPositionAndDirection(object: Object3D) {\n  const objectPosition = new Vector3();\n  object.getWorldPosition(objectPosition);\n\n  const direction = new Vector3();\n  object.getWorldDirection(direction);\n  return {\n    position: V3O.fromVector3(objectPosition),\n    direction: V3O.fromVector3(direction),\n  };\n}\n\nfunction useTrackedObject(\n  aRObject: React.MutableRefObject<Object3D | undefined>,\n  targetAspect: number\n) {\n  const predictions = useContext(SceneContext).facemesh;\n\n  useFrame(({ viewport }) => {\n    const prediction = predictions.current[0];\n    if (!prediction) return;\n    if (!aRObject.current) return;\n\n    const mesh = prediction.mesh as V3[];\n    const { up, forward } = prediction.orthoVectors;\n\n    let scale: V3;\n    if (viewport.aspect < targetAspect) {\n      // Is taller than webcam aspect\n      scale = [viewport.height, viewport.height / targetAspect, 1];\n    } else {\n      // Is wider than webcam aspect\n      scale = [viewport.height * targetAspect, viewport.height, 1];\n    }\n\n    aRObject.current.position\n      .set(...mesh[13]!)\n      .add(new Vector3(-0.5, 0.5, 0.5))\n      .multiply(new Vector3(scale[0], scale[1], 1));\n\n    const worldPosition = new Vector3();\n    aRObject.current.getWorldPosition(worldPosition);\n    aRObject.current.up.copy(up);\n    aRObject.current.lookAt(forward.clone().negate().add(worldPosition));\n  });\n}\n\nconst transformHolder = new Object3D();\ntransformHolder.matrixAutoUpdate = false;\nfunction getMatrixFromTransform(\n  position: V3,\n  rotation: V3,\n  scale: V3\n): Matrix4 {\n  transformHolder.position.set(...position);\n  transformHolder.rotation.set(...rotation);\n  transformHolder.scale.set(...scale);\n  transformHolder.updateMatrix();\n\n  return transformHolder.matrix;\n}\n","import { useFrame, useThree } from \"@react-three/fiber\";\nimport { memo, useMemo, useRef } from \"react\";\nimport { BufferGeometry, Mesh, RawShaderMaterial } from \"three\";\n\nexport const StaticBackground = memo(() => {\n  const ref = useRef<Mesh<BufferGeometry, RawShaderMaterial>>(null);\n  const uniforms = useMemo(\n    () => ({\n      u_time: { value: 0.4 },\n    }),\n    []\n  );\n\n  const { viewport } = useThree();\n\n  useFrame((context) => {\n    if (!ref.current) return;\n    ref.current.material.uniforms.u_time!.value =\n      context.clock.getElapsedTime() * 0.2;\n  });\n  return (\n    <mesh\n      ref={ref}\n      position={[0.0, -0.0, 0.0]}\n      scale={[viewport.width, viewport.height, 1.0]}\n    >\n      <planeBufferGeometry />\n      <shaderMaterial\n        uniforms={uniforms}\n        fragmentShader={fragmentShader}\n        vertexShader={vertexShader}\n      />\n    </mesh>\n  );\n});\nconst fragmentShader = `\nvarying vec2 vUv;\nuniform float u_time;\n\n// 2D Random\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))\n                 * 43758.5453123 + u_time*10.0);\n}\n\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n\n    vec2 u = f*f*(3.0-2.0*f);\n    u = smoothstep(0.,1.,f);\n\n    // Mix 4 coorners percentages\n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n}\n\nvoid main() {\n\n    vec2 pos = vec2(vUv*800.0);\n\n    float n1 = noise(pos + vec2(random(pos)));\n    float n2 =  noise(pos - vec2(random(pos)));\n    float n3 = noise(pos);\n\n    gl_FragColor = vec4(n1,n2,n3, 1.0);\n}\n`;\nconst vertexShader = `\nvarying vec2 vUv;\n\nvoid main() {\n\n\t#include <uv_vertex>\n\n\tvec3 transformed = vec3( position );\n  vUv = uv.xy;\n  vec4 mvPosition = vec4( transformed, 1.0 );\n  mvPosition = modelViewMatrix * mvPosition;\n  mvPosition = projectionMatrix * mvPosition;\n  gl_Position = vec4(mvPosition.x * 2.0, mvPosition.y * 2.0, 10.0, 10.0);\n}`;\n","import React, { PropsWithChildren } from \"react\";\nimport { useThree } from \"@react-three/fiber\";\nimport { V3 } from \"../../../libs/v3\";\n\n/**\n * Makes world scale 0-1, and position 0-1 for width and height\n */\nexport const WorldOffset = ({\n  children,\n  targetAspect,\n}: PropsWithChildren<{ targetAspect: number }>) => {\n  const { viewport } = useThree();\n\n  let scale: V3;\n  if (viewport.aspect < targetAspect) {\n    // Is taller than webcam aspect\n    scale = [viewport.height, viewport.height / targetAspect, 1];\n  } else {\n    // Is wider than webcam aspect\n    scale = [viewport.height * targetAspect, viewport.height, 1];\n  }\n  return (\n    <group scale={scale} position={[-scale[0] / 2, scale[1] / 2, 0]}>\n      {children}\n    </group>\n  );\n};\n","import { Canvas } from \"@react-three/fiber\";\nimport React, { useState } from \"react\";\nimport { useAnimationFrame } from \"../../../hooks/useAnimationFrame\";\nimport { useWebcam } from \"../../../hooks/useWebcam\";\nimport { store } from \"../../../store/store\";\nimport { usePredictions } from \"../../../hooks/usePredictions\";\nimport { Mask } from \"./Mask\";\nimport { RainbowVomit } from \"./RainbowVomit\";\nimport { SceneContext } from \"./SceneContext\";\nimport { StaticBackground } from \"./StaticBackground\";\nimport { WorldOffset } from \"./WorldOffset\";\n\nexport const Part1 = ({\n  maskType,\n}: {\n  maskType: \"video\" | \"brett\" | \"own\";\n}) => {\n  const { webcam, aspect } = useWebcam();\n\n  const [hasFirstPrediction, setHasFirstPrediction] = useState(false);\n\n  useAnimationFrame(1, () => {\n    if (predictions.current.length > 0 && !hasFirstPrediction) {\n      setHasFirstPrediction(true);\n      store.setState({ isFirstPredictionComplete: true });\n    }\n  });\n\n  const predictions = usePredictions(webcam);\n  return (\n    <Canvas\n      style={{\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      orthographic={false}\n    >\n      <SceneContext.Provider value={{ facemesh: predictions }}>\n        <StaticBackground></StaticBackground>\n        {hasFirstPrediction && (\n          <>\n            <WorldOffset targetAspect={aspect}>\n              <Mask track=\"center\" maskType={maskType} webcam={webcam}></Mask>\n            </WorldOffset>\n            <RainbowVomit targetAspect={aspect} />\n          </>\n        )}\n      </SceneContext.Provider>\n    </Canvas>\n  );\n};\n","import { useEffect, useMemo, useState } from \"react\";\nimport { useStore } from \"../store/store\";\n\nexport function useWebcam() {\n  const webcamStream = useStore((state) => state.webcamStream);\n  const webcam = useMemo(() => document.createElement(\"video\"), []);\n  const [aspect, setAspect] = useState(window.innerWidth / window.innerHeight);\n\n  useEffect(() => {\n    if (!webcamStream) return;\n\n    if (webcam.srcObject !== webcamStream) {\n      webcam.srcObject = webcamStream;\n      webcam.play();\n    }\n\n    const track = webcamStream.getVideoTracks()[0]!;\n    webcam.width = track.getSettings().width!;\n    webcam.height = track.getSettings().height!;\n\n    const videoAspect = webcam.width / webcam.height;\n\n    setAspect(videoAspect);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [webcamStream]);\n\n  return { webcam, aspect };\n}\n","import \"@tensorflow/tfjs-backend-webgl\";\nimport { Box } from \"grommet\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useChapter } from \"../../hooks/useChapter\";\nimport videoSrc from \"./chapter2.mp4\";\nimport { Part1 } from \"./part1/Part1\";\n\nexport default function Chapter2() {\n  const ref = useRef<HTMLVideoElement>(null);\n\n  useChapter(ref, true);\n\n  const [part, setPart] = useState<\n    \"SCREEN_1_MASK_1\" | \"SCREEN_1_MASK_2\" | \"SCREEN_1_MASK_3\" | \"SCREEN_2\"\n  >(\"SCREEN_1_MASK_1\");\n\n  console.log(\"render\");\n  useEffect(() => {\n    if (!ref.current) return;\n    const video = ref.current;\n    const onTimeUpdate = ({ nativeEvent: event }: { nativeEvent: Event }) => {\n      const video = event.target as HTMLVideoElement;\n      const seconds = Math.round(video.currentTime);\n      console.log(seconds);\n\n      if (seconds < 25) {\n        setPart(\"SCREEN_1_MASK_1\");\n      } else if (seconds < 28) {\n        setPart(\"SCREEN_1_MASK_2\");\n      } else if (seconds < 47) {\n        setPart(\"SCREEN_1_MASK_3\");\n      } else {\n        setPart(\"SCREEN_2\");\n      }\n    };\n\n    video.ontimeupdate = (event) => onTimeUpdate({ nativeEvent: event });\n  }, []);\n\n  const maskType =\n    part === \"SCREEN_1_MASK_1\"\n      ? \"video\"\n      : part === \"SCREEN_1_MASK_2\"\n      ? \"brett\"\n      : \"own\";\n\n  return (\n    <Box\n      style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}\n      align=\"center\"\n      overflow=\"hidden\"\n    >\n      {part !== \"SCREEN_2\" && <Part1 maskType={maskType} />}\n      <video\n        ref={ref}\n        style={{\n          boxSizing: \"border-box\",\n          outline: \"none\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n        width=\"100%\"\n        height=\"100%\"\n        src={videoSrc}\n      ></video>\n    </Box>\n  );\n}\n"],"sourceRoot":""}