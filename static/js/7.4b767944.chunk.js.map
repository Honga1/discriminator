{"version":3,"sources":["hooks/useChapter.tsx","pages/chapters/chapter3/Part1Screen2.tsx","hooks/useResize.tsx","pages/chapters/chapter3/Chapter3.tsx","hooks/useTimer.tsx"],"names":["useChapter","ref","play","useCallback","current","pause","rewind","currentTime","getIsPlaying","paused","ended","readyState","getProgress","duration","setProgress","progress","seekTimeDelta","delta","target","clippedTarget","Math","min","max","onClick","useEffect","updateStore","store","setState","chapter","intention","video","addEventListener","removeEventListener","undefined","Part1Screen2","memo","useContext","ResponsiveContext","NormalLayout","Grid","fill","pad","areas","name","start","end","columns","rows","gap","Box","gridArea","align","amount","Text","color","flex","height","width","justify","style","position","overflow","AnimateEverything","top","left","right","bottom","styled","StackedBoxes","useState","setDimensions","columnCount","ceil","dimensions","window","innerWidth","innerHeight","onResize","useResize","RotatedBox","transform","random","border","size","background","boxesLeft","Array","map","_","index","boxesRight","useRef","containerDimensions","getBoundingClientRect","columnWidth","maxHeight","reducedHeight","maxWidth","reducedWithGap","shrinkAndMaintainAspectRatio","horizontal","direction","shrinkWidth","shrinkHeight","reducedWidth","originalAspectRatio","Chapter3","Component","options","second","setSecond","reset","console","log","interval","setInterval","loopAt","clearInterval","useTimer","useNextStep"],"mappings":"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","file":"static/js/7.4b767944.chunk.js","sourcesContent":["import { useCallback, useEffect } from \"react\";\nimport { store } from \"../store/store\";\n\nexport function useChapter(ref: React.RefObject<HTMLVideoElement>) {\n  const play = useCallback(() => ref.current?.play(), [ref]);\n  const pause = useCallback(() => ref.current?.pause(), [ref]);\n  const rewind = useCallback(() => {\n    if (ref.current) ref.current.currentTime = 0;\n  }, [ref]);\n  const getIsPlaying = useCallback(() => {\n    if (!ref.current) return false;\n    return !!(\n      ref.current.currentTime > 0 &&\n      !ref.current.paused &&\n      !ref.current.ended &&\n      ref.current.readyState > 2\n    );\n  }, [ref]);\n\n  const getProgress = useCallback(() => {\n    if (!ref.current) return 0;\n    return ref.current.currentTime / ref.current.duration;\n  }, [ref]);\n\n  const setProgress = useCallback(\n    (progress: number) => {\n      if (!ref.current) return;\n      ref.current.currentTime = progress * ref.current.duration;\n    },\n    [ref]\n  );\n\n  const seekTimeDelta = useCallback(\n    (delta: number) => {\n      if (!ref.current) return;\n      const target = ref.current.currentTime + delta;\n      const clippedTarget = Math.min(Math.max(0, target), ref.current.duration);\n      ref.current.currentTime = clippedTarget;\n    },\n    [ref]\n  );\n  const onClick = useCallback(() => (getIsPlaying() ? pause() : play()), [\n    getIsPlaying,\n    pause,\n    play,\n  ]);\n\n  useEffect(() => {\n    const updateStore = () => {\n      return store.setState({\n        chapter: {\n          play,\n          pause,\n          rewind,\n          getIsPlaying,\n          getProgress,\n          setProgress,\n          seekTimeDelta,\n          progress: getProgress(),\n          intention: getIsPlaying() ? \"PLAY\" : \"PAUSE\",\n        },\n      });\n    };\n\n    const video = ref.current;\n\n    ref.current?.addEventListener(\"click\", onClick);\n    ref.current?.addEventListener(\"playing\", updateStore);\n    ref.current?.addEventListener(\"pause\", updateStore);\n    ref.current?.addEventListener(\"timeupdate\", updateStore);\n    updateStore();\n    return () => {\n      video?.removeEventListener(\"click\", onClick);\n      video?.removeEventListener(\"play\", updateStore);\n      video?.removeEventListener(\"pause\", updateStore);\n      video?.removeEventListener(\"timeupdate\", updateStore);\n      store.setState({ chapter: undefined });\n    };\n  }, [\n    getIsPlaying,\n    pause,\n    play,\n    getProgress,\n    rewind,\n    setProgress,\n    seekTimeDelta,\n    ref,\n    onClick,\n  ]);\n}\n","import { Box, Grid, ResponsiveContext, Text } from \"grommet\";\nimport { memo, useContext, useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useResize } from \"../../../hooks/useResize\";\n\nexport const Part1Screen2 = memo(() => {\n  const isSmall = useContext(ResponsiveContext) === \"small\";\n\n  const NormalLayout = (\n    <Grid\n      fill=\"vertical\"\n      pad={\"32px\"}\n      areas={[\n        { name: \"stackedBoxes2006\", start: [0, 0], end: [0, 0] },\n        { name: \"stackedBoxes2007\", start: [1, 0], end: [1, 0] },\n        { name: \"stackedBoxes2010\", start: [2, 0], end: [3, 0] },\n        { name: \"stackedBoxes2011\", start: [4, 0], end: [5, 0] },\n        { name: \"stackedBoxes2012\", start: [6, 0], end: [6, 0] },\n        { name: \"stackedBoxes2013\", start: [7, 0], end: [7, 0] },\n        { name: \"text2006\", start: [0, 1], end: [0, 1] },\n        { name: \"text2007\", start: [1, 1], end: [1, 1] },\n        { name: \"text2010\", start: [2, 1], end: [3, 1] },\n        { name: \"text2011\", start: [4, 1], end: [5, 1] },\n        { name: \"text2012\", start: [6, 1], end: [6, 1] },\n        { name: \"text2013\", start: [7, 1], end: [7, 1] },\n      ]}\n      columns={[\"flex\", \"flex\", \"flex\", \"flex\", \"flex\", \"flex\", \"flex\", \"flex\"]}\n      rows={[\"flex\", \"auto\"]}\n      gap={\"16px\"}\n    >\n      <Box gridArea=\"stackedBoxes2006\" align=\"center\">\n        <StackedBoxes amount={3} />\n      </Box>\n      <Box gridArea=\"stackedBoxes2007\" align=\"center\">\n        <StackedBoxes amount={6} />\n      </Box>\n      <Box gridArea=\"stackedBoxes2010\" align=\"center\">\n        <StackedBoxes amount={15} />\n      </Box>\n      <Box gridArea=\"stackedBoxes2011\" align=\"center\">\n        <StackedBoxes amount={16} />\n      </Box>\n      <Box gridArea=\"stackedBoxes2012\" align=\"center\">\n        <StackedBoxes amount={1} />\n      </Box>\n      <Box gridArea=\"stackedBoxes2013\" align=\"center\">\n        <StackedBoxes amount={5} />\n      </Box>\n      <Box gridArea=\"text2006\" align=\"center\">\n        <Text color=\"white\">2006</Text>\n      </Box>\n      <Box gridArea=\"text2007\" align=\"center\">\n        <Text color=\"white\">2007</Text>\n      </Box>\n      <Box gridArea=\"text2010\" align=\"center\">\n        <Text color=\"white\">2010</Text>\n      </Box>\n      <Box gridArea=\"text2011\" align=\"center\">\n        <Text color=\"white\">2011</Text>\n      </Box>\n      <Box gridArea=\"text2012\" align=\"center\">\n        <Text color=\"white\">2012</Text>\n      </Box>\n      <Box gridArea=\"text2013\" align=\"center\">\n        <Text color=\"white\">2013</Text>\n      </Box>\n    </Grid>\n  );\n\n  return (\n    <Box\n      flex={false}\n      height=\"100%\"\n      width=\"100%\"\n      justify=\"center\"\n      pad=\"48px\"\n      style={{ position: \"relative\", overflow: \"hidden\" }}\n    >\n      <AnimateEverything\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          overflow: \"hidden\",\n        }}\n      >\n        {isSmall ? NormalLayout : NormalLayout}\n      </AnimateEverything>\n    </Box>\n  );\n});\n\nconst AnimateEverything = styled(Box)`\n  transition: all 5s ease-in-out;\n  transform: matrix(1, 0, 0, 1, 0, 0);\n\n  /* matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY()) */\n  &:hover {\n    transform: matrix(3, 0, 0, 3, 500, 500);\n  }\n`;\n\nconst StackedBoxes = ({ amount }: { amount: number }) => {\n  const [[width, height], setDimensions] = useState([0, 0]);\n  const cellsPerColumn = 8;\n\n  const columnCount = Math.ceil(amount / cellsPerColumn);\n\n  const dimensions = useResize();\n  const RotatedBox = () => (\n    <Box\n      flex={false}\n      width={width * 100 + \"%\"}\n      height={height * 100 + \"%\"}\n      style={{ position: \"relative\" }}\n    >\n      <Box\n        style={{\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          position: \"absolute\",\n          transform: `rotate(${Math.random() * 180 - 90}deg)`,\n        }}\n        border={{ size: \"2px\", color: \"#FF4E4E\" }}\n        background=\"rgba(255, 89, 89, 0.2)\"\n      ></Box>\n    </Box>\n  );\n\n  const boxesLeft = [\n    ...new Array(Math.min(amount, cellsPerColumn)),\n  ].map((_, index) => <RotatedBox key={index} />);\n  const boxesRight = [\n    ...new Array(Math.max(amount - Math.min(amount, cellsPerColumn), 0)),\n  ].map((_, index) => <RotatedBox key={index} />);\n\n  const ref = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (!ref.current) return;\n    const containerDimensions = ref.current.getBoundingClientRect();\n    const maxHeight = 1 / cellsPerColumn;\n    const desiredAspect = 4 / 3;\n\n    // First try fit by scaling width\n    const columnWidth =\n      (maxHeight * desiredAspect * containerDimensions.height) /\n      (containerDimensions.width / columnCount);\n    const maxWidth = 1;\n\n    const isColumnTooWide = maxWidth <= columnWidth;\n\n    if (isColumnTooWide) {\n      const reducedHeight =\n        ((maxWidth / desiredAspect) * containerDimensions.width) /\n        containerDimensions.height /\n        columnCount;\n\n      const reducedWithGap = shrinkAndMaintainAspectRatio(\n        maxWidth,\n        reducedHeight,\n        0,\n        0\n      );\n      setDimensions(reducedWithGap);\n    } else {\n      const reducedWithGap = shrinkAndMaintainAspectRatio(\n        columnWidth,\n        maxHeight,\n        0,\n        0\n      );\n\n      setDimensions(reducedWithGap);\n    }\n  }, [columnCount, dimensions]);\n\n  return (\n    <Box\n      width=\"100%\"\n      height=\"100%\"\n      align=\"end\"\n      pad={{ horizontal: (columnCount - 1) * 16 + \"px\" }}\n    >\n      <Box ref={ref} width=\"100%\" height=\"100%\" align=\"end\">\n        <Box\n          width=\"100%\"\n          direction=\"row\"\n          height=\"100%\"\n          justify=\"center\"\n          align=\"end\"\n          gap=\"10px\"\n        >\n          <Box height=\"100%\" width=\"100%\" align={\"center\"} justify=\"end\">\n            {boxesLeft}\n          </Box>\n          {columnCount === 2 && (\n            <Box\n              direction=\"column\"\n              height=\"100%\"\n              width=\"100%\"\n              align=\"center\"\n              justify=\"end\"\n            >\n              {boxesRight}\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst shrinkAndMaintainAspectRatio = (\n  width: number,\n  height: number,\n  shrinkWidth: number,\n  shrinkHeight: number\n): [width: number, height: number] => {\n  const reducedWidth = width - shrinkWidth;\n  const reducedHeight = height - shrinkHeight;\n\n  const originalAspectRatio = width / height;\n\n  const newAspect = reducedWidth / reducedHeight;\n  if (newAspect > originalAspectRatio) {\n    return [reducedHeight * originalAspectRatio, reducedHeight];\n  } else {\n    return [reducedWidth, reducedWidth / originalAspectRatio];\n  }\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useResize = () => {\n  const [dimensions, setDimensions] = useState<{\n    width: number;\n    height: number;\n  }>({ width: window.innerWidth, height: window.innerHeight });\n  useEffect(() => {\n    const onResize = () => {\n      setDimensions({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener(\"resize\", onResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n\n  return dimensions;\n};\n","import { useRef } from \"react\";\nimport { useChapter } from \"../../../hooks/useChapter\";\nimport { useNextStep } from \"../../../hooks/useNextStep\";\nimport { useTimer } from \"../../../hooks/useTimer\";\nimport { Part1Screen1 } from \"./Part1Screen1\";\nimport { Part1Screen2 } from \"./Part1Screen2\";\nexport default function Chapter3() {\n  const ref = useRef<HTMLVideoElement>(null);\n\n  const [second, reset] = useTimer();\n  const nextStep = useNextStep();\n\n  let part = 1;\n  let screen: 1 | 2 = 2 as 1 | 2;\n\n  // if (second > 40) {\n  //   nextStep();\n  // } else if (second > 20) {\n  //   screen = 2;\n  // }\n\n  console.log(second);\n\n  useChapter(ref);\n\n  let Component;\n  switch (part) {\n    case 1:\n      switch (screen) {\n        case 1:\n          Component = Part1Screen1;\n          break;\n        case 2:\n          Component = Part1Screen2;\n          break;\n        default:\n          Component = Part1Screen1;\n      }\n      break;\n    default:\n      Component = Part1Screen1;\n  }\n\n  return <Component />;\n}\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport const useTimer = (options?: { loopAt: number | undefined }) => {\n  const [second, setSecond] = useState(0);\n\n  const reset = useCallback(() => {\n    setSecond(0);\n    console.log(\"resetting\");\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSecond((second) => {\n        if (options?.loopAt) {\n          return (second + 1) % options.loopAt;\n        }\n\n        return second + 1;\n      });\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [options?.loopAt]);\n\n  return [second, reset] as const;\n};\n"],"sourceRoot":""}