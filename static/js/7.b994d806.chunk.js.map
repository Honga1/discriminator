{"version":3,"sources":["720p.mp4","hooks/useChapter.tsx","pages/chapters/Chapter4.tsx"],"names":["useChapter","ref","play","useCallback","current","pause","rewind","currentTime","getIsPlaying","paused","ended","readyState","getProgress","duration","setProgress","progress","seekTimeDelta","delta","target","clippedTarget","Math","min","max","onClick","useEffect","updateStore","store","setState","chapter","intention","video","addEventListener","removeEventListener","undefined","Chapter4","useRef","style","boxSizing","outline","width","height","src","videoSrc"],"mappings":"8FAAe,QAA0B,kC,iCCAzC,oDAGO,SAASA,EAAWC,GACzB,IAAMC,EAAOC,uBAAY,kCAAMF,EAAIG,eAAV,aAAM,EAAaF,SAAQ,CAACD,IAC/CI,EAAQF,uBAAY,kCAAMF,EAAIG,eAAV,aAAM,EAAaC,UAAS,CAACJ,IACjDK,EAASH,uBAAY,WACrBF,EAAIG,UAASH,EAAIG,QAAQG,YAAc,KAC1C,CAACN,IACEO,EAAeL,uBAAY,WAC/B,QAAKF,EAAIG,YAEPH,EAAIG,QAAQG,YAAc,IACzBN,EAAIG,QAAQK,SACZR,EAAIG,QAAQM,OACbT,EAAIG,QAAQO,WAAa,KAE1B,CAACV,IAEEW,EAAcT,uBAAY,WAC9B,OAAKF,EAAIG,QACFH,EAAIG,QAAQG,YAAcN,EAAIG,QAAQS,SADpB,IAExB,CAACZ,IAEEa,EAAcX,uBAClB,SAACY,GACMd,EAAIG,UACTH,EAAIG,QAAQG,YAAcQ,EAAWd,EAAIG,QAAQS,YAEnD,CAACZ,IAGGe,EAAgBb,uBACpB,SAACc,GACC,GAAKhB,EAAIG,QAAT,CACA,IAAMc,EAASjB,EAAIG,QAAQG,YAAcU,EACnCE,EAAgBC,KAAKC,IAAID,KAAKE,IAAI,EAAGJ,GAASjB,EAAIG,QAAQS,UAChEZ,EAAIG,QAAQG,YAAcY,KAE5B,CAAClB,IAEGsB,EAAUpB,uBAAY,kBAAOK,IAAiBH,IAAUH,MAAS,CACrEM,EACAH,EACAH,IAGFsB,qBAAU,WAAO,IAAD,QACRC,EAAc,WAClB,OAAOC,IAAMC,SAAS,CACpBC,QAAS,CACP1B,OACAG,QACAC,SACAE,eACAI,cACAE,cACAE,gBACAD,SAAUH,IACViB,UAAWrB,IAAiB,OAAS,YAKrCsB,EAAQ7B,EAAIG,QAOlB,OALA,UAAAH,EAAIG,eAAJ,SAAa2B,iBAAiB,QAASR,GACvC,UAAAtB,EAAIG,eAAJ,SAAa2B,iBAAiB,UAAWN,GACzC,UAAAxB,EAAIG,eAAJ,SAAa2B,iBAAiB,QAASN,GACvC,UAAAxB,EAAIG,eAAJ,SAAa2B,iBAAiB,aAAcN,GAC5CA,IACO,WACA,OAALK,QAAK,IAALA,KAAOE,oBAAoB,QAAST,GAC/B,OAALO,QAAK,IAALA,KAAOE,oBAAoB,OAAQP,GAC9B,OAALK,QAAK,IAALA,KAAOE,oBAAoB,QAASP,GAC/B,OAALK,QAAK,IAALA,KAAOE,oBAAoB,aAAcP,GACzCC,IAAMC,SAAS,CAAEC,aAASK,OAE3B,CACDzB,EACAH,EACAH,EACAU,EACAN,EACAQ,EACAE,EACAf,EACAsB,M,iCCvFJ,mFAIe,SAASW,IACtB,IAAMjC,EAAMkC,iBAAyB,MAGrC,OAFAnC,YAAWC,GAGT,uBACEA,IAAKA,EACLmC,MAAO,CACLC,UAAW,aACXC,QAAS,OACTC,MAAO,OACPC,OAAQ,QAEVD,MAAM,OACNC,OAAO,OACPC,IAAKC","file":"static/js/7.b994d806.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/720p.40b0841d.mp4\";","import { useCallback, useEffect } from \"react\";\nimport { store } from \"../store/store\";\n\nexport function useChapter(ref: React.RefObject<HTMLVideoElement>) {\n  const play = useCallback(() => ref.current?.play(), [ref]);\n  const pause = useCallback(() => ref.current?.pause(), [ref]);\n  const rewind = useCallback(() => {\n    if (ref.current) ref.current.currentTime = 0;\n  }, [ref]);\n  const getIsPlaying = useCallback(() => {\n    if (!ref.current) return false;\n    return !!(\n      ref.current.currentTime > 0 &&\n      !ref.current.paused &&\n      !ref.current.ended &&\n      ref.current.readyState > 2\n    );\n  }, [ref]);\n\n  const getProgress = useCallback(() => {\n    if (!ref.current) return 0;\n    return ref.current.currentTime / ref.current.duration;\n  }, [ref]);\n\n  const setProgress = useCallback(\n    (progress: number) => {\n      if (!ref.current) return;\n      ref.current.currentTime = progress * ref.current.duration;\n    },\n    [ref]\n  );\n\n  const seekTimeDelta = useCallback(\n    (delta: number) => {\n      if (!ref.current) return;\n      const target = ref.current.currentTime + delta;\n      const clippedTarget = Math.min(Math.max(0, target), ref.current.duration);\n      ref.current.currentTime = clippedTarget;\n    },\n    [ref]\n  );\n  const onClick = useCallback(() => (getIsPlaying() ? pause() : play()), [\n    getIsPlaying,\n    pause,\n    play,\n  ]);\n\n  useEffect(() => {\n    const updateStore = () => {\n      return store.setState({\n        chapter: {\n          play,\n          pause,\n          rewind,\n          getIsPlaying,\n          getProgress,\n          setProgress,\n          seekTimeDelta,\n          progress: getProgress(),\n          intention: getIsPlaying() ? \"PLAY\" : \"PAUSE\",\n        },\n      });\n    };\n\n    const video = ref.current;\n\n    ref.current?.addEventListener(\"click\", onClick);\n    ref.current?.addEventListener(\"playing\", updateStore);\n    ref.current?.addEventListener(\"pause\", updateStore);\n    ref.current?.addEventListener(\"timeupdate\", updateStore);\n    updateStore();\n    return () => {\n      video?.removeEventListener(\"click\", onClick);\n      video?.removeEventListener(\"play\", updateStore);\n      video?.removeEventListener(\"pause\", updateStore);\n      video?.removeEventListener(\"timeupdate\", updateStore);\n      store.setState({ chapter: undefined });\n    };\n  }, [\n    getIsPlaying,\n    pause,\n    play,\n    getProgress,\n    rewind,\n    setProgress,\n    seekTimeDelta,\n    ref,\n    onClick,\n  ]);\n}\n","import { useRef } from \"react\";\nimport videoSrc from \"./../../720p.mp4\";\nimport { useChapter } from \"../../hooks/useChapter\";\n\nexport default function Chapter4() {\n  const ref = useRef<HTMLVideoElement>(null);\n  useChapter(ref);\n\n  return (\n    <video\n      ref={ref}\n      style={{\n        boxSizing: \"border-box\",\n        outline: \"none\",\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      width=\"100%\"\n      height=\"100%\"\n      src={videoSrc}\n    ></video>\n  );\n}\n"],"sourceRoot":""}